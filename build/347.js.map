{"version":3,"file":"347.js","mappings":"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","sources":["webpack://block-collections/./src/blocks/CustomFooks.js","webpack://block-collections/./src/blocks/LabelBox .js","webpack://block-collections/./src/blocks/ShadowStyle.js","webpack://block-collections/./src/blocks/TypographyControls.js","webpack://block-collections/./src/blocks/design-select/edit.js","webpack://block-collections/./src/blocks/hslToRgb.js","webpack://block-collections/./src/blocks/iframeFooks.js","webpack://block-collections/./node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useRef, useEffect, useState } from '@wordpress/element';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n//useRefで参照したDOM要素の大きさを取得するカスタムフック\r\nexport function useElementWidth() {\r\n  const ref = useRef(null);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      for (let entry of entries) {\r\n        setWidth(entry.contentRect.width);\r\n      }\r\n    });\r\n\r\n    if (ref.current) {\r\n      resizeObserver.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return [ref, width];\r\n}\r\n\r\n//ブロックの背景色を取得するカスタムフック\r\nexport function useElementBackgroundColor(blockRef, style) {\r\n  const [baseColor, setBaseColor] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (blockRef.current && style) {\r\n      if (style.backgroundColor && !style.backgroundColor.startsWith(\"var(--wp\")) {//backgroundColorが設定されており、それがカスタムプロパティでない\r\n        setBaseColor(style.backgroundColor);\r\n      } else {//レンダリング結果から背景色を取得\r\n        if (blockRef.current) {\r\n          const computedStyles = getComputedStyle(blockRef.current);\r\n          setBaseColor(computedStyles.backgroundColor);\r\n        }\r\n      }\r\n    }\r\n\r\n  }, [style, blockRef]);\r\n\r\n  return baseColor;\r\n}\r\n\r\n//ViewPortの大きさでモバイルを判断(767px以下がモバイル)するカスタムフック\r\nexport function useIsMobile() {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const handleResize = () => {\r\n        setIsMobile(window.innerWidth <= 767);\r\n      };\r\n\r\n      window.addEventListener('resize', handleResize);\r\n\r\n      return () => {\r\n        window.removeEventListener('resize', handleResize);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return isMobile;\r\n};\r\n\r\nexport function useIsIframeMobile() {\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // iframeのcontentWindowを監視する関数\r\n    const checkIframeSize = () => {\r\n      const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n      if (iframeInstance && iframeInstance.contentWindow) {\r\n        setIsMobile(iframeInstance.contentWindow.innerWidth <= 767);\r\n      }\r\n    };\r\n\r\n    // iframeのcontentWindowのリサイズイベントにリスナーを追加\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n    if (iframeInstance && iframeInstance.contentWindow) {\r\n      iframeInstance.contentWindow.addEventListener('resize', checkIframeSize);\r\n    }\r\n\r\n    // 初期チェックを実行\r\n    checkIframeSize();\r\n\r\n    // クリーンアップ関数\r\n    return () => {\r\n      if (iframeInstance && iframeInstance.contentWindow) {\r\n        iframeInstance.contentWindow.removeEventListener('resize', checkIframeSize);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return isMobile;\r\n}\r\n\r\n\r\n//たくさんの要素をもつオブジェクトや配列の内容の変化で発火するuseEffect\r\nexport function useDeepCompareEffect(callback, dependencies) {\r\n  const dependenciesRef = useRef();\r\n\r\n  if (!isEqual(dependencies, dependenciesRef.current)) {\r\n    dependenciesRef.current = dependencies;\r\n  }\r\n\r\n  useEffect(() => {\r\n    return callback();\r\n  }, [dependenciesRef.current]);\r\n}\r\n","import { __ } from \"@wordpress/i18n\";\nimport TypographyControls from \"./TypographyControls\";\nimport { useStyleIframe } from \"./iframeFooks\";\nimport {\n\tInspectorControls,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n\t__experimentalBorderRadiusControl as BorderRadiusControl,\n} from \"@wordpress/block-editor\";\nimport {\n\tToggleControl,\n\tTextControl,\n\tPanelBody,\n\tPanelRow,\n\t__experimentalBoxControl as BoxControl,\n\t__experimentalBorderBoxControl as BorderBoxControl,\n\t__experimentalUnitControl as UnitControl,\n} from \"@wordpress/components\";\nimport StyleLabel from \"./StyleLabel\";\n\n//スペースのリセットバリュー\nconst padding_resetValues = {\n\ttop: \"10px\",\n\tleft: \"10px\",\n\tright: \"10px\",\n\tbottom: \"10px\",\n};\n\n//ボーダーのリセットバリュー\nconst border_resetValues = {\n\ttop: \"0px\",\n\tleft: \"0px\",\n\tright: \"0px\",\n\tbottom: \"0px\",\n};\n\nconst units = [\n\t{ value: \"px\", label: \"px\" },\n\t{ value: \"em\", label: \"em\" },\n\t{ value: \"rem\", label: \"rem\" },\n];\n\nexport default function LabelBox(props) {\n\tconst { attributes, setAttributes } = props;\n\n\tconst {\n\t\trequired,\n\t\tlabelContent,\n\t\tfont_style_label,\n\t\tbgColor_label,\n\t\tbgGradient_label,\n\t\ttextColor_label,\n\t\tradius_label,\n\t\tborder_label,\n\t\tpadding_label,\n\t\tlabelSpace,\n\t\tisMobile,\n\t} = attributes;\n\n\t//サイトエディタの場合はiframeにスタイルをわたす。\n\tuseStyleIframe(StyleLabel, props.attributes);\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls group=\"settings\">\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={__(\"Required Settings\", \"block-collections\")}\n\t\t\t\t\tinitialOpen={true}\n\t\t\t\t\tclassName=\"title_design_ctrl\"\n\t\t\t\t>\n\t\t\t\t\t<PanelRow className=\"labelRequierd_row\">\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__(\"Required input\", \"block-collections\")}\n\t\t\t\t\t\t\tchecked={required.flg}\n\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\tconst newObj = { ...required, flg: newVal };\n\t\t\t\t\t\t\t\tsetAttributes({ required: newObj });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t{required.flg && (\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={__(\"Show 'required'\", \"block-collections\")}\n\t\t\t\t\t\t\t\tvalue={required.display}\n\t\t\t\t\t\t\t\tisPressEnterToChange\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tconst newObj = { ...required, display: newVal };\n\t\t\t\t\t\t\t\t\tsetAttributes({ required: newObj });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t)}\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={__(\"Label Settings\", \"block-collections\")}\n\t\t\t\t\tinitialOpen={true}\n\t\t\t\t\tclassName=\"title_design_ctrl\"\n\t\t\t\t>\n\t\t\t\t\t<PanelRow className=\"labelInfo_row\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__(\"Text of Label\", \"block-collections\")}\n\t\t\t\t\t\t\tlabelPosition=\"top\"\n\t\t\t\t\t\t\tvalue={labelContent}\n\t\t\t\t\t\t\tisPressEnterToChange\n\t\t\t\t\t\t\tonChange={(newValue) => setAttributes({ labelContent: newValue })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<InspectorControls group=\"styles\">\n\t\t\t\t<PanelBody\n\t\t\t\t\ttitle={__(\"Label style settings\", \"block-collections\")}\n\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\tclassName=\"title_design_ctrl\"\n\t\t\t\t>\n\t\t\t\t\t<TypographyControls\n\t\t\t\t\t\ttitle={__(\"Typography\", \"block-collections\")}\n\t\t\t\t\t\tfontStyle={font_style_label}\n\t\t\t\t\t\tonChange={(newStyle) => {\n\t\t\t\t\t\t\tsetAttributes({ font_style_label: newStyle });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tisMobile={isMobile}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t/>\n\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\ttitle={__(\"Label Color Setting\", \"block-collections\")}\n\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolorValue: textColor_label,\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Text color\", \"block-collections\"),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) =>\n\t\t\t\t\t\t\t\t\tsetAttributes({ textColor_label: newValue }),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolorValue: bgColor_label,\n\t\t\t\t\t\t\t\tgradientValue: bgGradient_label,\n\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Background color\", \"block-collections\"),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) =>\n\t\t\t\t\t\t\t\t\tsetAttributes({ bgColor_label: newValue }),\n\t\t\t\t\t\t\t\tonGradientChange: (newValue) =>\n\t\t\t\t\t\t\t\t\tsetAttributes({ bgGradient_label: newValue }),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={__(\"Border Settings\", \"block-collections\")}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t\tclassName=\"border_design_ctrl\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\tonChange={(newValue) => setAttributes({ border_label: newValue })}\n\t\t\t\t\t\t\tvalue={border_label}\n\t\t\t\t\t\t\tallowReset={true} // リセットの可否\n\t\t\t\t\t\t\tresetValues={border_resetValues} // リセット時の値\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<BorderRadiusControl\n\t\t\t\t\t\t\tvalues={radius_label}\n\t\t\t\t\t\t\tonChange={(newBrVal) =>\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tradius_label:\n\t\t\t\t\t\t\t\t\t\ttypeof newBrVal === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t? { value: newBrVal }\n\t\t\t\t\t\t\t\t\t\t\t: newBrVal,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<BoxControl\n\t\t\t\t\t\tlabel={__(\"Padding settings\", \"block-collections\")}\n\t\t\t\t\t\tvalues={padding_label}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ padding_label: value })}\n\t\t\t\t\t\tunits={units} // 許可する単位\n\t\t\t\t\t\tallowReset={true} // リセットの可否\n\t\t\t\t\t\tresetValues={padding_resetValues} // リセット時の値\n\t\t\t\t\t/>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tdragDirection=\"e\"\n\t\t\t\t\t\tonChange={(newValue) => setAttributes({ labelSpace: newValue })}\n\t\t\t\t\t\tlabel={__(\"Spacing with textbox\", \"block-collections\")}\n\t\t\t\t\t\tvalue={labelSpace}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<StyleLabel attributes={attributes}>\n\t\t\t\t{required.flg ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{labelContent}\n\t\t\t\t\t\t<span>({required.display})</span>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\tlabelContent\n\t\t\t\t)}\n\t\t\t</StyleLabel>\n\t\t</>\n\t);\n}\n","\r\nimport { __ } from '@wordpress/i18n';\r\nimport {\r\n  __experimentalPanelColorGradientSettings as PanelColorGradientSettings,\r\n} from '@wordpress/block-editor';\r\nimport {\r\n  PanelBody,\r\n  PanelRow,\r\n  ToggleControl,\r\n  RangeControl,\r\n  RadioControl\r\n} from '@wordpress/components';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport { dispatch } from '@wordpress/data';\r\nimport { hslToRgb16, HexToRGB, rgb16ToHsl } from './hslToRgb';\r\n\r\n//方向と距離\r\nconst dirctionDigit = (direction, distance) => {\r\n  let destTopLeft, destTopRight, destBottomLeft, destBottomRight;\r\n  switch (direction) {\r\n    case \"top_left\":\r\n      destTopLeft = distance;\r\n      destTopRight = distance;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance * -1;\r\n      break;\r\n    case \"top_right\":\r\n      destTopLeft = distance * -1;\r\n      destTopRight = distance;\r\n      destBottomLeft = distance;\r\n      destBottomRight = distance * -1;\r\n      break;\r\n    case \"bottom_left\":\r\n      destTopLeft = distance;\r\n      destTopRight = distance * -1;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance;\r\n      break;\r\n    case \"bottom_right\":\r\n      destTopLeft = distance * -1;\r\n      destTopRight = distance * -1;\r\n      destBottomLeft = distance;\r\n      destBottomRight = distance;\r\n      break;\r\n    case \"right_bottom\":\r\n      destTopLeft = distance;\r\n      destTopRight = distance * -1;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance;\r\n      break;\r\n    case \"top\":\r\n      destTopLeft = 0;\r\n      destTopRight = 0;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance;\r\n      break;\r\n  }\r\n  return (\r\n    {\r\n      topLeft: destTopLeft,\r\n      topRight: destTopRight,\r\n      bottomLeft: destBottomLeft,\r\n      bottmRight: destBottomRight\r\n    }\r\n  )\r\n}\r\n\r\n// グラデーションの色値は通常'linear-gradient'または'radial-gradient'で始まるので、\r\n// これらのキーワードを探すことでグラデーションかどうかを判断します。\r\nfunction isGradient(colorValue) {\r\n  return colorValue.includes('linear-gradient') || colorValue.includes('radial-gradient');\r\n}\r\n\r\n\r\nexport const ShadowElm = (shadowState) => {\r\n  //let baseColor;\r\n  const {\r\n    shadowType,\r\n    spread,\r\n    lateral,\r\n    longitude,\r\n    nomalBlur,\r\n    shadowColor,\r\n    blur,\r\n    intensity,\r\n    distance,\r\n    newDirection,\r\n    clayDirection,\r\n    embos,\r\n    opacity,\r\n    depth,\r\n    bdBlur,\r\n    expand,\r\n    glassblur,\r\n    glassopa,\r\n    hasOutline,\r\n    baseColor\r\n  } = shadowState;\r\n\r\n  //ノーマル\r\n  if (shadowType === 'nomal') {\r\n    //boxshadowの生成\r\n    const ShadowStyle = embos === 'dent' ? {\r\n      style: {\r\n        boxShadow: `${lateral}px ${longitude}px ${nomalBlur}px ${spread}px transparent, inset ${lateral}px ${longitude}px ${nomalBlur}px ${spread}px ${shadowColor}`\r\n      }\r\n    } : {\r\n      style: {\r\n        boxShadow: `${lateral}px ${longitude}px ${nomalBlur}px ${spread}px ${shadowColor}, inset ${lateral}px ${longitude}px ${nomalBlur}px ${spread}px transparent`\r\n      }\r\n    }\r\n    //Shadowのスタイルを返す\r\n    return ShadowStyle;\r\n  }\r\n  //ニューモフィズム\r\n  else if (shadowType === 'newmor') {\r\n\r\n    //背景がグラデーションのときはセットしない\r\n    if (isGradient(baseColor)) {\r\n      dispatch('core/notices').createNotice(\r\n        'error',\r\n        __('Neumorphism cannot be set when the background color is a gradient. ', 'itmar_guest_contact_block'),\r\n        { type: 'snackbar', isDismissible: true, }\r\n      );\r\n      return null;\r\n    }\r\n    //ボタン背景色のHSL値\r\n    const hslValue = rgb16ToHsl(baseColor);\r\n    //影の明るさを変更\r\n    const lightVal = (hslValue.lightness + intensity) < 100 ? hslValue.lightness + intensity : 100;\r\n    const darkVal = (hslValue.lightness - intensity) > 0 ? hslValue.lightness - intensity : 0;\r\n    const lightValue = hslToRgb16(hslValue.hue, hslValue.saturation, lightVal);\r\n    const darkValue = hslToRgb16(hslValue.hue, hslValue.saturation, darkVal);\r\n    //boxshadowの生成\r\n    //立体の方向\r\n    const dircObj = dirctionDigit(newDirection, distance);\r\n\r\n    const baseStyle = {\r\n      style: {\r\n        border: 'none',\r\n        background: baseColor\r\n      }\r\n    }\r\n\r\n    const newmorStyle = embos === 'swell' ? {\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px ${darkValue}, ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px ${lightValue}, inset ${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px transparent, inset ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px transparent`\r\n      }\r\n    } : {\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px transparent, ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px transparent, inset ${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px ${darkValue}, inset ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px ${lightValue}`\r\n      }\r\n    }\r\n\r\n    //Shadowのスタイルを返す\r\n    return newmorStyle;\r\n  }\r\n\r\n  //クレイモーフィズム\r\n  else if (shadowType === 'claymor') {\r\n    //背景がグラデーションのときはセットしない\r\n    if (isGradient(baseColor)) {\r\n      dispatch('core/notices').createNotice(\r\n        'error',\r\n        __('claymorphism cannot be set when the background color is a gradient. ', 'itmar_guest_contact_block'),\r\n        { type: 'snackbar', isDismissible: true, }\r\n      );\r\n      return null;\r\n    }\r\n    const rgbValue = HexToRGB(baseColor)\r\n    const outsetObj = dirctionDigit(clayDirection, expand)\r\n    const insetObj = dirctionDigit(clayDirection, depth)\r\n    const baseStyle = {\r\n      style: {\r\n        background: `rgba(255, 255, 255, ${opacity})`,\r\n        backdropFilter: `blur(${bdBlur}px)`,\r\n        border: 'none',\r\n      }\r\n    }\r\n    const claymorStyle = {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `${outsetObj.topLeft}px ${outsetObj.bottmRight}px ${expand * 2}px 0px rgba(${rgbValue.red}, ${rgbValue.green}, ${rgbValue.blue}, 0.5), inset ${insetObj.topRight}px ${insetObj.bottomLeft}px 16px 0px rgba(${rgbValue.red}, ${rgbValue.green}, ${rgbValue.blue}, 0.6), inset 0px 11px 28px 0px rgb(255, 255, 255)`,\r\n      }\r\n    }\r\n    //attributesに保存\r\n    return claymorStyle;\r\n  }\r\n\r\n  //グラスモーフィズム\r\n  else if (shadowType === 'glassmor') {\r\n\r\n    const baseStyle = {\r\n      style: {\r\n        backgroundColor: `rgba(255, 255, 255, ${glassopa})`,\r\n        ...hasOutline ? { border: `1px solid rgba(255, 255, 255, 0.4)` } : {},\r\n        borderRightColor: `rgba(255, 255, 255, 0.2)`,\r\n        borderBottomColor: `rgba(255, 255, 255, 0.2)`,\r\n        backdropFilter: `blur( ${glassblur}px )`\r\n      }\r\n    }\r\n    const glassmorStyle = embos === 'swell' ? {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `0 8px 12px 0 rgba( 31, 38, 135, 0.37 ), inset 0 8px 12px 0 transparent`\r\n      }\r\n    } : {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `0 8px 12px 0 transparent, inset 0 8px 12px 0 rgba( 31, 38, 135, 0.37 )`\r\n\r\n      }\r\n    }\r\n\r\n    //attributesに保存\r\n    return glassmorStyle;\r\n  }\r\n}\r\n\r\nconst ShadowStyle = ({ shadowStyle, onChange }) => {\r\n  const [shadowState, setShadowState] = useState(shadowStyle);\r\n\r\n  const {\r\n    shadowType,\r\n    spread,\r\n    lateral,\r\n    longitude,\r\n    nomalBlur,\r\n    shadowColor,\r\n    blur,\r\n    intensity,\r\n    distance,\r\n    newDirection,\r\n    clayDirection,\r\n    embos,\r\n    opacity,\r\n    depth,\r\n    bdBlur,\r\n    expand,\r\n    glassblur,\r\n    glassopa,\r\n    hasOutline\r\n  } = shadowState;\r\n\r\n  //シャドーのスタイル変更と背景色変更に伴う親コンポーネントの変更\r\n  useEffect(() => {\r\n    const shadowElm = ShadowElm(shadowState);\r\n    if (shadowElm) onChange(shadowElm, shadowState)\r\n  }, [shadowState]);\r\n\r\n  return (\r\n    <>\r\n      <PanelBody title={__(\"Shadow Type\", 'block-collections')} initialOpen={true}>\r\n        <div className=\"itmar_shadow_type\">\r\n          <RadioControl\r\n            selected={shadowType}\r\n            options={[\r\n              { label: __(\"Nomal\", 'block-collections'), value: 'nomal' },\r\n              { label: __(\"Neumorphism\", 'block-collections'), value: 'newmor' },\r\n              { label: __(\"Claymorphism\", 'block-collections'), value: 'claymor' },\r\n              { label: __(\"Grassmophism\", 'block-collections'), value: 'glassmor' },\r\n            ]}\r\n            onChange={(changeOption) => setShadowState({ ...shadowState, shadowType: changeOption })}\r\n          />\r\n        </div>\r\n        {(shadowType !== 'claymor') &&\r\n          <div className=\"embos\">\r\n            <RadioControl\r\n              label={__(\"unevenness\", 'block-collections')}\r\n              selected={embos}\r\n              options={[\r\n                { value: 'swell' },\r\n                { value: 'dent' },\r\n\r\n              ]}\r\n              onChange={(changeOption) => setShadowState({ ...shadowState, embos: changeOption })}\r\n            />\r\n          </div>\r\n        }\r\n      </PanelBody>\r\n\r\n      {shadowType === 'nomal' &&\r\n        <PanelBody title={__(\"Nomal settings\", 'block-collections')} initialOpen={false}>\r\n          <RangeControl\r\n            value={spread}\r\n            label={__(\"Spread\", 'block-collections')}\r\n            max={50}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, spread: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={lateral}\r\n            label={__(\"Lateral direction\", 'block-collections')}\r\n            max={50}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, lateral: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={longitude}\r\n            label={__(\"Longitudinal direction\", 'block-collections')}\r\n            max={50}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, longitude: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={nomalBlur}\r\n            label={__(\"Blur\", 'block-collections')}\r\n            max={20}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, nomalBlur: val })}\r\n            withInputField={false}\r\n          />\r\n          <PanelColorGradientSettings\r\n            title={__(\"Shadow Color Setting\", 'block-collections')}\r\n            settings={[\r\n              {\r\n                colorValue: shadowColor,\r\n                label: __(\"Choose Shadow color\", 'block-collections'),\r\n                onColorChange: (newValue) => setShadowState({ ...shadowState, shadowColor: newValue }),\r\n              },\r\n            ]}\r\n          />\r\n\r\n        </PanelBody>\r\n      }\r\n\r\n      {shadowType === 'newmor' &&\r\n        <PanelBody title={__(\"Neumorphism settings\", 'block-collections')} initialOpen={false}>\r\n          <RangeControl\r\n            value={distance}\r\n            label={__(\"Distance\", 'block-collections')}\r\n            max={50}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, distance: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={intensity}\r\n            label={__(\"Intensity\", 'block-collections')}\r\n            max={100}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, intensity: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={blur}\r\n            label={__(\"Blur\", 'block-collections')}\r\n            max={20}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, blur: val })}\r\n            withInputField={false}\r\n          />\r\n          <PanelRow>\r\n            <div className=\"light_direction\">\r\n              <RadioControl\r\n                selected={newDirection}\r\n                options={[\r\n                  { value: 'top_left' },\r\n                  { value: 'top_right' },\r\n                  { value: 'bottom_left' },\r\n                  { value: 'bottom_right' },\r\n                ]}\r\n                onChange={(changeOption) => setShadowState({ ...shadowState, newDirection: changeOption })}\r\n              />\r\n            </div>\r\n\r\n          </PanelRow>\r\n\r\n        </PanelBody>\r\n\r\n      }\r\n      {shadowType === 'claymor' &&\r\n\r\n        <PanelBody title={__(\"Claymorphism settings\", 'block-collections')} initialOpen={false}>\r\n          <RangeControl\r\n            value={opacity}\r\n            label={__(\"Opacity\", 'block-collections')}\r\n            max={1}\r\n            min={0}\r\n            step={.1}\r\n            onChange={(val) => setShadowState({ ...shadowState, opacity: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={depth}\r\n            label=\"Depth\"\r\n            max={20}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, depth: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={expand}\r\n            label=\"Expand\"\r\n            max={50}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, expand: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={bdBlur}\r\n            label=\"Background Blur\"\r\n            max={10}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, bdBlur: val })}\r\n            withInputField={false}\r\n          />\r\n          <div className=\"light_direction claymor\">\r\n            <RadioControl\r\n              selected={clayDirection}\r\n              options={[\r\n                { value: 'right_bottom' },\r\n                { value: 'top_right' },\r\n                { value: 'top' },\r\n              ]}\r\n              onChange={(changeOption) => setShadowState({ ...shadowState, clayDirection: changeOption })}\r\n            />\r\n          </div>\r\n        </PanelBody>\r\n      }\r\n\r\n      {shadowType === 'glassmor' &&\r\n        <PanelBody title={__(\"Grassmophism settings\", 'block-collections')} initialOpen={false}>\r\n          <RangeControl\r\n            value={glassblur}\r\n            label={__(\"Glass blur\", 'block-collections')}\r\n            max={20}\r\n            min={0}\r\n            onChange={(val) => setShadowState({ ...shadowState, glassblur: val })}\r\n            withInputField={false}\r\n          />\r\n          <RangeControl\r\n            value={glassopa}\r\n            label={__(\"Glass Opacity\", 'block-collections')}\r\n            max={1}\r\n            min={0}\r\n            step={.1}\r\n            onChange={(val) => setShadowState({ ...shadowState, glassopa: val })}\r\n            withInputField={false}\r\n          />\r\n          <fieldset>\r\n            <ToggleControl\r\n              label={__(\"Show outline\", 'block-collections')}\r\n              checked={hasOutline}\r\n              onChange={() => setShadowState({ ...shadowState, hasOutline: !hasOutline })}\r\n            />\r\n          </fieldset>\r\n        </PanelBody>\r\n      }\r\n    </>\r\n\r\n  );\r\n};\r\nexport default ShadowStyle;\r\n\r\n","import {\r\n  PanelBody,\r\n  PanelRow,\r\n  RadioControl,\r\n  ToggleControl,\r\n  __experimentalUnitControl as UnitControl,\r\n} from '@wordpress/components';\r\n\r\nimport Select from 'react-select';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nconst TypographyControls = ({ title, fontStyle, initialOpen, isMobile, onChange }) => {\r\n  const {\r\n    default_fontSize,\r\n    mobile_fontSize,\r\n    fontSize,\r\n    fontFamily,\r\n    fontWeight,\r\n    isItalic\r\n  } = fontStyle;\r\n\r\n  const fontFamilyOptions = [\r\n    { value: 'Arial, sans-serif', label: 'Arial', fontFamily: 'Arial, sans-serif' },\r\n    { value: 'Courier New, monospace', label: 'Courier New', fontFamily: 'Courier New, monospace' },\r\n    { value: 'Georgia, serif', label: 'Georgia', fontFamily: 'Georgia, serif' },\r\n    { label: 'Noto Sans JP', value: 'Noto Sans JP, sans-serif', fontFamily: 'Noto Sans JP, sans-serif' },\r\n    { label: 'Texturina', value: 'Texturina, serif', fontFamily: 'Texturina, serif' },\r\n  ];\r\n\r\n  const units = [\r\n    { value: 'px', label: 'px' },\r\n    { value: 'em', label: 'em' },\r\n    { value: 'rem', label: 'rem' },\r\n  ];\r\n\r\n  const customStyles = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      fontFamily: state.data.fontFamily,\r\n    }),\r\n  };\r\n\r\n  const FontSelect = ({ label, value, onChange }) => (\r\n    <>\r\n      {label && <label className=\"components-base-control__label\">{label}</label>}\r\n      <Select\r\n        options={fontFamilyOptions}\r\n        value={fontFamilyOptions.find((option) => option.value === value)}\r\n        onChange={(newValue) => {\r\n          onChange(newValue.value);\r\n        }}\r\n        styles={customStyles}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <PanelBody title={title} initialOpen={initialOpen} >\r\n      <UnitControl\r\n        dragDirection=\"e\"\r\n        onChange={(newValue) => {\r\n          newValue = newValue != '' ? newValue : '0px'\r\n          const set_size = !isMobile ? { default_fontSize: newValue } : { mobile_fontSize: newValue };\r\n          const newStyle = { ...fontStyle, ...set_size };\r\n          onChange(newStyle);\r\n        }}\r\n        label={!isMobile ?\r\n          __(\"Size(desk top)\", 'block-collections')\r\n          : __(\"Size(mobile)\", 'block-collections')}\r\n        value={!isMobile ? default_fontSize : mobile_fontSize}\r\n        units={units}\r\n      />\r\n\r\n      <FontSelect\r\n        label={__(\"font family\", 'block-collections')}\r\n        value={fontFamily}\r\n        onChange={(newValue) => {\r\n          const newStyle = { ...fontStyle, fontFamily: newValue };\r\n          onChange(newStyle);\r\n        }}\r\n      />\r\n\r\n      <label className=\"components-base-control__label\">{__('font weight', 'block-collections')}</label>\r\n      <PanelRow className='itmar_weight_row'>\r\n        <RadioControl\r\n          selected={fontWeight}\r\n          options={[\r\n            { label: 'LIGHT', value: \"300\" },\r\n            { label: 'REGULAR', value: \"400\" },\r\n            { label: 'MEDIUM', value: \"500\" },\r\n            { label: 'S-BOLD', value: \"600\" },\r\n            { label: 'BOLD', value: \"700\" },\r\n            { label: 'BLACK', value: \"900\" },\r\n          ]}\r\n          onChange={(newValue) => {\r\n            const newStyle = { ...fontStyle, fontWeight: newValue };\r\n            onChange(newStyle);\r\n          }}\r\n        />\r\n      </PanelRow>\r\n\r\n      <label className=\"components-base-control__label\">{__('Italic display', 'block-collections')}</label>\r\n      <ToggleControl\r\n        checked={isItalic}\r\n        onChange={(newValue) => {\r\n          const newStyle = { ...fontStyle, isItalic: newValue };\r\n          onChange(newStyle);\r\n        }}\r\n      />\r\n    </PanelBody>\r\n  );\r\n};\r\nexport default TypographyControls;\r\n","\nimport { __ } from '@wordpress/i18n';\nimport TypographyControls from '../TypographyControls'\nimport { StyleComp } from './StyleSelect';\nimport { NomalSelect } from './initSelect';\nimport { useStyleIframe } from '../iframeFooks';\nimport ShadowStyle, { ShadowElm } from '../ShadowStyle';\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { useElementBackgroundColor, useIsIframeMobile } from '../CustomFooks';\nimport LabelBox from '../LabelBox ';\nimport { nanoid } from 'nanoid';\n\nimport {\n\tButton,\n\tPanelBody,\n\tPanelRow,\n\tNotice,\n\tModal,\n\tRadioControl,\n\tTextControl,\n\tToggleControl,\n\t__experimentalBoxControl as BoxControl,\n\t__experimentalBorderBoxControl as BorderBoxControl\n} from '@wordpress/components';\nimport {\n\tuseBlockProps,\n\tInspectorControls,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n\t__experimentalBorderRadiusControl as BorderRadiusControl\n} from '@wordpress/block-editor';\n\nimport './editor.scss';\n\n//スペースのリセットバリュー\nconst padding_resetValues = {\n\ttop: '10px',\n\tleft: '10px',\n\tright: '10px',\n\tbottom: '10px',\n}\n\n//ボーダーのリセットバリュー\nconst border_resetValues = {\n\ttop: '0px',\n\tleft: '0px',\n\tright: '0px',\n\tbottom: '0px',\n}\n\nconst units = [\n\t{ value: 'px', label: 'px' },\n\t{ value: 'em', label: 'em' },\n\t{ value: 'rem', label: 'rem' },\n];\n\nexport default function Edit({ attributes, setAttributes, context }) {\n\tconst {\n\t\tinputName,\n\t\tselPattern,\n\t\tselectValues,\n\t\tselectedValues,\n\t\tfolder_val,\n\t\trequired,\n\t\tbgColor,\n\t\toptionColor,\n\t\thoverBgColor,\n\t\tfont_style_option,\n\t\tdefault_pos,\n\t\tmobile_pos,\n\t\tbgSelectColor,\n\t\tbgSelectGradient,\n\t\tradius_value,\n\t\tborder_value,\n\t\tlabelContent,\n\t\tlabelWidth,\n\t\tlabelVertAlign,\n\t\tfont_style_label,\n\t\tbgColor_label,\n\t\tbgGradient_label,\n\t\ttextColor_label,\n\t\tradius_label,\n\t\tborder_label,\n\t\tpadding_label,\n\t\tlabelSpace,\n\t\tshadow_element,\n\t\tshadow_result,\n\t\tis_shadow,\n\t\tclassName,\n\t} = attributes;\n\n\t//モバイルの判定\n\tconst isMobile = useIsIframeMobile();\n\n\t//ブロックの参照\n\tconst blockRef = useRef(null);\n\tconst blockProps = useBlockProps({\n\t\tref: blockRef,// ここで参照を blockProps に渡しています\n\t\tstyle: { backgroundColor: bgColor }//背景色をブロックのルートにインラインでセット\n\t});\n\n\t//背景色の取得\n\tconst baseColor = useElementBackgroundColor(blockRef, blockProps.style);\n\n\t//背景色変更によるシャドー属性の書き換え\n\tuseEffect(() => {\n\t\tif (baseColor) {\n\t\t\tsetAttributes({ shadow_element: { ...shadow_element, baseColor: baseColor } });\n\t\t\tconst new_shadow = ShadowElm({ ...shadow_element, baseColor: baseColor });\n\t\t\tif (new_shadow) { setAttributes({ shadow_result: new_shadow.style }); }\n\t\t}\n\t}, [baseColor]);\n\n\n\t//サイトエディタの場合はiframeにスタイルをわたす。\n\tuseStyleIframe(StyleComp, attributes);\n\n\n\t// selPatternがtrueの場合、multiple属性を持つオブジェクトを返す\n\tconst selectAttributes = selPattern === 'multi' ? { multiple: true } : {};\n\n\t//サイトエディタの場合はiframeにスタイルをわたす。\n\tuseStyleIframe(StyleComp, attributes);\n\n\t//親コンポーネントからのラベル幅の指定があればそれを採用して記録する\n\tconst label_width = context['itmar/label_width'] || 'auto';\n\tuseEffect(() => {\n\t\tsetAttributes({ labelWidth: label_width });\n\t}, [label_width]);\n\n\t//選択要素のクリア\n\tuseEffect(() => {\n\t\tsetAttributes({ selectedValues: [] });\n\t}, [selPattern]);\n\n\t//オプション要素の情報編集モーダルの操作\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [selectedOption, setSelectedOption] = useState(null);\n\tconst [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n\tconst [optionToDelete, setOptionToDelete] = useState(null);\n\tconst openModal = () => setIsModalOpen(true);\n\tconst closeModal = () => setIsModalOpen(false);\n\tconst openDeleteModal = (item) => {\n\t\tsetOptionToDelete(item);\n\t\tsetIsDeleteModalOpen(true);\n\t};\n\tconst closeDeleteModal = () => {\n\t\tsetIsDeleteModalOpen(false);\n\t\tsetOptionToDelete(null);\n\t};\n\tconst confirmDelete = () => {\n\t\tif (optionToDelete) {\n\t\t\thandleOptionDelete(optionToDelete.id);\n\t\t}\n\t\tcloseDeleteModal();\n\t};\n\t//オプション値の編集ハンドラ\n\tconst handleOptionChange = (key, value) => {\n\t\tsetSelectedOption(prevData => ({ ...prevData, [key]: value }));\n\t};\n\n\t//オプション新規追加\n\tconst handleOptionAddNew = () => {\n\t\tconst id = nanoid(5);\n\t\tsetSelectedOption({ id: id, value: '', label: '', classname: '' });\n\t\topenModal();\n\t};\n\t//オプションの更新\n\tconst handleNoticeClick = (item) => {\n\t\tsetSelectedOption(item);\n\t\topenModal();\n\t};\n\n\t// オプション要素の削除\n\tconst handleOptionDelete = (idToDelete) => {\n\t\t// IDをもとに該当する要素を削除\n\t\tconst updatedValues = selectValues.filter(item => item.id !== idToDelete);\n\t\tsetAttributes({ selectValues: updatedValues });\n\t};\n\n\t//オプション値の保存\n\tconst handleOptionSave = () => {\n\t\tif (selectedOption && selectValues.some(item => item.id === selectedOption.id)) {\n\t\t\t// Update existing item\n\t\t\tconst updatedValues = selectValues.map(item => {\n\t\t\t\tif (item.id === selectedOption.id) {\n\t\t\t\t\treturn selectedOption;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\t\t\tsetAttributes({ selectValues: updatedValues });\n\t\t} else {\n\t\t\t// Add new item\n\t\t\tsetAttributes({ selectValues: [...selectValues, selectedOption] });\n\t\t}\n\n\t\tcloseModal()\n\t};\n\n\tfunction renderContent() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<NomalSelect\n\t\t\t\t\tonOptionSelect={(selID) => {\n\t\t\t\t\t\tif (selID == undefined) {//undefinedのときは設定を解除\n\t\t\t\t\t\t\tsetAttributes({ selectedValues: [] });\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (selectedValues.includes(selID)) {\n\t\t\t\t\t\t\treturn; // 既に選択されている場合はそのまま\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//複数選択のときは複数配列、単数選択の時は単数配列\n\t\t\t\t\t\tconst newArray = selPattern === 'multi' ? [...selectedValues, selID] : [selID];\n\t\t\t\t\t\tsetAttributes({ selectedValues: newArray });\n\t\t\t\t\t}}\n\t\t\t\t\tonOptionDeselect={(selID) => {\n\t\t\t\t\t\tconst newArray = selectedValues.filter(index => index !== selID);\n\t\t\t\t\t\tsetAttributes({ selectedValues: newArray });;\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<select\n\t\t\t\t\t\tclass=\"nomal\"\n\t\t\t\t\t\t{...selectAttributes}\n\t\t\t\t\t\tname={inputName}\n\t\t\t\t\t\tdata-placeholder={folder_val}\n\t\t\t\t\t>\n\t\t\t\t\t\t{selPattern === 'single' &&\n\t\t\t\t\t\t\t<option value=\"\">{__(\"Please Select.\", 'block-collections')}</option>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tselectValues.map((option_item) => {\n\t\t\t\t\t\t\t\treturn (<option id={option_item.id} className={option_item.classname} value={option_item.value} selected={selectedValues.includes(option_item.id)}>{option_item.label}</option>)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</select>\n\t\t\t\t</NomalSelect>\n\n\t\t\t\t<LabelBox\n\t\t\t\t\tattributes={{\n\t\t\t\t\t\trequired,\n\t\t\t\t\t\tlabelContent,\n\t\t\t\t\t\tfont_style_label,\n\t\t\t\t\t\tbgColor_label,\n\t\t\t\t\t\tbgGradient_label,\n\t\t\t\t\t\ttextColor_label,\n\t\t\t\t\t\tradius_label,\n\t\t\t\t\t\tborder_label,\n\t\t\t\t\t\tpadding_label,\n\t\t\t\t\t\tlabelSpace,\n\t\t\t\t\t\tlabelWidth,\n\t\t\t\t\t\tlabelVertAlign,\n\t\t\t\t\t\tshadow_result,\n\t\t\t\t\t\tis_shadow,\n\t\t\t\t\t\tisMobile,\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t}}\n\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t/>\n\t\t\t</>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls group=\"settings\">\n\t\t\t\t<PanelBody title={\n\t\t\t\t\t__(\"Select Element Settings\", 'block-collections')\n\t\t\t\t}\n\t\t\t\t\tinitialOpen={true}\n\t\t\t\t\tclassName=\"select_design_ctrl\"\n\t\t\t\t>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__(\"name attribute name\", 'block-collections')}\n\t\t\t\t\t\t\tvalue={inputName}\n\t\t\t\t\t\t\tonChange={(newVal) => setAttributes({ inputName: newVal })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t\t<label className=\"components-base-control__label\">{__(\"Select Pattern\", 'block-collections')}</label>\n\t\t\t\t\t<PanelRow className='itmar_select_row'>\n\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\tselected={selPattern}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{ label: __(\"Single Select\", 'block-collections'), value: 'single' },\n\t\t\t\t\t\t\t\t{ label: __(\"Nulti Select\", 'block-collections'), value: 'multi' },\n\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tonChange={(changeOption) => { setAttributes({ selPattern: changeOption }); }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__(\"Place Folder Display\", 'block-collections')}\n\t\t\t\t\t\tvalue={folder_val}\n\t\t\t\t\t\tonChange={(newVal) => setAttributes({ folder_val: newVal })}\n\t\t\t\t\t/>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\tclassName={'itmar_notice_select_panel'}\n\t\t\t\t\t\ttitle={__(\"Option info Setting\", 'block-collections')}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel={__('add', 'block-collections')}\n\t\t\t\t\t\t\ticon={\"insert\"}\n\t\t\t\t\t\t\tonClick={handleOptionAddNew}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{selectValues.map((item) => (\n\t\t\t\t\t\t\t<Notice\n\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\tstatus=\"info\"\n\t\t\t\t\t\t\t\tonRemove={() => openDeleteModal(item)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span onClick={() => handleNoticeClick(item)}>{item.label}</span>\n\t\t\t\t\t\t\t</Notice>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t</PanelBody>\n\n\t\t\t</InspectorControls>\n\n\t\t\t<InspectorControls group=\"styles\">\n\n\t\t\t\t<PanelBody title={__(\"Global settings\", 'block-collections')} initialOpen={false} className=\"select_design_ctrl\">\n\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\ttitle={__(\"Background Color Setting\", 'block-collections')}\n\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolorValue: bgColor,\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Block Background color\", 'block-collections'),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) => setAttributes({ bgColor: newValue }),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolorValue: bgSelectColor,\n\t\t\t\t\t\t\t\tgradientValue: bgSelectGradient,\n\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Select Background color\", 'block-collections'),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\tsetAttributes({ bgSelectColor: newValue === undefined ? '' : newValue });\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonGradientChange: (newValue) => setAttributes({ bgSelectGradient: newValue }),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<BoxControl\n\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t__(\"Margin settings(desk top)\", 'block-collections')\n\t\t\t\t\t\t\t: __(\"Margin settings(mobile)\", 'block-collections')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues={!isMobile ? default_pos.margin_value : mobile_pos.margin_value}\n\t\t\t\t\t\tonChange={value => {\n\t\t\t\t\t\t\tif (!isMobile) {\n\t\t\t\t\t\t\t\tsetAttributes({ default_pos: { ...default_pos, margin_value: value } });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetAttributes({ mobile_pos: { ...mobile_pos, margin_value: value } });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tunits={units}\t// 許可する単位\n\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\tresetValues={padding_resetValues}\t// リセット時の値\n\n\t\t\t\t\t/>\n\t\t\t\t\t<BoxControl\n\t\t\t\t\t\tlabel={!isMobile ?\n\t\t\t\t\t\t\t__(\"Padding settings(desk top)\", 'block-collections')\n\t\t\t\t\t\t\t: __(\"Padding settings(mobile)\", 'block-collections')\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues={!isMobile ? default_pos.padding_value : mobile_pos.padding_value}\n\t\t\t\t\t\tonChange={value => {\n\t\t\t\t\t\t\tif (!isMobile) {\n\t\t\t\t\t\t\t\tsetAttributes({ default_pos: { ...default_pos, padding_value: value } })\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetAttributes({ mobile_pos: { ...mobile_pos, padding_value: value } })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tunits={units}\t// 許可する単位\n\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\tresetValues={padding_resetValues}\t// リセット時の値\n\n\t\t\t\t\t/>\n\t\t\t\t\t<PanelBody title={__(\"Border Settings\", 'block-collections')} initialOpen={false} className=\"border_design_ctrl\">\n\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\tcolors={[{ color: '#72aee6' }, { color: '#000' }, { color: '#fff' }]}\n\t\t\t\t\t\t\tonChange={(newValue) => setAttributes({ border_value: newValue })}\n\t\t\t\t\t\t\tvalue={border_value}\n\t\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\t\tresetValues={border_resetValues}\t// リセット時の値\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<BorderRadiusControl\n\t\t\t\t\t\t\tvalues={radius_value}\n\t\t\t\t\t\t\tonChange={(newBrVal) =>\n\t\t\t\t\t\t\t\tsetAttributes({ radius_value: typeof newBrVal === 'string' ? { \"value\": newBrVal } : newBrVal })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__('Is Shadow', 'block-collections')}\n\t\t\t\t\t\tchecked={is_shadow}\n\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\tsetAttributes({ is_shadow: newVal })\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{is_shadow &&\n\t\t\t\t\t\t<ShadowStyle\n\t\t\t\t\t\t\tshadowStyle={{ ...shadow_element }}\n\t\t\t\t\t\t\tonChange={(newStyle, newState) => {\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_result: newStyle.style });\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_element: newState })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</PanelBody>\n\n\t\t\t\t<PanelBody title={__(\"Option Style Settings\", 'block-collections')} initialOpen={false} className=\"select_design_ctrl\">\n\t\t\t\t\t<TypographyControls\n\t\t\t\t\t\ttitle={__('Typography', 'block-collections')}\n\t\t\t\t\t\tfontStyle={font_style_option}\n\t\t\t\t\t\tonChange={(newStyle) => {\n\t\t\t\t\t\t\tsetAttributes({ font_style_option: newStyle })\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tisMobile={isMobile}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\ttitle={__(\"Option Color Setting\", 'block-collections')}\n\t\t\t\t\t\tsettings={[{\n\t\t\t\t\t\t\tcolorValue: optionColor,\n\t\t\t\t\t\t\tlabel: __(\"Choose Text color\", 'block-collections'),\n\t\t\t\t\t\t\tonColorChange: (newValue) => setAttributes({ optionColor: newValue }),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcolorValue: hoverBgColor,\n\t\t\t\t\t\t\tlabel: __(\"Choose Background color on mouse hover\", 'block-collections'),\n\t\t\t\t\t\t\tonColorChange: (newValue) => setAttributes({ hoverBgColor: newValue }),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t{isModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={__(\"Option Info Edit\", 'block-collections')}\n\t\t\t\t\tonRequestClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__(\"Display Label\", 'block-collections')}\n\t\t\t\t\t\tvalue={selectedOption.label}\n\t\t\t\t\t\tonChange={(newVal) => handleOptionChange('label', newVal)}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__(\"Option Value\", 'block-collections')}\n\t\t\t\t\t\tvalue={selectedOption.value}\n\t\t\t\t\t\tonChange={(newVal) => handleOptionChange('value', newVal)}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__(\"Class Name\", 'block-collections')}\n\t\t\t\t\t\tvalue={selectedOption.classname}\n\t\t\t\t\t\tonChange={(newVal) => handleOptionChange('classname', newVal)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button variant=\"primary\" onClick={handleOptionSave}>\n\t\t\t\t\t\t{__(\"Save Changes\", 'block-collections')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal>\n\t\t\t)}\n\n\t\t\t{isDeleteModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={__(\"Confirm Deletion\", 'block-collections')}\n\t\t\t\t\tonRequestClose={closeDeleteModal}\n\t\t\t\t>\n\t\t\t\t\t<p>{__(\"Are you sure you want to delete this item?\", 'block-collections')}</p>\n\t\t\t\t\t<Button variant=\"primary\" onClick={confirmDelete}>{__(\"Yes, Delete\", 'block-collections')}</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={closeDeleteModal}>{__(\"Cancel\", 'block-collections')}</Button>\n\t\t\t\t</Modal>\n\t\t\t)}\n\n\t\t\t<div {...blockProps}>\n\t\t\t\t<StyleComp attributes={attributes} >\n\t\t\t\t\t{renderContent()}\n\t\t\t\t</StyleComp>\n\t\t\t</div >\n\t\t</>\n\t);\n}\n","const createRGB = (inputStr) => {\r\n\t//１６進数変換の関数\r\n\tfunction componentToHex(c) {\r\n\t\tconst hex = parseInt(c, 10).toString(16);\r\n\t\treturn hex.length === 1 ? \"0\" + hex : hex;\r\n\t}\r\n\r\n\tlet resultStr;\r\n\tlet rgb = [];\r\n\r\n\t// #000000 形式の場合\r\n\tif (/^#[0-9a-fA-F]{6}$/.test(inputStr)) {\r\n\t\trgb = [\r\n\t\t\tinputStr.slice(1, 3),\r\n\t\t\tinputStr.slice(3, 5),\r\n\t\t\tinputStr.slice(5, 7)\r\n\t\t];\r\n\t}\r\n\t// rgb(0,0,0) 形式の場合\r\n\telse if ((resultStr = inputStr.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/))) {\r\n\t\trgb = [\r\n\t\t\tcomponentToHex(resultStr[1]),\r\n\t\t\tcomponentToHex(resultStr[2]),\r\n\t\t\tcomponentToHex(resultStr[3])\r\n\t\t];\r\n\t} else {\r\n\t\t// サポートされていない形式の場合はデフォルトの値を設定する\r\n\t\trgb = [\"ff\", \"ff\", \"ff\"];\r\n\t}\r\n\treturn rgb;\r\n}\r\n\r\nexport function hslToRgb16(hue, saturation, lightness) {\r\n\tvar result = false;\r\n\r\n\tif (((hue || hue === 0) && hue <= 360) && ((saturation || saturation === 0) && saturation <= 100) && ((lightness || lightness === 0) && lightness <= 100)) {\r\n\t\tvar red = 0,\r\n\t\t\tgreen = 0,\r\n\t\t\tblue = 0,\r\n\t\t\tq = 0,\r\n\t\t\tp = 0,\r\n\t\t\thueToRgb;\r\n\r\n\t\thue = Number(hue) / 360;\r\n\t\tsaturation = Number(saturation) / 100;\r\n\t\tlightness = Number(lightness) / 100;\r\n\r\n\t\tif (saturation === 0) {\r\n\t\t\tred = lightness;\r\n\t\t\tgreen = lightness;\r\n\t\t\tblue = lightness;\r\n\t\t} else {\r\n\t\t\thueToRgb = function (p, q, t) {\r\n\t\t\t\tif (t < 0) t += 1;\r\n\t\t\t\tif (t > 1) t -= 1;\r\n\r\n\t\t\t\tif (t < 1 / 6) {\r\n\t\t\t\t\tp += (q - p) * 6 * t;\r\n\t\t\t\t} else if (t < 1 / 2) {\r\n\t\t\t\t\tp = q;\r\n\t\t\t\t} else if (t < 2 / 3) {\r\n\t\t\t\t\tp += (q - p) * (2 / 3 - t) * 6;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn p;\r\n\t\t\t};\r\n\r\n\t\t\tif (lightness < 0.5) {\r\n\t\t\t\tq = lightness * (1 + saturation);\r\n\t\t\t} else {\r\n\t\t\t\tq = lightness + saturation - lightness * saturation;\r\n\t\t\t}\r\n\t\t\tp = 2 * lightness - q;\r\n\r\n\t\t\tred = hueToRgb(p, q, hue + 1 / 3);\r\n\t\t\tgreen = hueToRgb(p, q, hue);\r\n\t\t\tblue = hueToRgb(p, q, hue - 1 / 3);\r\n\t\t}\r\n\r\n\t\tresult = `#${Math.round(red * 255).toString(16).padStart(2, '0')}${Math.round(green * 255).toString(16).padStart(2, '0')}${Math.round(blue * 255).toString(16).padStart(2, '0')}`;\r\n\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport function rgb16ToHsl(strRgb16) {\r\n\tlet rgb = createRGB(strRgb16);\r\n\tlet red = rgb[0];\r\n\tlet green = rgb[1];\r\n\tlet blue = rgb[2];\r\n\tlet result = false;\r\n\r\n\tif (((red || red === 0) && String(red).match(/^[0-9a-f]{2}$/i)) && ((green || green === 0) && String(green).match(/^[0-9a-f]{2}$/i)) && ((blue || blue === 0) && String(blue).match(/^[0-9a-f]{2}$/i))) {\r\n\t\tlet hue = 0,\r\n\t\t\tsaturation = 0,\r\n\t\t\tlightness = 0,\r\n\t\t\tmax = 0,\r\n\t\t\tmin = 0,\r\n\t\t\tdiff = 0;\r\n\r\n\t\tred = parseInt(red, 16) / 255;\r\n\t\tgreen = parseInt(green, 16) / 255;\r\n\t\tblue = parseInt(blue, 16) / 255;\r\n\t\tmax = Math.max(red, green, blue);\r\n\t\tmin = Math.min(red, green, blue);\r\n\t\tlightness = (max + min) / 2;\r\n\r\n\t\tif (max !== min) {\r\n\t\t\tdiff = max - min;\r\n\r\n\t\t\tif (lightness > 0.5) {\r\n\t\t\t\tsaturation = diff / (2 - max - min);\r\n\t\t\t} else {\r\n\t\t\t\tsaturation = diff / (max + min);\r\n\t\t\t}\r\n\r\n\t\t\tif (max === red) {\r\n\t\t\t\thue = (green - blue) / diff;\r\n\t\t\t} else if (max === green) {\r\n\t\t\t\thue = 2 + (blue - red) / diff;\r\n\t\t\t} else {\r\n\t\t\t\thue = 4 + (red - green) / diff;\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\t\t}\r\n\r\n\t\tresult = {\r\n\t\t\thue: Math.round(hue * 360),\r\n\t\t\tsaturation: Math.round(saturation * 100),\r\n\t\t\tlightness: Math.round(lightness * 100)\r\n\t\t};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport function HexToRGB(strRgb16) {\r\n\tlet rgb = createRGB(strRgb16);\r\n\tlet red = rgb[0];\r\n\tlet green = rgb[1];\r\n\tlet blue = rgb[2];\r\n\tlet result = false;\r\n\r\n\tif (((red || red === 0) && String(red).match(/^[0-9a-f]{2}$/i)) && ((green || green === 0) && String(green).match(/^[0-9a-f]{2}$/i)) && ((blue || blue === 0) && String(blue).match(/^[0-9a-f]{2}$/i))) {\r\n\r\n\r\n\t\tred = parseInt(red, 16);\r\n\t\tgreen = parseInt(green, 16);\r\n\t\tblue = parseInt(blue, 16);\r\n\r\n\r\n\t\tresult = {\r\n\t\t\tred: Math.round(red),\r\n\t\t\tgreen: Math.round(green),\r\n\t\t\tblue: Math.round(blue)\r\n\t\t};\r\n\t}\r\n\r\n\treturn result;\r\n};","import { useEffect } from '@wordpress/element';\r\nimport { useDeepCompareEffect } from './CustomFooks';\r\nimport { ServerStyleSheet } from 'styled-components';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\n\r\nexport function useStyleIframe(StyleComp, attributes) {\r\n  //サイトエディタの場合はiframeにスタイルをわたす。\r\n  useDeepCompareEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const sheet = new ServerStyleSheet();\r\n      renderToString(sheet.collectStyles(<StyleComp attributes={attributes} />));\r\n      const styleTags = sheet.getStyleTags();\r\n      const styleContent = styleTags.replace(/<style[^>]*>|<\\/style>/g, '');\r\n\r\n      const iframeStyleTag = iframeDocument.createElement('style');\r\n      iframeStyleTag.innerHTML = styleContent;\r\n\r\n      // Append the new style tag to the iframe's document head\r\n      iframeDocument.head.appendChild(iframeStyleTag);\r\n      // Return a cleanup function to remove the style tag\r\n      return () => {\r\n        iframeDocument.head.removeChild(iframeStyleTag);\r\n      };\r\n    }\r\n  }, [attributes]);\r\n}\r\n\r\nexport function useFontawesomeIframe() {\r\n  //iframeにfontawesomeを読み込む\r\n  useEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const scriptElement = iframeDocument.createElement(\"script\");\r\n      scriptElement.setAttribute(\"src\", \"../../../assets/fontawesome.js\");\r\n      //scriptElement.setAttribute(\"crossorigin\", \"anonymous\");\r\n\r\n      iframeDocument.body.appendChild(scriptElement);\r\n\r\n      // Return a cleanup function to remove the script tag\r\n      return () => {\r\n        iframeDocument.body?.removeChild(scriptElement);\r\n      };\r\n    }\r\n  }, []);\r\n}\r\n\r\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["useElementBackgroundColor","blockRef","style","baseColor","setBaseColor","useState","useEffect","current","backgroundColor","startsWith","computedStyles","getComputedStyle","useIsIframeMobile","isMobile","setIsMobile","checkIframeSize","iframeInstance","document","getElementsByName","contentWindow","innerWidth","addEventListener","removeEventListener","useDeepCompareEffect","callback","dependencies","dependenciesRef","useRef","isEqual","padding_resetValues","top","left","right","bottom","border_resetValues","units","value","label","LabelBox","props","attributes","setAttributes","required","labelContent","font_style_label","bgColor_label","bgGradient_label","textColor_label","radius_label","border_label","padding_label","labelSpace","useStyleIframe","StyleLabel","createElement","Fragment","InspectorControls","group","PanelBody","title","__","initialOpen","className","PanelRow","ToggleControl","checked","flg","onChange","newVal","newObj","TextControl","display","isPressEnterToChange","labelPosition","newValue","TypographyControls","fontStyle","newStyle","PanelColorGradientSettings","settings","colorValue","onColorChange","gradientValue","onGradientChange","BorderBoxControl","allowReset","resetValues","BorderRadiusControl","values","newBrVal","BoxControl","UnitControl","dragDirection","dirctionDigit","direction","distance","destTopLeft","destTopRight","destBottomLeft","destBottomRight","topLeft","topRight","bottomLeft","bottmRight","isGradient","includes","ShadowElm","shadowState","shadowType","spread","lateral","longitude","nomalBlur","shadowColor","blur","intensity","newDirection","clayDirection","embos","opacity","depth","bdBlur","expand","glassblur","glassopa","hasOutline","boxShadow","dispatch","createNotice","type","isDismissible","hslValue","rgb16ToHsl","lightVal","lightness","darkVal","lightValue","hslToRgb16","hue","saturation","darkValue","dircObj","baseStyle","border","background","rgbValue","HexToRGB","outsetObj","insetObj","backdropFilter","red","green","blue","borderRightColor","borderBottomColor","_ref","shadowStyle","setShadowState","shadowElm","RadioControl","selected","options","changeOption","RangeControl","max","min","val","withInputField","step","default_fontSize","mobile_fontSize","fontSize","fontFamily","fontWeight","isItalic","fontFamilyOptions","customStyles","option","provided","state","data","set_size","_ref2","Select","find","styles","Edit","context","inputName","selPattern","selectValues","selectedValues","folder_val","bgColor","optionColor","hoverBgColor","font_style_option","default_pos","mobile_pos","bgSelectColor","bgSelectGradient","radius_value","border_value","labelWidth","labelVertAlign","shadow_element","shadow_result","is_shadow","blockProps","useBlockProps","ref","new_shadow","StyleComp","selectAttributes","multiple","label_width","isModalOpen","setIsModalOpen","selectedOption","setSelectedOption","isDeleteModalOpen","setIsDeleteModalOpen","optionToDelete","setOptionToDelete","openModal","closeModal","closeDeleteModal","handleOptionChange","key","prevData","Button","icon","onClick","handleOptionAddNew","id","nanoid","classname","map","item","Notice","status","onRemove","openDeleteModal","handleNoticeClick","undefined","margin_value","padding_value","colors","color","ShadowStyle","newState","Modal","onRequestClose","variant","handleOptionSave","some","updatedValues","confirmDelete","idToDelete","filter","handleOptionDelete","NomalSelect","onOptionSelect","selID","newArray","onOptionDeselect","index","_extends","class","name","option_item","createRGB","inputStr","componentToHex","c","hex","parseInt","toString","length","resultStr","rgb","test","slice","match","result","hueToRgb","q","p","Number","t","Math","round","padStart","strRgb16","String","diff","iframeDocument","contentDocument","sheet","ServerStyleSheet","renderToString","collectStyles","styleContent","getStyleTags","replace","iframeStyleTag","innerHTML","head","appendChild","removeChild","size","crypto","getRandomValues","Uint8Array","reduce","byte","toUpperCase"],"sourceRoot":""}