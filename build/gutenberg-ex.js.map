{"version":3,"file":"gutenberg-ex.js","mappings":"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","sources":["webpack://block-collections/./src/styleProperty.js","webpack://block-collections/external window [\"wp\",\"blockEditor\"]","webpack://block-collections/external window [\"wp\",\"components\"]","webpack://block-collections/external window [\"wp\",\"compose\"]","webpack://block-collections/external window [\"wp\",\"element\"]","webpack://block-collections/external window [\"wp\",\"hooks\"]","webpack://block-collections/external window [\"wp\",\"i18n\"]","webpack://block-collections/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://block-collections/webpack/bootstrap","webpack://block-collections/webpack/runtime/compat get default export","webpack://block-collections/webpack/runtime/define property getters","webpack://block-collections/webpack/runtime/hasOwnProperty shorthand","webpack://block-collections/./src/gutenberg-ex.js"],"sourcesContent":["\r\n// sideの最初の文字を大文字にする関数\r\nconst capitalizeFirstLetter = string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function borderProperty(borderObj) {\r\n  if (borderObj) {//borderObjがundefinedでない\r\n    let keys = ['top', 'bottom', 'left', 'right'];\r\n    let ret_prop = null;\r\n    let doesKeyExist = keys.some(key => key in borderObj);\r\n    if (doesKeyExist) {//'top', 'bottom', 'left', 'right'が別設定\r\n      let cssObj = {};\r\n      for (let side in borderObj) {\r\n        const sideData = borderObj[side];\r\n        const startsWithZero = String(sideData.width || '').match(/^0/);\r\n        if (startsWithZero) {//widthが０ならCSS設定しない\r\n          continue;\r\n        }\r\n        const border_style = sideData.style || 'solid';\r\n        let camelCaseSide = `border${capitalizeFirstLetter(side)}`;\r\n        cssObj[camelCaseSide] = `${sideData.width} ${border_style} ${sideData.color}`;\r\n      }\r\n      ret_prop = cssObj;\r\n      return ret_prop;\r\n    } else {//同一のボーダー\r\n      const startsWithZero = String(borderObj.width || '').match(/^0/);\r\n      if (startsWithZero) {//widthが０ならnullを返す\r\n        return null;\r\n      }\r\n      const border_style = borderObj.style || 'solid';\r\n      ret_prop = { border: `${borderObj.width} ${border_style} ${borderObj.color}` }\r\n\r\n      return ret_prop;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n//角丸の設定\r\nexport function radiusProperty(radiusObj) {\r\n  const ret_prop = (radiusObj && Object.keys(radiusObj).length === 1)\r\n    ? radiusObj.value :\r\n    `${(radiusObj && radiusObj.topLeft) || ''} ${(radiusObj && radiusObj.topRight) || ''} ${(radiusObj && radiusObj.bottomRight) || ''} ${(radiusObj && radiusObj.bottomLeft) || ''}`\r\n  const ret_val = { borderRadius: ret_prop };\r\n  return ret_val;\r\n}\r\n\r\n//マージンの設定\r\nexport function marginProperty(marginObj) {\r\n  const ret_prop = `${marginObj.top} ${marginObj.right} ${marginObj.bottom} ${marginObj.left}`\r\n\r\n  const ret_val = { margin: ret_prop };\r\n  return ret_val;\r\n}\r\n//パディングの設定\r\nexport function paddingProperty(paddingObj) {\r\n  const ret_prop = `${paddingObj.top} ${paddingObj.right} ${paddingObj.bottom} ${paddingObj.left}`\r\n\r\n  const ret_val = { padding: ret_prop };\r\n  return ret_val;\r\n}\r\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\r\n * コアブロックカスタマイズ高階コンポーネント\r\n *\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { createHigherOrderComponent } from '@wordpress/compose';\r\nimport {\r\n  InspectorControls,\r\n  __experimentalBorderRadiusControl as BorderRadiusControl\r\n} from '@wordpress/block-editor';\r\n\r\nimport {\r\n  Button,\r\n  Panel,\r\n  PanelBody,\r\n  PanelRow,\r\n  ToggleControl,\r\n  RangeControl,\r\n  RadioControl,\r\n  TextControl,\r\n  __experimentalBoxControl as BoxControl,\r\n  __experimentalUnitControl as UnitControl,\r\n  __experimentalBorderBoxControl as BorderBoxControl\r\n} from '@wordpress/components';\r\n\r\nimport { borderProperty } from './styleProperty';\r\n\r\n// カスタマイズ対象とするブロック\r\nconst allowedBlocks = ['core/paragraph', 'core/list', 'core/image', 'core/quote', 'core/table'];\r\n\r\n//block登録フック（カスタム属性の追加）\r\nfunction addExSettings(settings, name) {\r\n  if (allowedBlocks.includes(name)) {\r\n    let newAttributes = {};\r\n    let newStyles = [];\r\n\r\n    newAttributes = {\r\n      margin_val: {\r\n        type: \"object\",\r\n        default: {\r\n          top: \"1em\",\r\n          left: \"1em\",\r\n          bottom: \"1em\",\r\n          right: \"1em\"\r\n        }\r\n      },\r\n      padding_val: {\r\n        type: \"object\",\r\n        default: {\r\n          top: \"1em\",\r\n          left: \"1em\",\r\n          bottom: \"1em\",\r\n          right: \"1em\"\r\n        }\r\n      }\r\n    };\r\n    if (name === 'core/paragraph' || name === 'core/list' || name === 'core/quote') {\r\n      newAttributes = {\r\n        ...newAttributes,\r\n        lineHeight: {\r\n          type: 'number',\r\n          default: 1.6,\r\n        },\r\n\r\n      };\r\n    }\r\n\r\n    if (name === 'core/list' || name === 'core/quote' || name === 'core/table') {\r\n      newAttributes = {\r\n        ...newAttributes,\r\n        radius_list: {\r\n          type: \"object\",\r\n          default: {\r\n            topLeft: \"0px\",\r\n            topRight: \"0px\",\r\n            bottomRight: \"0px\",\r\n            bottomLeft: \"0px\",\r\n            value: \"0px\"\r\n          }\r\n        },\r\n        border_list: {\r\n          type: \"object\"\r\n        },\r\n\r\n      };\r\n    }\r\n\r\n    if (name === 'core/list') {\r\n      newAttributes = {\r\n        ...newAttributes,\r\n        list_type: {\r\n          type: \"string\",\r\n          default: \"UL\"\r\n        },\r\n      };\r\n    }\r\n\r\n    if (name === 'core/table') {\r\n\r\n      newStyles = [\r\n        ...(settings.styles || []), // 既存のスタイルを保持\r\n        {\r\n          name: 'gradient',\r\n          label: __('Gradient', 'itmar_block_collections'),\r\n          isDefault: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return {\r\n      ...settings,\r\n      attributes: {\r\n        ...settings.attributes,\r\n        ...newAttributes,\r\n      },\r\n      styles: newStyles.length ? newStyles : settings.styles, // 新しいスタイルがある場合にのみ上書き\r\n    };\r\n\r\n  }\r\n\r\n  //その他のブロック\r\n  return settings;\r\n}\r\n\r\naddFilter(\r\n  'blocks.registerBlockType',\r\n  'itmar-ex-block/add-setting',\r\n  addExSettings\r\n);\r\n\r\n//BlockEditカスタムフック（インスペクターの追加）\r\nconst withInspectorControl = createHigherOrderComponent((BlockEdit) => {\r\n  //スペースのリセットバリュー\r\n  const padding_resetValues = {\r\n    top: '1em',\r\n    left: '1em',\r\n    right: '1em',\r\n    bottom: '1em',\r\n  }\r\n\r\n  const units = [\r\n    { value: 'px', label: 'px' },\r\n    { value: 'em', label: 'em' },\r\n    { value: 'rem', label: 'rem' },\r\n    { value: '%', label: '%' },\r\n  ];\r\n\r\n  return (props) => {\r\n    const classNames = props.attributes.className ? props.attributes.className.split(' ') : [];\r\n    const hasItmarBlockClass = classNames.includes('itmar_ex_block');\r\n    if (hasItmarBlockClass) {//itmar_ex_blockをクラス名に持つブロックに限定\r\n\r\n      if (allowedBlocks.includes(props.name)) {\r\n        const {\r\n          lineHeight,\r\n          margin_val,\r\n          padding_val,\r\n          border_list,\r\n          radius_list,\r\n          width,\r\n          height\r\n        } = props.attributes;\r\n\r\n        const setAttributes = props.setAttributes;\r\n        return (\r\n          <>\r\n            <BlockEdit {...props} />\r\n\r\n\r\n            <InspectorControls group=\"styles\">\r\n              <PanelBody title=\"間隔設定\" initialOpen={false}>\r\n                <BoxControl\r\n                  label=\"マージン設定\"\r\n                  values={margin_val}\r\n                  onChange={newValue => setAttributes({ margin_val: newValue })}\r\n                  units={units}\t// 許可する単位\r\n                  allowReset={true}\t// リセットの可否\r\n                  resetValues={padding_resetValues}\t// リセット時の値\r\n\r\n                />\r\n\r\n                <BoxControl\r\n                  label=\"パティング設定\"\r\n                  values={padding_val}\r\n                  onChange={newValue => setAttributes({ padding_val: newValue })}\r\n                  units={units}\t// 許可する単位\r\n                  allowReset={true}\t// リセットの可否\r\n                  resetValues={padding_resetValues}\t// リセット時の値\r\n\r\n                />\r\n\r\n              </PanelBody>\r\n              {(props.name === 'core/paragraph' || props.name === 'core/list' || props.name === 'core/quote') &&\r\n                <>\r\n                  <PanelBody title=\"行間設定\">\r\n                    <RangeControl\r\n                      value={lineHeight}\r\n                      label=\"lineHeight\"\r\n                      max={3}\r\n                      min={1}\r\n                      step={.1}\r\n                      onChange={(val) => setAttributes({ lineHeight: val })}\r\n                      withInputField={true}\r\n                    />\r\n                  </PanelBody>\r\n\r\n                </>\r\n              }\r\n              {(props.name === 'core/list' || props.name === 'core/quote' || props.name === 'core/table') &&\r\n                <PanelBody title=\"ボーダー設定\" initialOpen={false} className=\"border_design_ctrl\">\r\n                  <BorderBoxControl\r\n                    colors={[{ color: '#72aee6' }, { color: '#000' }, { color: '#fff' }]}\r\n                    onChange={(newValue) => setAttributes({ border_list: newValue })}\r\n                    value={border_list}\r\n\r\n                  />\r\n                  <BorderRadiusControl\r\n                    values={radius_list}\r\n                    onChange={(newBrVal) =>\r\n                      setAttributes({ radius_list: typeof newBrVal === 'string' ? { \"value\": newBrVal } : newBrVal })}\r\n                  />\r\n                </PanelBody>\r\n              }\r\n\r\n            </InspectorControls>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n    //その他のブロック\r\n    return <BlockEdit {...props} />;\r\n  };\r\n}, 'withInspectorControl');\r\n\r\naddFilter('editor.BlockEdit', 'itmar-ex-block/with-inspector-control', withInspectorControl);\r\n\r\n//BlockListBlockフック（編集画面のブロックの外観等の反映）\r\nconst applyExtraAttributesInEditor = createHigherOrderComponent((BlockListBlock) => {\r\n  return (props) => {\r\n    //propsを展開\r\n    const {\r\n      attributes,\r\n      name,\r\n      isValid,\r\n      wrapperProps\r\n    } = props;\r\n\r\n    const classNames = props.attributes.className ? props.attributes.className.split(' ') : [];\r\n    const hasItmarBlockClass = classNames.includes('itmar_ex_block');\r\n    if (hasItmarBlockClass) {//itmar_ex_blockをクラス名に持つブロックに限定\r\n      if (allowedBlocks.includes(name)) {\r\n        if (isValid) {\r\n          //属性の取り出し\r\n          const {\r\n            lineHeight,\r\n            margin_val,\r\n            padding_val,\r\n            radius_list,\r\n            border_list\r\n          } = attributes;\r\n\r\n          //拡張したスタイル\r\n\r\n          let extraStyle = {};\r\n          extraStyle = {\r\n            margin: `${margin_val.top} ${margin_val.right} ${margin_val.bottom} ${margin_val.left}`,\r\n            padding: `${padding_val.top} ${padding_val.right} ${padding_val.bottom} ${padding_val.left}`,\r\n          }\r\n          if (name === 'core/paragraph' || name === 'core/list' || name === 'core/quote') {\r\n            extraStyle = {\r\n              ...extraStyle, lineHeight: lineHeight,\r\n            }\r\n          }\r\n\r\n          if (name === 'core/list' || name === 'core/quote') {\r\n            //角丸の設定\r\n            const list_radius_prm = (radius_list && Object.keys(radius_list).length === 1) ? radius_list.value : `${(radius_list && radius_list.topLeft) || ''} ${(radius_list && radius_list.topRight) || ''} ${(radius_list && radius_list.bottomRight) || ''} ${(radius_list && radius_list.bottomLeft) || ''}`\r\n            const list_border = borderProperty(border_list);\r\n            extraStyle = {\r\n              ...extraStyle, borderRadius: list_radius_prm, ...list_border\r\n            }\r\n          }\r\n\r\n          if (name === 'core/image') {\r\n            if (attributes.align === 'center') {//中央ぞろえの時\r\n              extraStyle = {\r\n                ...extraStyle, margin: `${margin_val.top} auto ${margin_val.bottom}`\r\n              }\r\n            }\r\n          }\r\n\r\n          if (name === 'core/table') {\r\n            const list_border = borderProperty(border_list);\r\n            extraStyle = {\r\n              ...extraStyle, borderCollapse: 'collapse', ...list_border\r\n            }\r\n          }\r\n\r\n          //既存スタイルとマージ\r\n          let blockWrapperProps = wrapperProps;\r\n          blockWrapperProps = {\r\n            ...blockWrapperProps,\r\n            style: {\r\n              ...(blockWrapperProps && { ...blockWrapperProps.style }),\r\n              ...extraStyle\r\n            },\r\n          };\r\n\r\n          return (\r\n            <BlockListBlock {...props}\r\n              wrapperProps={blockWrapperProps}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    //デフォルト\r\n    return (\r\n      <BlockListBlock {...props} />\r\n    );\r\n\r\n  };\r\n}, 'applyExtraAttributesInEditor');\r\n\r\naddFilter(\r\n  'editor.BlockListBlock',\r\n  'block-collections/extra-attributes-in-editor',\r\n  applyExtraAttributesInEditor,\r\n);\r\n\r\n//blocks.getSaveContent.extraPropsフック（フロントエンドへの反映）\r\nconst applyExtraAttributesInFrontEnd = (props, blockType, attributes) => {\r\n  if (props.className?.match(/itmar_ex_block/)) {//markdown-block内のブロックに限定\r\n    if (allowedBlocks.includes(blockType.name)) {\r\n      //属性の取り出し\r\n      const {\r\n        lineHeight,\r\n        margin_val,\r\n        padding_val,\r\n        radius_list,\r\n        border_list,\r\n      } = attributes;\r\n\r\n      //拡張したスタイル\r\n      let extraStyle = {};\r\n      extraStyle = {\r\n        margin: `${margin_val.top} ${margin_val.right} ${margin_val.bottom} ${margin_val.left}`,\r\n        padding: `${padding_val.top} ${padding_val.right} ${padding_val.bottom} ${padding_val.left}`,\r\n      }\r\n      if (blockType.name === 'core/paragraph' || blockType.name === 'core/list' || blockType.name === 'core/quote') {\r\n        extraStyle = {\r\n          ...extraStyle, lineHeight: lineHeight,\r\n        }\r\n      }\r\n\r\n      if (blockType.name === 'core/list' || blockType.name === 'core/quote') {\r\n        //角丸の設定\r\n        const list_radius_prm = (radius_list && Object.keys(radius_list).length === 1) ? radius_list.value : `${(radius_list && radius_list.topLeft) || ''} ${(radius_list && radius_list.topRight) || ''} ${(radius_list && radius_list.bottomRight) || ''} ${(radius_list && radius_list.bottomLeft) || ''}`\r\n        //ボーダーの設定\r\n        const list_border = borderProperty(border_list);\r\n\r\n        extraStyle = {\r\n          ...extraStyle, borderRadius: list_radius_prm, ...list_border\r\n        }\r\n      }\r\n\r\n      if (blockType.name === 'core/image') {\r\n        if (attributes.align === 'center') {//中央ぞろえの時\r\n          extraStyle = {\r\n            ...extraStyle, margin: `${margin_val.top} auto ${margin_val.bottom}`\r\n          }\r\n        }\r\n      }\r\n\r\n      return Object.assign(props, { style: { ...props.style, ...extraStyle } });\r\n    }\r\n  }\r\n  //デフォルト\r\n  return props;\r\n}\r\n\r\naddFilter(\r\n  'blocks.getSaveContent.extraProps',\r\n  'block-collections/-extra-attributes-in-front-end',\r\n  applyExtraAttributesInFrontEnd,\r\n);\r\n"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","borderProperty","borderObj","ret_prop","some","key","cssObj","side","sideData","String","width","match","border_style","style","color","border","module","exports","window","_extends","Object","assign","bind","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","allowedBlocks","addFilter","settings","name","includes","newAttributes","newStyles","margin_val","type","default","top","left","bottom","right","padding_val","lineHeight","radius_list","topLeft","topRight","bottomRight","bottomLeft","value","border_list","list_type","styles","label","__","isDefault","attributes","withInspectorControl","createHigherOrderComponent","BlockEdit","padding_resetValues","units","props","className","split","height","setAttributes","createElement","Fragment","InspectorControls","group","PanelBody","title","initialOpen","BoxControl","values","onChange","newValue","allowReset","resetValues","RangeControl","max","min","step","val","withInputField","BorderBoxControl","colors","BorderRadiusControl","newBrVal","applyExtraAttributesInEditor","BlockListBlock","isValid","wrapperProps","extraStyle","margin","padding","list_radius_prm","keys","list_border","borderRadius","align","borderCollapse","blockWrapperProps","applyExtraAttributesInFrontEnd","blockType"],"sourceRoot":""}