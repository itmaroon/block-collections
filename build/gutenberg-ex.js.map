{"version":3,"file":"gutenberg-ex.js","mappings":"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","sources":["webpack://block-collections/./src/styleProperty.js","webpack://block-collections/external window [\"wp\",\"blockEditor\"]","webpack://block-collections/external window [\"wp\",\"components\"]","webpack://block-collections/external window [\"wp\",\"compose\"]","webpack://block-collections/external window [\"wp\",\"element\"]","webpack://block-collections/external window [\"wp\",\"hooks\"]","webpack://block-collections/external window [\"wp\",\"i18n\"]","webpack://block-collections/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://block-collections/webpack/bootstrap","webpack://block-collections/webpack/runtime/compat get default export","webpack://block-collections/webpack/runtime/define property getters","webpack://block-collections/webpack/runtime/hasOwnProperty shorthand","webpack://block-collections/./src/gutenberg-ex.js"],"sourcesContent":["\r\n// sideの最初の文字を大文字にする関数\r\nconst capitalizeFirstLetter = string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function borderProperty(borderObj) {\r\n  if (borderObj) {//borderObjがundefinedでない\r\n    let keys = ['top', 'bottom', 'left', 'right'];\r\n    let ret_prop = null;\r\n    let doesKeyExist = keys.some(key => key in borderObj);\r\n    if (doesKeyExist) {//'top', 'bottom', 'left', 'right'が別設定\r\n      let cssObj = {};\r\n      for (let side in borderObj) {\r\n        const sideData = borderObj[side];\r\n        const startsWithZero = String(sideData.width || '').match(/^0/);\r\n        if (startsWithZero) {//widthが０ならCSS設定しない\r\n          continue;\r\n        }\r\n        const border_style = sideData.style || 'solid';\r\n        let camelCaseSide = `border${capitalizeFirstLetter(side)}`;\r\n        cssObj[camelCaseSide] = `${sideData.width} ${border_style} ${sideData.color}`;\r\n      }\r\n      ret_prop = cssObj;\r\n      return ret_prop;\r\n    } else {//同一のボーダー\r\n      const startsWithZero = String(borderObj.width || '').match(/^0/);\r\n      if (startsWithZero) {//widthが０ならnullを返す\r\n        return null;\r\n      }\r\n      const border_style = borderObj.style || 'solid';\r\n      ret_prop = { border: `${borderObj.width} ${border_style} ${borderObj.color}` }\r\n\r\n      return ret_prop;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n//角丸の設定\r\nexport function radiusProperty(radiusObj) {\r\n  const ret_prop = (radiusObj && Object.keys(radiusObj).length === 1)\r\n    ? radiusObj.value :\r\n    `${(radiusObj && radiusObj.topLeft) || ''} ${(radiusObj && radiusObj.topRight) || ''} ${(radiusObj && radiusObj.bottomRight) || ''} ${(radiusObj && radiusObj.bottomLeft) || ''}`\r\n  const ret_val = { borderRadius: ret_prop };\r\n  return ret_val;\r\n}\r\n\r\n//マージンの設定\r\nexport function marginProperty(marginObj) {\r\n  const ret_prop = `${marginObj.top} ${marginObj.right} ${marginObj.bottom} ${marginObj.left}`\r\n\r\n  const ret_val = { margin: ret_prop };\r\n  return ret_val;\r\n}\r\n//パディングの設定\r\nexport function paddingProperty(paddingObj) {\r\n  const ret_prop = `${paddingObj.top} ${paddingObj.right} ${paddingObj.bottom} ${paddingObj.left}`\r\n\r\n  const ret_val = { padding: ret_prop };\r\n  return ret_val;\r\n}\r\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\r\n * コアブロックカスタマイズ高階コンポーネント\r\n *\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { createHigherOrderComponent } from '@wordpress/compose';\r\nimport {\r\n  InspectorControls,\r\n  __experimentalBorderRadiusControl as BorderRadiusControl\r\n} from '@wordpress/block-editor';\r\n\r\nimport {\r\n  Button,\r\n  Panel,\r\n  PanelBody,\r\n  PanelRow,\r\n  ToggleControl,\r\n  RangeControl,\r\n  RadioControl,\r\n  TextControl,\r\n  __experimentalBoxControl as BoxControl,\r\n  __experimentalUnitControl as UnitControl,\r\n  __experimentalBorderBoxControl as BorderBoxControl\r\n} from '@wordpress/components';\r\n\r\nimport { borderProperty } from './styleProperty';\r\n\r\n// カスタマイズ対象とするブロック\r\nconst allowedBlocks = ['core/paragraph', 'core/list', 'core/image', 'core/quote', 'core/table'];\r\n\r\n//block登録フック（カスタム属性の追加）\r\nfunction addExSettings(settings, name) {\r\n  if (allowedBlocks.includes(name)) {\r\n    let newAttributes = {};\r\n    let newStyles = [];\r\n\r\n    newAttributes = {\r\n      margin_val: {\r\n        type: \"object\",\r\n        default: {\r\n          top: \"1em\",\r\n          left: \"1em\",\r\n          bottom: \"1em\",\r\n          right: \"1em\"\r\n        }\r\n      },\r\n      padding_val: {\r\n        type: \"object\",\r\n        default: {\r\n          top: \"1em\",\r\n          left: \"1em\",\r\n          bottom: \"1em\",\r\n          right: \"1em\"\r\n        }\r\n      }\r\n    };\r\n\r\n    if (name === 'core/image') {\r\n      newAttributes = {\r\n        ...newAttributes,\r\n        scaleWidth: {\r\n          type: 'string',\r\n          default: '100%',\r\n        },\r\n        scaleHeight: {\r\n          type: 'string',\r\n          default: '100%',\r\n        },\r\n        isFitScale: {\r\n          type: 'boolean',\r\n          default: false,\r\n        },\r\n\r\n      };\r\n    }\r\n\r\n    if (name === 'core/paragraph' || name === 'core/list' || name === 'core/quote') {\r\n      newAttributes = {\r\n        ...newAttributes,\r\n        lineHeight: {\r\n          type: 'number',\r\n          default: 1.6,\r\n        },\r\n\r\n      };\r\n    }\r\n\r\n    if (name === 'core/list' || name === 'core/quote' || name === 'core/table') {\r\n      newAttributes = {\r\n        ...newAttributes,\r\n        radius_list: {\r\n          type: \"object\",\r\n          default: {\r\n            topLeft: \"0px\",\r\n            topRight: \"0px\",\r\n            bottomRight: \"0px\",\r\n            bottomLeft: \"0px\",\r\n            value: \"0px\"\r\n          }\r\n        },\r\n        border_list: {\r\n          type: \"object\"\r\n        },\r\n\r\n      };\r\n    }\r\n\r\n    if (name === 'core/list') {\r\n      newAttributes = {\r\n        ...newAttributes,\r\n        list_type: {\r\n          type: \"string\",\r\n          default: \"UL\"\r\n        },\r\n      };\r\n    }\r\n\r\n    if (name === 'core/table') {\r\n\r\n      newStyles = [\r\n        ...(settings.styles || []), // 既存のスタイルを保持\r\n        {\r\n          name: 'gradient',\r\n          label: __('Gradient', 'block-collections'),\r\n          isDefault: false,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return {\r\n      ...settings,\r\n      attributes: {\r\n        ...settings.attributes,\r\n        ...newAttributes,\r\n      },\r\n      styles: newStyles.length ? newStyles : settings.styles, // 新しいスタイルがある場合にのみ上書き\r\n    };\r\n\r\n  }\r\n\r\n  //その他のブロック\r\n  return settings;\r\n}\r\n\r\naddFilter(\r\n  'blocks.registerBlockType',\r\n  'itmar-ex-block/add-setting',\r\n  addExSettings\r\n);\r\n\r\n//BlockEditカスタムフック（インスペクターの追加）\r\nconst withInspectorControl = createHigherOrderComponent((BlockEdit) => {\r\n  //スペースのリセットバリュー\r\n  const padding_resetValues = {\r\n    top: '1em',\r\n    left: '1em',\r\n    right: '1em',\r\n    bottom: '1em',\r\n  }\r\n\r\n  const units = [\r\n    { value: 'px', label: 'px' },\r\n    { value: 'em', label: 'em' },\r\n    { value: 'rem', label: 'rem' },\r\n    { value: '%', label: '%' },\r\n  ];\r\n\r\n  return (props) => {\r\n    const classNames = props.attributes.className ? props.attributes.className.split(' ') : [];\r\n    const hasItmarBlockClass = classNames.includes('itmar_ex_block');\r\n    if (hasItmarBlockClass) {//itmar_ex_blockをクラス名に持つブロックに限定\r\n\r\n      if (allowedBlocks.includes(props.name)) {\r\n        const {\r\n          lineHeight,\r\n          margin_val,\r\n          padding_val,\r\n          border_list,\r\n          radius_list,\r\n          isFitScale,\r\n          scaleWidth,\r\n          scaleHeight,\r\n        } = props.attributes;\r\n\r\n        const setAttributes = props.setAttributes;\r\n        return (\r\n          <>\r\n            <BlockEdit {...props} />\r\n\r\n            {props.name === 'core/image' &&\r\n              <InspectorControls group=\"settings\">\r\n                <PanelBody title={__(\"Size of Image\", 'block-collections')} initialOpen={false}>\r\n                  <ToggleControl\r\n                    label={__(\"Fit Parent Element\", 'block-collections')}\r\n                    checked={isFitScale}\r\n                    onChange={(newValue) => {\r\n                      setAttributes({ isFitScale: newValue });\r\n                    }}\r\n                  />\r\n                </PanelBody>\r\n\r\n              </InspectorControls>\r\n            }\r\n            <InspectorControls group=\"styles\">\r\n              <PanelBody title={__(\"Dimension\", 'block-collections')} initialOpen={false}>\r\n                <BoxControl\r\n                  label={__(\"Margin settings\", 'block-collections')}\r\n                  values={margin_val}\r\n                  onChange={newValue => setAttributes({ margin_val: newValue })}\r\n                  units={units}\t// 許可する単位\r\n                  allowReset={true}\t// リセットの可否\r\n                  resetValues={padding_resetValues}\t// リセット時の値\r\n\r\n                />\r\n\r\n                <BoxControl\r\n                  label={__(\"Padding settings\", 'block-collections')}\r\n                  values={padding_val}\r\n                  onChange={newValue => setAttributes({ padding_val: newValue })}\r\n                  units={units}\t// 許可する単位\r\n                  allowReset={true}\t// リセットの可否\r\n                  resetValues={padding_resetValues}\t// リセット時の値\r\n\r\n                />\r\n\r\n              </PanelBody>\r\n              {(props.name === 'core/paragraph' || props.name === 'core/list' || props.name === 'core/quote') &&\r\n                <>\r\n                  <PanelBody title={__(\"LineHight settings\", 'block-collections')}>\r\n                    <RangeControl\r\n                      value={lineHeight}\r\n                      label=\"lineHeight\"\r\n                      max={3}\r\n                      min={1}\r\n                      step={.1}\r\n                      onChange={(val) => setAttributes({ lineHeight: val })}\r\n                      withInputField={true}\r\n                    />\r\n                  </PanelBody>\r\n\r\n                </>\r\n              }\r\n              {(props.name === 'core/list' || props.name === 'core/quote' || props.name === 'core/table') &&\r\n                <PanelBody title={__(\"Border settings\", 'block-collections')} initialOpen={false} className=\"border_design_ctrl\">\r\n                  <BorderBoxControl\r\n                    colors={[{ color: '#72aee6' }, { color: '#000' }, { color: '#fff' }]}\r\n                    onChange={(newValue) => setAttributes({ border_list: newValue })}\r\n                    value={border_list}\r\n\r\n                  />\r\n                  <BorderRadiusControl\r\n                    values={radius_list}\r\n                    onChange={(newBrVal) =>\r\n                      setAttributes({ radius_list: typeof newBrVal === 'string' ? { \"value\": newBrVal } : newBrVal })}\r\n                  />\r\n                </PanelBody>\r\n              }\r\n              {(props.name === 'core/image') &&\r\n                <>\r\n                  <PanelBody title={__(\"Scale settings\", 'block-collections')} initialOpen={false} >\r\n                    <PanelRow\r\n                      className='distance_row'\r\n                    >\r\n                      <UnitControl\r\n                        dragDirection=\"e\"\r\n                        onChange={(value) => setAttributes({ scaleWidth: value })}\r\n                        label={__(\"Width\", 'block-collections')}\r\n                        value={scaleWidth}\r\n                      />\r\n                      <UnitControl\r\n                        dragDirection=\"e\"\r\n                        onChange={(value) => setAttributes({ scaleHeight: value })}\r\n                        label={__(\"Height\", 'block-collections')}\r\n                        value={scaleHeight}\r\n                      />\r\n                    </PanelRow>\r\n                  </PanelBody>\r\n\r\n                </>\r\n              }\r\n            </InspectorControls>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n    //その他のブロック\r\n    return <BlockEdit {...props} />;\r\n  };\r\n}, 'withInspectorControl');\r\n\r\naddFilter('editor.BlockEdit', 'itmar-ex-block/with-inspector-control', withInspectorControl);\r\n\r\n//BlockListBlockフック（編集画面のブロックの外観等の反映）\r\nconst applyExtraAttributesInEditor = createHigherOrderComponent((BlockListBlock) => {\r\n  return (props) => {\r\n    //propsを展開\r\n    const {\r\n      attributes,\r\n      name,\r\n      isValid,\r\n      wrapperProps = {} // wrapperPropsが未定義の場合は空のオブジェクトをデフォルト値として設定\r\n    } = props;\r\n\r\n    const classNames = props.attributes.className ? props.attributes.className.split(' ') : [];\r\n    const hasItmarBlockClass = classNames.includes('itmar_ex_block');\r\n    if (hasItmarBlockClass) {//itmar_ex_blockをクラス名に持つブロックに限定\r\n      if (allowedBlocks.includes(name)) {\r\n        if (isValid) {\r\n          //属性の取り出し\r\n          const {\r\n            lineHeight,\r\n            margin_val,\r\n            padding_val,\r\n            radius_list,\r\n            border_list,\r\n            isFitScale,\r\n            scaleWidth,\r\n            scaleHeight\r\n          } = attributes;\r\n\r\n          //拡張したスタイル・クラス\r\n\r\n          let extraStyle = {};\r\n          let extraClassNames = wrapperProps.className ? wrapperProps.className : ''; // 既存の className を取得、または空文字列を設定\r\n\r\n          extraStyle = {\r\n            margin: `${margin_val.top} ${margin_val.right} ${margin_val.bottom} ${margin_val.left}`,\r\n            padding: `${padding_val.top} ${padding_val.right} ${padding_val.bottom} ${padding_val.left}`,\r\n          }\r\n          if (name === 'core/paragraph' || name === 'core/list' || name === 'core/quote') {\r\n            extraStyle = {\r\n              ...extraStyle, lineHeight: lineHeight,\r\n            }\r\n          }\r\n\r\n          if (name === 'core/list' || name === 'core/quote') {\r\n            //角丸の設定\r\n            const list_radius_prm = (radius_list && Object.keys(radius_list).length === 1) ? radius_list.value : `${(radius_list && radius_list.topLeft) || ''} ${(radius_list && radius_list.topRight) || ''} ${(radius_list && radius_list.bottomRight) || ''} ${(radius_list && radius_list.bottomLeft) || ''}`\r\n            const list_border = borderProperty(border_list);\r\n            extraStyle = {\r\n              ...extraStyle, borderRadius: list_radius_prm, ...list_border\r\n            }\r\n          }\r\n\r\n          if (name === 'core/image') {\r\n            extraStyle = {\r\n              ...extraStyle, width: scaleWidth, height: scaleHeight\r\n            }\r\n            if (attributes.align === 'center') {//中央ぞろえの時\r\n              extraStyle = {\r\n                ...extraStyle, margin: `${margin_val.top} auto ${margin_val.bottom}`\r\n              }\r\n            }\r\n            if (isFitScale) {//画像スタイルを合わせる\r\n              extraClassNames += ' fit-scale-image'; // クラス名を追加\r\n            }\r\n\r\n          }\r\n\r\n          if (name === 'core/table') {\r\n            const list_border = borderProperty(border_list);\r\n            extraStyle = {\r\n              ...extraStyle, borderCollapse: 'collapse', ...list_border\r\n            }\r\n          }\r\n          //既存スタイルとマージ\r\n\r\n          const newWrapperProps = {\r\n            ...wrapperProps,\r\n            style: { ...wrapperProps.style, ...extraStyle },\r\n            className: extraClassNames.trim() // trim() で余分なスペースを削除\r\n          };\r\n\r\n          return (\r\n            <BlockListBlock {...props}\r\n              wrapperProps={newWrapperProps}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    //デフォルト\r\n    return (\r\n      <BlockListBlock {...props} />\r\n    );\r\n\r\n  };\r\n}, 'applyExtraAttributesInEditor');\r\n\r\naddFilter(\r\n  'editor.BlockListBlock',\r\n  'block-collections/extra-attributes-in-editor',\r\n  applyExtraAttributesInEditor,\r\n);\r\n\r\n//blocks.getSaveContent.extraPropsフック（フロントエンドへの反映）\r\nconst applyExtraAttributesInFrontEnd = (props, blockType, attributes) => {\r\n  if (props.className?.match(/itmar_ex_block/)) {//markdown-block内のブロックに限定\r\n    if (allowedBlocks.includes(blockType.name)) {\r\n      //属性の取り出し\r\n      const {\r\n        lineHeight,\r\n        margin_val,\r\n        padding_val,\r\n        radius_list,\r\n        border_list,\r\n        isFitScale,\r\n        scaleWidth,\r\n        scaleHeight\r\n      } = attributes;\r\n\r\n      //拡張したスタイル\r\n      let extraStyle = {};\r\n      let extraClassNames = props.className ? props.className : ''; // 既存の className を取得、または空文字列を設定\r\n\r\n      extraStyle = {\r\n        margin: `${margin_val.top} ${margin_val.right} ${margin_val.bottom} ${margin_val.left}`,\r\n        padding: `${padding_val.top} ${padding_val.right} ${padding_val.bottom} ${padding_val.left}`,\r\n      }\r\n      if (blockType.name === 'core/paragraph' || blockType.name === 'core/list' || blockType.name === 'core/quote') {\r\n        extraStyle = {\r\n          ...extraStyle, lineHeight: lineHeight,\r\n        }\r\n      }\r\n\r\n      if (blockType.name === 'core/list' || blockType.name === 'core/quote') {\r\n        //角丸の設定\r\n        const list_radius_prm = (radius_list && Object.keys(radius_list).length === 1) ? radius_list.value : `${(radius_list && radius_list.topLeft) || ''} ${(radius_list && radius_list.topRight) || ''} ${(radius_list && radius_list.bottomRight) || ''} ${(radius_list && radius_list.bottomLeft) || ''}`\r\n        //ボーダーの設定\r\n        const list_border = borderProperty(border_list);\r\n\r\n        extraStyle = {\r\n          ...extraStyle, borderRadius: list_radius_prm, ...list_border\r\n        }\r\n      }\r\n\r\n      if (blockType.name === 'core/image') {\r\n        extraStyle = {\r\n          ...extraStyle, width: scaleWidth, height: scaleHeight\r\n        }\r\n        if (attributes.align === 'center') {//中央ぞろえの時\r\n          extraStyle = {\r\n            ...extraStyle, margin: `${margin_val.top} auto ${margin_val.bottom}`\r\n          }\r\n        }\r\n        if (isFitScale) {//画像スタイルを合わせる\r\n          extraClassNames += ' fit-scale-image'; // クラス名を追加\r\n        }\r\n\r\n      }\r\n\r\n      return Object.assign(props,\r\n        {\r\n          style: { ...props.style, ...extraStyle },\r\n          className: extraClassNames.trim() // trim() で余分なスペースを削除\r\n        }\r\n      );\r\n    }\r\n  }\r\n  //デフォルト\r\n  return props;\r\n}\r\n\r\naddFilter(\r\n  'blocks.getSaveContent.extraProps',\r\n  'block-collections/-extra-attributes-in-front-end',\r\n  applyExtraAttributesInFrontEnd,\r\n);\r\n"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","borderProperty","borderObj","ret_prop","some","key","cssObj","side","sideData","String","width","match","border_style","style","color","border","module","exports","window","_extends","Object","assign","bind","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","allowedBlocks","addFilter","settings","name","includes","newAttributes","newStyles","margin_val","type","default","top","left","bottom","right","padding_val","scaleWidth","scaleHeight","isFitScale","lineHeight","radius_list","topLeft","topRight","bottomRight","bottomLeft","value","border_list","list_type","styles","label","__","isDefault","attributes","withInspectorControl","createHigherOrderComponent","BlockEdit","padding_resetValues","units","props","className","split","setAttributes","createElement","Fragment","InspectorControls","group","PanelBody","title","initialOpen","ToggleControl","checked","onChange","newValue","BoxControl","values","allowReset","resetValues","RangeControl","max","min","step","val","withInputField","BorderBoxControl","colors","BorderRadiusControl","newBrVal","PanelRow","UnitControl","dragDirection","applyExtraAttributesInEditor","BlockListBlock","isValid","wrapperProps","extraStyle","extraClassNames","margin","padding","list_radius_prm","keys","list_border","borderRadius","height","align","borderCollapse","newWrapperProps","trim","applyExtraAttributesInFrontEnd","blockType"],"sourceRoot":""}