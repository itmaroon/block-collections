{"version":3,"file":"313.js","mappings":"6LA+CO,SAASA,EAAqBC,EAAUC,GAC7C,MAAMC,GAAkBC,EAAAA,EAAAA,QAAOF,GAE1BG,IAAQH,EAAcC,EAAgBG,WACzCH,EAAgBG,QAAUJ,IAG5BK,EAAAA,EAAAA,YAAU,IACDN,KACN,CAACE,EAAgBG,SACtB,C,mEC1CA,MAAME,GAAWC,EAAAA,EAAAA,eACf,IACA,CAAEC,KAAM,iCAAkCC,OAAQ,UAClD,eAGIC,GAAWH,EAAAA,EAAAA,eACf,OACA,CAAC,EACDD,GACAK,EAAAA,EAAAA,IAAG,iGAAkG,4BAGjGC,EAAQ,CACZ,CAAEC,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,MAAOC,MAAO,QAGzB,IAAeC,IAA6B,IAA5B,UAAEC,EAAS,SAAEC,GAAUF,EACrC,MAAM,UACJG,EAAS,SACTC,EAAQ,UACRC,EAAS,WACTC,EAAU,WACVC,GACEN,EAEJ,OACET,EAAAA,EAAAA,eAAAgB,EAAAA,SAAA,MACEhB,EAAAA,EAAAA,eAACiB,EAAAA,YAAW,CACVV,OAAOH,EAAAA,EAAAA,IAAG,YAAa,2BACvBc,KAAMf,EACNgB,cAAc,MACdb,MAAOK,EACPS,sBAAoB,EACpBV,SAAWW,IACT,MAAMC,EAAW,IAAKb,EAAWE,UAAWU,GAC5CX,EAASY,EAAS,KAItBtB,EAAAA,EAAAA,eAACuB,EAAAA,SAAQ,CAACC,UAAU,eAClBxB,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACVC,cAAc,IACdhB,SAAWW,IACT,MAAMC,EAAW,IAAKb,EAAWI,UAAWQ,GAC5CX,EAASY,EAAS,EAEpBf,OAAOH,EAAAA,EAAAA,IAAG,OAAQ,2BAClBE,MAAOO,EACPR,MAAOA,KAETL,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACVC,cAAc,IACdhB,SAAWW,IACT,MAAMC,EAAW,IAAKb,EAAWM,WAAYM,GAC7CX,EAASY,EAAS,EAEpBf,OAAOH,EAAAA,EAAAA,IAAG,iBAAkB,2BAC5BE,MAAOS,EACPV,MAAOA,MAIXL,EAAAA,EAAAA,eAAC2B,EAAAA,mBAAkB,CACjBC,OAAOxB,EAAAA,EAAAA,IAAG,iBAAkB,kBAC5ByB,aAAa,EACbC,cAAe,CACb,CACExB,MAAOQ,EACPJ,SAAWW,IACT,MAAMC,EAAW,IAAKb,EAAWK,WAAYO,GAC7CX,EAASY,EAAS,EAEpBf,OAAOH,EAAAA,EAAAA,IAAG,aAAc,uBAK9BJ,EAAAA,EAAAA,eAAA,SAAOwB,UAAU,mCAAkCpB,EAAAA,EAAAA,IAAG,cAAe,6BACrEJ,EAAAA,EAAAA,eAACuB,EAAAA,SAAQ,CAACC,UAAU,uBAClBxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACXC,SAAUpB,EACVqB,QAAS,CACP,CAAE1B,OAAOH,EAAAA,EAAAA,IAAG,OAAQ,2BAA4BE,MAAO,QACvD,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,QAAS,2BAA4BE,MAAO,UAE1DI,SAAWW,IACT,MAAMC,EAAW,IAAKb,EAAWG,SAAUS,GAC3CX,EAASY,EAAS,KAO7B,C,uFC9FD,MAAMY,EAAgBA,CAACC,EAAWC,KAChC,IAAIC,EAAaC,EAAcC,EAAgBC,EAC/C,OAAQL,GACN,IAAK,WACHE,EAAcD,EACdE,EAAeF,EACfG,GAA6B,EAAZH,EACjBI,GAA8B,EAAZJ,EAClB,MACF,IAAK,YACHC,GAA0B,EAAZD,EACdE,EAAeF,EACfG,EAAiBH,EACjBI,GAA8B,EAAZJ,EAClB,MACF,IAAK,cAYL,IAAK,eACHC,EAAcD,EACdE,GAA2B,EAAZF,EACfG,GAA6B,EAAZH,EACjBI,EAAkBJ,EAClB,MAXF,IAAK,eACHC,GAA0B,EAAZD,EACdE,GAA2B,EAAZF,EACfG,EAAiBH,EACjBI,EAAkBJ,EAClB,MAOF,IAAK,MACHC,EAAc,EACdC,EAAe,EACfC,GAA6B,EAAZH,EACjBI,EAAkBJ,EAGtB,MACE,CACEK,QAASJ,EACTK,SAAUJ,EACVK,WAAYJ,EACZK,WAAYJ,EACb,EAIL,SAASK,EAAWC,GAGlB,OAAOA,EAAWC,SAAS,oBAAsBD,EAAWC,SAAS,kBACvE,CA4ZA,IAxPoBvC,IAAyC,IAAxC,YAAEwC,EAAW,SAAEtC,EAAQ,SAAEuC,GAAUzC,EACtD,MAAO0C,EAAaC,IAAkBC,EAAAA,EAAAA,UAASJ,IACzC,WACJK,EAAU,OACVC,EAAM,QACNC,EAAO,UACPC,EAAS,UACTC,EAAS,YACTC,EAAW,KACXC,EAAI,UACJC,EAAS,SACTxB,EAAQ,aACRyB,EAAY,cACZC,EAAa,MACbC,EAAK,QACLC,EAAO,MACPC,EAAK,OACLC,EAAM,OACNC,EAAM,UACNC,EAAS,SACTC,EAAQ,WACRC,EAAU,gBACVC,GACErB,EAiBJ,OAbApD,EAAAA,EAAAA,YAAU,KACJkD,EAAYuB,kBAAoBA,GAClCpB,EAAeH,EACjB,GACC,CAACA,KAIJlD,EAAAA,EAAAA,YAAU,KACR,MAAM0E,EArMgBtB,KACxB,MAAM,WACJG,EAAU,OACVC,EAAM,QACNC,EAAO,UACPC,EAAS,UACTC,EAAS,YACTC,EAAW,KACXC,EAAI,UACJC,EAAS,SACTxB,EAAQ,aACRyB,EAAY,cACZC,EAAa,MACbC,EAAK,QACLC,EAAO,MACPC,EAAK,OACLC,EAAM,OACNC,EAAM,UACNC,EAAS,SACTC,EAAQ,WACRC,EAAU,gBACVC,GACErB,EAEJ,GAAmB,UAAfG,EAYF,MAV8B,SAAVU,EAAmB,CACrCU,MAAO,CACLC,UAAY,GAAEnB,OAAaC,OAAeC,OAAeH,0BAA+BC,OAAaC,OAAeC,OAAeH,OAAYI,MAE/I,CACFe,MAAO,CACLC,UAAY,GAAEnB,OAAaC,OAAeC,OAAeH,OAAYI,YAAsBH,OAAaC,OAAeC,OAAeH,oBAOvI,GAAmB,WAAfD,EAAyB,CAChC,MAAMsB,EAAYJ,GAAmB,UAErC,GAAI1B,EAAW8B,GAMb,OALAC,EAAAA,EAAAA,UAAS,gBAAgBC,aACvB,SACAzE,EAAAA,EAAAA,IAAG,sEAAuE,6BAC1E,CAAE0E,KAAM,WAAYC,eAAe,IAE9B,KAGT,MAAMC,GAAWC,EAAAA,EAAAA,IAAWN,GAEtBO,EAAYF,EAASG,UAAYvB,EAAa,IAAMoB,EAASG,UAAYvB,EAAY,IACrFwB,EAAWJ,EAASG,UAAYvB,EAAa,EAAIoB,EAASG,UAAYvB,EAAY,EAClFyB,GAAaC,EAAAA,EAAAA,IAAWN,EAASO,IAAKP,EAASQ,WAAYN,GAC3DO,GAAYH,EAAAA,EAAAA,IAAWN,EAASO,IAAKP,EAASQ,WAAYJ,GAG1DM,EAAUxD,EAAc2B,EAAczB,GAEtCuD,EAAY,CAChBlB,MAAO,CACLmB,OAAQ,OACRC,WAAYlB,IAmBhB,MAf8B,UAAVZ,EAAoB,IACnC4B,EACHlB,MAAO,IACFkB,EAAUlB,MACbC,UAAY,GAAEgB,EAAQjD,aAAaiD,EAAQhD,cAAciB,OAAU8B,MAAcC,EAAQ/C,gBAAgB+C,EAAQ9C,gBAAgBe,OAAU0B,YAAqBK,EAAQjD,aAAaiD,EAAQhD,cAAciB,0BAA6B+B,EAAQ/C,gBAAgB+C,EAAQ9C,gBAAgBe,oBAExR,IACCgC,EACHlB,MAAO,IACFkB,EAAUlB,MACbC,UAAY,GAAEgB,EAAQjD,aAAaiD,EAAQhD,cAAciB,oBAAuB+B,EAAQ/C,gBAAgB+C,EAAQ9C,gBAAgBe,0BAA6B+B,EAAQjD,aAAaiD,EAAQhD,cAAciB,OAAU8B,YAAoBC,EAAQ/C,gBAAgB+C,EAAQ9C,gBAAgBe,OAAU0B,KAMtS,CAGK,GAAmB,YAAfhC,EAA0B,CACjC,MAAMsB,EAAYJ,GAAmB,UAErC,GAAI1B,EAAW8B,GAMb,OALAC,EAAAA,EAAAA,UAAS,gBAAgBC,aACvB,SACAzE,EAAAA,EAAAA,IAAG,uEAAwE,6BAC3E,CAAE0E,KAAM,WAAYC,eAAe,IAE9B,KAET,MAAMe,GAAWC,EAAAA,EAAAA,IAASpB,GACpBqB,EAAY9D,EAAc4B,EAAeK,GACzC8B,EAAW/D,EAAc4B,EAAeG,GACxC0B,EAAY,CAChBlB,MAAO,CACLoB,WAAa,uBAAsB7B,KACnCkC,eAAiB,QAAOhC,OACxB0B,OAAQ,SAoBZ,MAjB+B,UAAV7B,EAAoB,IACpC4B,EACHlB,MAAO,IACFkB,EAAUlB,MACbC,UAAY,GAAEsB,EAAUvD,aAAauD,EAAUpD,gBAAyB,EAATuB,gBAAyB2B,EAASK,QAAQL,EAASM,UAAUN,EAASO,qBAAqBJ,EAASvD,cAAcuD,EAAStD,8BAA8BmD,EAASK,QAAQL,EAASM,UAAUN,EAASO,2DAIrQ,IACCV,EACHlB,MAAO,IACFkB,EAAUlB,MACbC,UAAY,GAAEsB,EAAUvD,aAAauD,EAAUpD,gBAAyB,EAATuB,gBAAyB2B,EAASK,QAAQL,EAASM,UAAUN,EAASO,qBAAqBJ,EAASvD,cAAcuD,EAAStD,8BAA8BmD,EAASK,QAAQL,EAASM,UAAUN,EAASO,oDAM3Q,CAGK,GAAmB,aAAfhD,EAA2B,CAGlC,MAAMsC,EAAY,CAChBlB,MAAO,CACLF,gBAAkB,uBAAsBF,KACxCuB,OAAS,qCACTU,iBAAmB,2BACnBC,kBAAoB,2BACpBL,eAAiB,SAAQ9B,UAmB7B,MAhBgC,UAAVL,EAAoB,IACrC4B,EACHlB,MAAO,IACFkB,EAAUlB,MACbC,UAAY,2EAEZ,IACCiB,EACHlB,MAAO,IACFkB,EAAUlB,MACbC,UAAY,0EAOlB,GAuCoB8B,CAAUtD,GACxBsB,GAAW9D,EAAS8D,EAAWtB,EAAY,GAC9C,CAACA,KAGFlD,EAAAA,EAAAA,eAAAgB,EAAAA,SAAA,MACEhB,EAAAA,EAAAA,eAACyG,EAAAA,kBAAiB,CAACC,MAAM,WACvB1G,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,cAAe,2BAA4ByB,aAAa,IAC3E7B,EAAAA,EAAAA,eAAA,OAAKwB,UAAU,sBACbxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACXC,SAAUqB,EACVpB,QAAS,CACP,CAAE1B,OAAOH,EAAAA,EAAAA,IAAG,QAAS,2BAA4BE,MAAO,SACxD,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,cAAe,2BAA4BE,MAAO,UAC9D,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,eAAgB,2BAA4BE,MAAO,WAC/D,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,eAAgB,2BAA4BE,MAAO,aAEjEI,SAAWkG,GAAiBzD,EAAe,IAAKD,EAAaG,WAAYuD,QAK/D,UAAfvD,IACCrD,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,iBAAkB,2BAA4ByB,aAAa,IAC9E7B,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAOgD,EACP/C,OAAOH,EAAAA,EAAAA,IAAG,SAAU,2BACpB0G,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAaI,OAAQ0D,IAC5DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAOiD,EACPhD,OAAOH,EAAAA,EAAAA,IAAG,oBAAqB,2BAC/B0G,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAaK,QAASyD,IAC7DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAOkD,EACPjD,OAAOH,EAAAA,EAAAA,IAAG,yBAA0B,2BACpC0G,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAaM,UAAWwD,IAC/DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAOmD,EACPlD,OAAOH,EAAAA,EAAAA,IAAG,OAAQ,2BAClB0G,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAaO,UAAWuD,IAC/DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAACkH,EAAAA,yCAA0B,CACzBtF,OAAOxB,EAAAA,EAAAA,IAAG,uBAAwB,2BAClC+G,SAAU,CACR,CACErE,WAAYY,EACZnD,OAAOH,EAAAA,EAAAA,IAAG,sBAAuB,2BACjCgH,cAAgB/F,GAAa8B,EAAe,IAAKD,EAAaQ,YAAarC,SAQrE,WAAfgC,IACCrD,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,uBAAwB,2BAA4ByB,aAAa,IACpF7B,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAO8B,EACP7B,OAAOH,EAAAA,EAAAA,IAAG,WAAY,2BACtB0G,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAad,SAAU4E,IAC9DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAOsD,EACPrD,OAAOH,EAAAA,EAAAA,IAAG,YAAa,2BACvB0G,IAAK,IACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAaU,UAAWoD,IAC/DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAOqD,EACPpD,OAAOH,EAAAA,EAAAA,IAAG,OAAQ,2BAClB0G,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAaS,KAAMqD,IAC1DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAACuB,EAAAA,SAAQ,MACPvB,EAAAA,EAAAA,eAAA,OAAKwB,UAAU,oBACbxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACXC,SAAU6B,EACV5B,QAAS,CACP,CAAE3B,MAAO,YACT,CAAEA,MAAO,aACT,CAAEA,MAAO,eACT,CAAEA,MAAO,iBAEXI,SAAWkG,GAAiBzD,EAAe,IAAKD,EAAaW,aAAc+C,QAG/E5G,EAAAA,EAAAA,eAAA,OAAKwB,UAAU,UACbxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACXC,SAAU+B,EACV9B,QAAS,CACP,CAAE3B,MAAO,SACT,CAAEA,MAAO,SAGXI,SAAWkG,GAAiBzD,EAAe,IAAKD,EAAaa,MAAO6C,SAS9D,YAAfvD,IAECrD,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,wBAAyB,2BAA4ByB,aAAa,IACrF7B,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAO0D,EACPzD,OAAOH,EAAAA,EAAAA,IAAG,UAAW,2BACrB0G,IAAK,EACLC,IAAK,EACLM,KAAM,GACN3G,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAac,QAASgD,IAC7DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAO2D,EACP1D,MAAM,QACNuG,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAae,MAAO+C,IAC3DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAO6D,EACP5D,MAAM,SACNuG,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAaiB,OAAQ6C,IAC5DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAO4D,EACP3D,MAAM,kBACNuG,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAagB,OAAQ8C,IAC5DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAA,OAAKwB,UAAU,4BACbxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACXC,SAAU8B,EACV7B,QAAS,CACP,CAAE3B,MAAO,gBACT,CAAEA,MAAO,aACT,CAAEA,MAAO,QAEXI,SAAWkG,GAAiBzD,EAAe,IAAKD,EAAaY,cAAe8C,QAMpE,aAAfvD,IACCrD,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,wBAAyB,2BAA4ByB,aAAa,IACrF7B,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAO8D,EACP7D,OAAOH,EAAAA,EAAAA,IAAG,aAAc,2BACxB0G,IAAK,GACLC,IAAK,EACLrG,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAakB,UAAW4C,IAC/DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACXvG,MAAO+D,EACP9D,OAAOH,EAAAA,EAAAA,IAAG,gBAAiB,2BAC3B0G,IAAK,EACLC,IAAK,EACLM,KAAM,GACN3G,SAAWsG,GAAQ7D,EAAe,IAAKD,EAAamB,SAAU2C,IAC9DC,gBAAgB,KAElBjH,EAAAA,EAAAA,eAAA,iBACEA,EAAAA,EAAAA,eAACsH,EAAAA,cAAa,CACZ/G,OAAOH,EAAAA,EAAAA,IAAG,eAAgB,2BAC1BmH,QAASjD,EACT5D,SAAUA,IAAMyC,EAAe,IAAKD,EAAaoB,YAAaA,SAOvErB,EAEA,C,mECrXP,IAhG2BzC,IAAiD,IAAhD,MAAEoB,EAAK,UAAE4F,EAAS,YAAE3F,EAAW,SAAEnB,GAAUF,EACrE,MAAM,SACJiH,EAAQ,WACRC,EAAU,WACVC,EAAU,SACVC,GACEJ,EAEEK,EAAoB,CACxB,CAAEvH,MAAO,oBAAqBC,MAAO,QAASmH,WAAY,qBAC1D,CAAEpH,MAAO,yBAA0BC,MAAO,cAAemH,WAAY,0BACrE,CAAEpH,MAAO,iBAAkBC,MAAO,UAAWmH,WAAY,kBACzD,CAAEnH,MAAO,eAAgBD,MAAO,2BAA4BoH,WAAY,4BACxE,CAAEnH,MAAO,YAAaD,MAAO,mBAAoBoH,WAAY,qBASzDI,EAAe,CACnBC,OAAQA,CAACC,EAAUC,KAAU,IACxBD,EACHN,WAAYO,EAAMC,KAAKR,cAkB3B,OACE1H,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,MAAOA,EAAOC,YAAaA,IACpC7B,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACVC,cAAc,IACdhB,SAAWW,IACTA,EAAuB,IAAZA,EAAiBA,EAAW,MACvC,MAAMC,EAAW,IAAKkG,EAAWC,SAAUpG,GAC3CX,EAASY,EAAS,EAEpBf,OAAOH,EAAAA,EAAAA,IAAG,OAAQ,2BAClBE,MAAOmH,EACPpH,MAtCQ,CACZ,CAAEC,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,MAAOC,MAAO,WAsCrBP,EAAAA,EAAAA,gBA5BemI,IAAA,IAAC,MAAE5H,EAAK,MAAED,EAAK,SAAEI,GAAUyH,EAAA,OAC5CnI,EAAAA,EAAAA,eAAAgB,EAAAA,SAAA,KACGT,IAASP,EAAAA,EAAAA,eAAA,SAAOwB,UAAU,kCAAkCjB,IAC7DP,EAAAA,EAAAA,eAACoI,EAAAA,GAAM,CACLnG,QAAS4F,EACTvH,MAAOuH,EAAkBQ,MAAMN,GAAWA,EAAOzH,QAAUA,IAC3DI,SAAWW,IACTX,EAASW,EAASf,MAAM,EAE1BgI,OAAQR,IAET,GAiBU,CACTvH,OAAOH,EAAAA,EAAAA,IAAG,cAAe,2BACzBE,MAAOoH,EACPhH,SAAWW,IACT,MAAMC,EAAW,IAAKkG,EAAWE,WAAYrG,GAC7CX,EAASY,EAAS,KAItBtB,EAAAA,EAAAA,eAAA,SAAOwB,UAAU,mCAAkCpB,EAAAA,EAAAA,IAAG,cAAe,6BACrEJ,EAAAA,EAAAA,eAACuB,EAAAA,SAAQ,CAACC,UAAU,qBAClBxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACXC,SAAU2F,EACV1F,QAAS,CACP,CAAE1B,MAAO,QAASD,MAAO,OACzB,CAAEC,MAAO,UAAWD,MAAO,OAC3B,CAAEC,MAAO,SAAUD,MAAO,OAC1B,CAAEC,MAAO,SAAUD,MAAO,OAC1B,CAAEC,MAAO,OAAQD,MAAO,OACxB,CAAEC,MAAO,QAASD,MAAO,QAE3BI,SAAWW,IACT,MAAMC,EAAW,IAAKkG,EAAWG,WAAYtG,GAC7CX,EAASY,EAAS,MAKxBtB,EAAAA,EAAAA,eAAA,SAAOwB,UAAU,mCAAkCpB,EAAAA,EAAAA,IAAG,iBAAkB,6BACxEJ,EAAAA,EAAAA,eAACsH,EAAAA,cAAa,CACZC,QAASK,EACTlH,SAAWW,IACT,MAAMC,EAAW,IAAKkG,EAAWI,SAAUvG,GAC3CX,EAASY,EAAS,IAGZ,C,wMChEhB,MAAMiH,EAAsB,CAC3BC,IAAK,OACLC,KAAM,OACNC,MAAO,OACPC,OAAQ,QAIHC,EAAqB,CAC1BJ,IAAK,MACLC,KAAM,MACNC,MAAO,MACPC,OAAQ,OAGHtI,EAAQ,CACb,CAAEC,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,MAAOC,MAAO,QAGlBsI,EAAkBC,IAEtB9I,EAAAA,EAAAA,eAAA,OAAK+I,MAAM,KAAKC,OAAO,KAAKC,MAAM,+BACjCjJ,EAAAA,EAAAA,eAAA,QAAMkJ,EAAE,IAAIC,EAAE,KAAK1B,SAAS,KAAK,cAAY,QAAS,IAAGqB,MAM7C,SAASM,EAAI5I,GAA0C,IAAzC,WAAE6I,EAAU,cAAEC,EAAa,SAAEC,GAAU/I,EACnE,MAAM,QACLgJ,EAAO,eACPC,EAAc,YACdC,EAAW,UACXC,EAAS,mBACTC,EAAkB,eAClBC,EAAc,gBACdC,EAAe,MACfC,EAAK,WACLC,EAAU,WACVC,EAAU,UACVC,EAAS,eACTC,EAAc,eACdC,EAAc,YACdC,EAAW,eACXC,EAAc,UACdC,EAAS,aACTC,EAAY,eACZC,EAAc,kBACdC,EAAiB,qBACjBC,EAAoB,SACpBC,EAAQ,gBACRC,EAAe,UACfrJ,GACG6H,EAEEyB,GAAaC,EAAAA,EAAAA,eAAc,CAAEtG,MAAO,CAAEF,gBAAiBiF,KAGvDwB,GAAerL,EAAAA,EAAAA,SAAO,IAGrBsL,EAAkBC,IAAuB9H,EAAAA,EAAAA,UAASiH,IAGzDvK,EAAAA,EAAAA,YAAU,KACTwJ,EAAc,CAAEe,YAAaY,GAAmB,GAC9C,CAACA,IAGJ,MAAOE,EAAWC,IAAgBhI,EAAAA,EAAAA,UAAS,KAC3CtD,EAAAA,EAAAA,YAAU,KACS,WAAd6J,GAEkB0B,WACrB,IACC,MAAMC,QAAiBC,IAAS,CAAEC,KAAM,MAEvCJ,EADiB,SAAdzB,EACU2B,EAASG,KAETH,EAASI,YAExB,CAAE,MAAOC,GACRC,QAAQD,MAAM,uBAAwBA,EAAME,QAC7C,GAEDC,EAAe,GACb,CAACnC,IAGJ,MAAMoC,EAAaA,KAClB,IAAIC,EACJ,OAAQxK,GACP,IAAK,yBACJwK,EAAc,CACbC,UAAW,yBACXC,gBAAiB,UACjBC,gBAAiB,UACjBC,YAAa,MACbC,YAAa,QACbC,eAAgB,GAChBC,WAAY,GACZC,WAAY,EACZC,aAAc,GACdC,WAAY,GACZC,UAAU,GAEX,MACD,IAAK,oBACJX,EAAc,CACbC,UAAW,oBACXW,eAAgB,WAChBC,gBAAiB,OACjBC,sBAAuB,UACvBC,aAAc,SACdC,gBAAiB,CAChBvF,SAAU,OACVC,WAAY,oBACZC,WAAY,MACZC,UAAU,GAEXqF,YAAa,CACZxK,QAAS,OACTC,SAAU,OACVwK,YAAa,MACbvK,WAAY,MACZrC,MAAO,OAGR6M,aAAc,CACb3E,IAAK,OACLC,KAAM,OACNE,OAAQ,OACRD,MAAO,QAGR0E,QAAQ,EACRC,WAAY,CACX1M,UAAW,OACXC,SAAU,OACVC,UAAW,OACXC,WAAY,OACZC,WAAY,QAMhBmK,EAAoBc,GAEpBhB,EAAanL,QAAU2B,EAEvB8L,GAAqB,EAAM,EAGtBC,EAAeA,KAEpBC,IAAe,GAEflE,EAAc,CAAE9H,UAAWwJ,EAAanL,UAExCyN,GAAqB,EAAM,GAIrBG,EAAkBH,IAAwBlK,EAAAA,EAAAA,WAAS,IACnDsK,EAAaF,KAAkBpK,EAAAA,EAAAA,WAAS,IAG/CtD,EAAAA,EAAAA,YAAU,KACT,GAA4B,GAAxBkL,EAAanL,QAAkB,CAClC,GAAI6N,EAGH,YADAF,IAAe,GAGhB,QAA6BG,IAAzB3C,EAAanL,SAAkD,qBAAzBmL,EAAanL,QAEtD,YADAkM,IAIDuB,GAAqB,EACtB,MAECtC,EAAanL,QAAU2B,CACxB,GACE,CAACA,KAGJoM,EAAAA,EAAAA,GAAeC,EAAAA,EAAWxE,IAE1ByE,EAAAA,EAAAA,KAGA,MAAOC,GAAgBC,KAAqB5K,EAAAA,EAAAA,UAAUiH,QAA4CsD,IAA7BtD,EAAY0C,aAA8B1C,EAAY0C,aAAe,UAGpIkB,IAAwBC,EAAAA,EAAAA,YAAWC,GACjCA,EAAO,qBAAqBF,sBAAsB1E,GAAU,IACjE,CAACA,IAEE6E,IAAqBC,EAAAA,EAAAA,qBAC1B,CAAE7M,UAAY,kBAAgByM,GAAwB,UAAY,KAClE,CACCK,SAAU,CAAC,CAAC,oBAAqB,CAAC,IAClCC,cAAc,IA6BVC,GAAwB,WAAd7E,GArBf3J,EAAAA,EAAAA,eAACyO,EAAAA,SAAQ,CACRC,QAAShF,EACTlI,UAAU,iBACVd,SAAWiO,IACVrF,EAAc,CAAEG,eAAgBkF,GAAa,EAE9CrO,MAAOmJ,EACPmF,aAAaxO,EAAAA,EAAAA,IAAG,sBAAuB,6BAKxCyO,MAAM7O,cACL0J,EAAYoF,cACZ,CAAEtN,UAAW,kBACb2J,GAWF,SAAS4D,KACR,OACCP,EAEF,CAEA,OACCxO,EAAAA,EAAAA,eAAAgB,EAAAA,SAAA,MACChB,EAAAA,EAAAA,eAACyG,EAAAA,kBAAiB,CAACC,MAAM,aACxB1G,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,uBAAwB,4BAC5CJ,EAAAA,EAAAA,eAAA,OAAKwB,UAAU,qBACdxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACZxB,OAAOH,EAAAA,EAAAA,IAAG,aAAc,2BACxB4B,SAAU2H,EACV1H,QAAS,CACR,CAAE1B,OAAOH,EAAAA,EAAAA,IAAG,SAAU,2BAA4BE,MAAO,UACzD,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,aAAc,2BAA4BE,MAAO,QAC7D,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,gBAAiB,2BAA4BE,MAAO,UAEjEI,SAAWkG,GAAiB0C,EAAc,CAAEK,UAAW/C,IACvD1F,MAAMd,EAAAA,EAAAA,IAAG,iFAAkF,+BAI7FJ,EAAAA,EAAAA,eAAA,OAAKwB,UAAU,oBACdxB,EAAAA,EAAAA,eAAC+B,EAAAA,aAAY,CACZxB,OAAOH,EAAAA,EAAAA,IAAG,YAAa,2BACvB4B,SAAU4I,EACV3I,QAAS,CACR,CAAE1B,OAAOH,EAAAA,EAAAA,IAAG,OAAQ,2BAA4BE,MAAO,QACvD,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,aAAc,2BAA4BE,MAAO,SAC7D,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,eAAgB,2BAA4BE,MAAO,WAC/D,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,WAAY,2BAA4BE,MAAO,QAC3D,CAAEC,OAAOH,EAAAA,EAAAA,IAAG,WAAY,2BAA4BE,MAAO,YAE5DI,SAAWkG,GAAiB0C,EAAc,CAAEsB,SAAUhE,IACtD1F,MAAMd,EAAAA,EAAAA,IAAG,uDAAwD,8BAIrD,UAAbwK,IACA5K,EAAAA,EAAAA,eAACgP,EAAAA,GAAiB,CACjB3F,WAAYA,EACZC,cAAeA,EACf/I,OAAOH,EAAAA,EAAAA,IAAG,iCAAkC,6BAIhC,YAAbwK,IACA5K,EAAAA,EAAAA,eAACiP,EAAAA,GAAoB,CACpB5F,WAAYA,EACZC,cAAeA,EACf/I,OAAOH,EAAAA,EAAAA,IAAG,iCAAkC,6BAIhC,SAAbwK,IACA5K,EAAAA,EAAAA,eAACiB,EAAAA,YAAW,CACXV,OAAOH,EAAAA,EAAAA,IAAG,cAAe,2BACzBe,cAAc,MACdb,MAAOuK,EACPnK,SAAWW,IACViI,EAAc,CAAEuB,gBAAiBxJ,GAAW,OASjDrB,EAAAA,EAAAA,eAACyG,EAAAA,kBAAiB,CAACC,MAAM,WACxB1G,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,kBAAmB,2BAA4ByB,aAAa,EAAOL,UAAU,sBACjGxB,EAAAA,EAAAA,eAACkH,EAAAA,yCAA0B,CAC1BtF,OAAOxB,EAAAA,EAAAA,IAAG,2BAA4B,2BACtC+G,SAAU,CACT,CACCrE,WAAY0G,EACZjJ,OAAOH,EAAAA,EAAAA,IAAG,gCAAiC,2BAC3CgH,cAAgB/F,GAAaiI,EAAc,CAAEE,QAASnI,SAKzDrB,EAAAA,EAAAA,eAACsH,EAAAA,cAAa,CACb/G,OAAOH,EAAAA,EAAAA,IAAG,YAAa,2BACvBmH,QAASgD,EACT7J,SAAWwO,IACV5F,EAAc,CAAEiB,UAAW2E,GAAS,KAGtClP,EAAAA,EAAAA,eAACsH,EAAAA,cAAa,CACb/G,OAAOH,EAAAA,EAAAA,IAAG,mBAAoB,2BAC9BmH,QAASiD,EACT9J,SAAWwO,IACV5F,EAAc,CAAEkB,aAAc0E,GAAS,IAGxC1E,IACAxK,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,qBAAsB,2BAA4ByB,aAAa,EAAML,UAAU,sBACnGxB,EAAAA,EAAAA,eAACuB,EAAAA,SAAQ,CAACC,UAAU,iBACnBxB,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACXC,cAAc,IACdhB,SAAWW,IACV,MAAMC,EAAW,IAAKmJ,EAAgBzB,OAAQ3H,GAC9CiI,EAAc,CAAEmB,eAAgBnJ,GAAW,EAE5Cf,OAAOH,EAAAA,EAAAA,IAAG,SAAU,2BACpBE,MAAOmK,EAAezB,UAEvBhJ,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACXC,cAAc,IACdhB,SAAWW,IACV,MAAMC,EAAW,IAAKmJ,EAAgB1B,MAAO1H,GAC7CiI,EAAc,CAAEmB,eAAgBnJ,GAAW,EAE5Cf,OAAOH,EAAAA,EAAAA,IAAG,QAAS,2BACnBE,MAAOmK,EAAe1B,SAEvB/I,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACXC,cAAc,IACdhB,SAAWW,IACV,MAAMC,EAAW,IAAKmJ,EAAgBrI,SAAUf,GAChDiI,EAAc,CAAEmB,eAAgBnJ,GAAW,EAE5Cf,OAAOH,EAAAA,EAAAA,IAAG,WAAY,2BACtBE,MAAOmK,EAAerI,aAGxBpC,EAAAA,EAAAA,eAACkH,EAAAA,yCAA0B,CAC1BtF,OAAOxB,EAAAA,EAAAA,IAAG,2BAA4B,2BACtC+G,SAAU,CACT,CACCrE,WAAY4H,EACZyE,cAAexE,EACfpK,OAAOH,EAAAA,EAAAA,IAAG,0BAA2B,2BAErCgH,cAAgB/F,IACfiI,EAAc,CAAEoB,uBAAgCiD,IAAbtM,EAAyB,GAAKA,GAAW,EAE7E+N,iBAAmB/N,IAClBiI,EAAc,CAAEqB,qBAAsBtJ,GAAW,OAKrDrB,EAAAA,EAAAA,eAACsH,EAAAA,cAAa,CACb/G,OAAOH,EAAAA,EAAAA,IAAG,qBAAsB,2BAChCmH,QAASkD,EAAe4E,SACxB3O,SAAWwO,IACV,MAAM5N,EAAW,IAAKmJ,EAAgB4E,SAAUH,GAChD5F,EAAc,CAAEmB,eAAgBnJ,GAAW,OAMhDtB,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,mBAAoB,2BAA4ByB,aAAa,EAAOL,UAAU,sBAClGxB,EAAAA,EAAAA,eAACsP,EAAAA,EAAkB,CAClB1N,OAAOxB,EAAAA,EAAAA,IAAG,aAAc,2BACxBoH,UAAWoC,EACXlJ,SAAWY,IACVgI,EAAc,CAAEM,mBAAoBtI,GAAW,EAEhDO,aAAa,KAGd7B,EAAAA,EAAAA,eAACkH,EAAAA,yCAA0B,CAC1BtF,OAAOxB,EAAAA,EAAAA,IAAG,wBAAyB,2BACnC+G,SAAU,CAAC,CACVrE,WAAYoH,EACZ3J,OAAOH,EAAAA,EAAAA,IAAG,oBAAqB,2BAC/BgH,cAAgB/F,GAAaiI,EAAc,CAAEY,UAAW7I,KAEzD,CACCyB,WAAYkH,EACZmF,cAAelF,EAEf1J,OAAOH,EAAAA,EAAAA,IAAG,0BAA2B,2BACrCgH,cAAgB/F,GAAaiI,EAAc,CAAEU,WAAY3I,IACzD+N,iBAAmB/N,GAAaiI,EAAc,CAAEW,WAAY5I,SAI9DrB,EAAAA,EAAAA,eAACuP,EAAAA,yBAAU,CACVhP,OAAOH,EAAAA,EAAAA,IAAG,kBAAmB,2BAC7BoP,OAAQ3F,EACRnJ,SAAUJ,GAASgJ,EAAc,CAAEO,eAAgBvJ,IACnDD,MAAOA,EACPoP,YAAY,EACZC,YAAanH,KAIdvI,EAAAA,EAAAA,eAACuP,EAAAA,yBAAU,CACVhP,OAAOH,EAAAA,EAAAA,IAAG,mBAAoB,2BAC9BoP,OAAQ1F,EACRpJ,SAAUJ,GAASgJ,EAAc,CAAEQ,gBAAiBxJ,IACpDD,MAAOA,EACPoP,YAAY,EACZC,YAAanH,KAGdvI,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,kBAAmB,2BAA4ByB,aAAa,EAAOL,UAAU,uBACjGxB,EAAAA,EAAAA,eAAC2P,EAAAA,+BAAgB,CAChBC,OAAQ,CAAC,CAAEC,MAAO,WAAa,CAAEA,MAAO,QAAU,CAAEA,MAAO,SAC3DnP,SAAWW,GAAaiI,EAAc,CAAEc,eAAgB/I,IACxDf,MAAO8J,EACPqF,YAAY,EACZC,YAAa9G,KAEd5I,EAAAA,EAAAA,eAAC8P,EAAAA,kCAAmB,CACnBN,OAAQrF,EACRzJ,SAAWqP,GACVzG,EAAc,CAAEa,eAAoC,iBAAb4F,EAAwB,CAAE,MAASA,GAAaA,QAM5E,2BAAdvO,IACAxB,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,yBAA0B,2BAA4ByB,aAAa,EAAOL,UAAU,sBACxGxB,EAAAA,EAAAA,eAACkH,EAAAA,yCAA0B,CAC1BtF,OAAOxB,EAAAA,EAAAA,IAAG,uBAAwB,2BAClC+G,SAAU,CAAC,CACVrE,WAAauH,GAAeA,EAAY6B,gBAAmB7B,EAAY6B,gBAAkB,UACzFiD,cAAgB9E,GAAeA,EAAY2F,mBAAsB3F,EAAY2F,wBAAqBrC,EAElGpN,OAAOH,EAAAA,EAAAA,IAAG,2BAA4B,2BACtCgH,cAAgB/F,IACf6J,GAAoB+E,IAAQ,IAAMA,EAAM/D,gBAAiB7K,KAAY,EAEtE+N,iBAAmB/N,IAClB6J,GAAoB+E,IAAQ,IAAMA,EAAMD,mBAAoB3O,KAAY,OAM3ErB,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACXC,cAAc,IACdhB,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAM7D,YAAa/K,KAAY,EAElEd,OAAOH,EAAAA,EAAAA,IAAG,uBAAwB,2BAClCE,MAAQ+J,GAAeA,EAAY+B,YAAe/B,EAAY+B,YAAc,SAE7EpM,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,oBAAqB,2BAA4ByB,aAAa,EAAML,UAAU,sBAClGxB,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACZvG,MAAQ+J,GAAeA,EAAYmC,UAAanC,EAAYmC,UAAY,GACxEjM,OAAOH,EAAAA,EAAAA,IAAG,oBAAqB,2BAC/B0G,IAAK,GACLC,KAAM,GACNM,KAAM,EACN3G,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAMzD,UAAWnL,KAAY,EAEhE4F,gBAAgB,KAEjBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACZvG,MAAQ+J,GAAeA,EAAYkC,WAAclC,EAAYkC,WAAa,GAC1EhM,OAAOH,EAAAA,EAAAA,IAAG,yBAA0B,2BACpC0G,IAAK,GACLC,KAAM,GACNM,KAAM,EACN3G,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAM1D,WAAYlL,KAAY,EAEjE4F,gBAAgB,MAGlBjH,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,yBAA0B,2BAA4ByB,aAAa,IACvF7B,EAAAA,EAAAA,eAACsH,EAAAA,cAAa,CACb/G,OAAOH,EAAAA,EAAAA,IAAG,gBAAiB,2BAC3BmH,SAAU8C,IAAeA,EAAYsC,UAAYtC,EAAYsC,SAC7DjM,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAMtD,SAAUtL,KAAY,QAI9DgJ,IAAeA,EAAYsC,WAAYtC,EAAYsC,WACrD3M,EAAAA,EAAAA,eAAAgB,EAAAA,SAAA,MACChB,EAAAA,EAAAA,eAACkH,EAAAA,yCAA0B,CAC1BtF,OAAOxB,EAAAA,EAAAA,IAAG,uBAAwB,2BAClC+G,SAAU,CAAC,CACVrE,WAAauH,GAAeA,EAAY8B,gBAAmB9B,EAAY8B,gBAAkB,UACzFgD,cAAgB9E,GAAeA,EAAY6F,mBAAsB7F,EAAY6F,wBAAqBvC,EAElGpN,OAAOH,EAAAA,EAAAA,IAAG,2BAA4B,2BACtCgH,cAAgB/F,IACf6J,GAAoB+E,IAAQ,IAAMA,EAAM9D,gBAAiB9K,KAAY,EAEtE+N,iBAAmB/N,IAClB6J,GAAoB+E,IAAQ,IAAMA,EAAMC,mBAAoB7O,KAAY,OAK3ErB,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACZvG,MAAQ+J,GAAeA,EAAYiC,eAAkBjC,EAAYiC,eAAiB,GAClF/L,OAAOH,EAAAA,EAAAA,IAAG,UAAW,2BACrB0G,IAAK,EACLC,IAAK,GACLM,KAAM,GACN3G,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAM3D,eAAgBjL,KAAY,EAErE4F,gBAAgB,KAEjBjH,EAAAA,EAAAA,eAACyB,EAAAA,0BAAW,CACXC,cAAc,IACdhB,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAM5D,YAAahL,KAAY,EAElEd,OAAOH,EAAAA,EAAAA,IAAG,uBAAwB,2BAClCE,MAAQ+J,GAAeA,EAAYgC,YAAehC,EAAYgC,YAAc,WAE7ErM,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,oBAAqB,2BAA4ByB,aAAa,EAAML,UAAU,sBAClGxB,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACZvG,MAAQ+J,GAAeA,EAAYqC,WAAcrC,EAAYqC,WAAa,GAC1EnM,OAAOH,EAAAA,EAAAA,IAAG,oBAAqB,2BAC/B0G,IAAK,GACLC,KAAM,GACNM,KAAM,EACN3G,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAMvD,WAAYrL,KAAY,EAEjE4F,gBAAgB,KAEjBjH,EAAAA,EAAAA,eAAC6G,EAAAA,aAAY,CACZvG,MAAQ+J,GAAeA,EAAYoC,YAAepC,EAAYoC,aAAe,GAC7ElM,OAAOH,EAAAA,EAAAA,IAAG,yBAA0B,2BACpC0G,IAAK,GACLC,KAAM,GACNM,KAAM,EACN3G,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAMxD,YAAapL,KAAY,EAElE4F,gBAAgB,OAQP,sBAAdzF,IACAxB,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,oBAAqB,2BAA4ByB,aAAa,EAAOL,UAAU,sBACnGxB,EAAAA,EAAAA,eAACkH,EAAAA,yCAA0B,CAC1BtF,OAAOxB,EAAAA,EAAAA,IAAG,qBAAsB,2BAChC+G,SAAU,CAAC,CACVrE,WAAauH,GAAeA,EAAYwC,gBAAmBxC,EAAYwC,gBAAkB,OACzFtM,OAAOH,EAAAA,EAAAA,IAAG,oBAAqB,2BAC/BgH,cAAgB/F,IACf6J,GAAoB+E,IAAQ,IAAMA,EAAMpD,gBAAiBxL,KAAY,GAGvE,CACCyB,WAAauH,GAAeA,EAAYyC,sBAAyBzC,EAAYyC,sBAAwB,UACrGqC,cAAgB9E,GAAeA,EAAY8F,yBAA4B9F,EAAY8F,8BAA2BxC,EAE9GpN,OAAOH,EAAAA,EAAAA,IAAG,0BAA2B,2BACrCgH,cAAgB/F,IACf6J,GAAoB+E,IAAQ,IAAMA,EAAMnD,sBAAuBzL,KAAY,EAE5E+N,iBAAmB/N,IAElB6J,GAAoB+E,IAAQ,IAAMA,EAAME,yBAA0B9O,KAAY,OAMjFrB,EAAAA,EAAAA,eAACuB,EAAAA,SAAQ,CAACC,UAAU,iBACnBxB,EAAAA,EAAAA,eAACiB,EAAAA,YAAW,CACXV,OAAOH,EAAAA,EAAAA,IAAG,YAAa,2BACvBe,cAAc,MACdb,MAAOyN,GACPrN,SAAWW,IACV2M,GAAkB3M,GAClB6J,GAAoB+E,IAAQ,IAAMA,EAAMlD,aAAc1L,KAAY,MAIrErB,EAAAA,EAAAA,eAACuB,EAAAA,SAAQ,CAACC,UAAU,iBACnBxB,EAAAA,EAAAA,eAAA,cAAQI,EAAAA,EAAAA,IAAG,iBAAkB,6BAC7BJ,EAAAA,EAAAA,eAACoQ,EAAAA,qCAAsB,CAEtB9P,MAAQ+J,GAAeA,EAAYuC,eAAkBvC,EAAYuC,eAAiB,WAClFlM,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAMrD,eAAgBvL,KAAY,MAKvErB,EAAAA,EAAAA,eAACsP,EAAAA,EAAkB,CAClB1N,OAAOxB,EAAAA,EAAAA,IAAG,aAAc,2BACxBoH,UAAY6C,GAAeA,EAAY2C,gBAAmB3C,EAAY2C,gBAAkB,CACvFvF,SAAU,OACVC,WAAY,oBACZC,WAAY,MACZC,UAAU,GAEX/F,aAAa,EACbnB,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAMjD,gBAAiB3L,KAAY,KAIvErB,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,kBAAmB,2BAA4ByB,aAAa,IAChF7B,EAAAA,EAAAA,eAAC8P,EAAAA,kCAAmB,CACnBN,OAASnF,GAAeA,EAAY4C,YAAe5C,EAAY4C,YAAc,CAC5ExK,QAAS,OACTC,SAAU,OACVwK,YAAa,MACbvK,WAAY,MACZrC,MAAO,OAERI,SAAWqP,IACV7E,GAAoB+E,IAAQ,IAAMA,EAAMhD,YAAiC,iBAAb8C,EAAwB,CAAE,MAASA,GAAaA,KAAY,KAI1H/P,EAAAA,EAAAA,eAACuP,EAAAA,yBAAU,CACVhP,OAAOH,EAAAA,EAAAA,IAAG,mBAAoB,2BAC9BoP,OAASnF,GAAeA,EAAY8C,aAAgB9C,EAAY8C,aAAe,CAC9E3E,IAAK,OACLC,KAAM,OACNE,OAAQ,OACRD,MAAO,QAERhI,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAM9C,aAAc9L,KAAY,EAEnEhB,MAAOA,EACPoP,YAAY,EACZC,YAAanH,MAIfvI,EAAAA,EAAAA,eAAC2G,EAAAA,UAAS,CAAC/E,OAAOxB,EAAAA,EAAAA,IAAG,gBAAiB,2BAA4ByB,aAAa,IAC9E7B,EAAAA,EAAAA,eAACsH,EAAAA,cAAa,CACb/G,OAAOH,EAAAA,EAAAA,IAAG,cAAe,2BACzBmH,WAAU8C,IAAeA,EAAY+C,SAAU/C,EAAY+C,OAC3D1M,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAM7C,OAAQ/L,KAAY,OAG3DgJ,IAAeA,EAAY+C,SAAU/C,EAAY+C,SACnDpN,EAAAA,EAAAA,eAACqQ,EAAAA,EAAiB,CACjB5P,UAAY4J,GAAeA,EAAYgD,WAAchD,EAAYgD,WAAa,CAC7E1M,UAAW,OACXC,SAAU,OACVC,UAAW,OACXC,WAAY,OACZC,WAAY,OAEbL,SAAWW,IACV6J,GAAoB+E,IAAQ,IAAMA,EAAM5C,WAAYhM,KAAY,QASvErB,EAAAA,EAAAA,eAACsQ,EAAAA,cAAa,MACbtQ,EAAAA,EAAAA,eAACuQ,EAAAA,iBAAgB,CAChBjQ,MAAOyJ,EACPrJ,SAAW8P,IACVlH,EAAc,CAAES,MAAOyG,GAAY,KAGrCxQ,EAAAA,EAAAA,eAACyQ,EAAAA,oBAAmB,CACnBlQ,OAAOH,EAAAA,EAAAA,IAAG,wBACVsQ,KAAM7H,EAAgB8H,SAASjH,EAAYkH,MAAM,GAAI,KACrDC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,KAAIhI,IAAS,CACzC4H,KAAM7H,EAAgBC,GACtBlH,MAAQ,WAAUkH,IAClBiI,SAAUrH,IAAiB,IAAGZ,IAC9BkI,QAASA,IAAM1H,EAAc,CAAEI,YAAc,IAAGZ,aAKlD2E,IACAzN,EAAAA,EAAAA,eAACiR,EAAAA,MAAK,CACLrP,OAAOxB,EAAAA,EAAAA,IAAG,mBAAoB,2BAC9B8Q,eAAgB3D,IAEhBvN,EAAAA,EAAAA,eAAA,UAAII,EAAAA,EAAAA,IAAG,qEAAsE,6BAC7EJ,EAAAA,EAAAA,eAACmR,EAAAA,OAAM,CAACC,QAAQ,UAAUJ,QAASjF,IAAa3L,EAAAA,EAAAA,IAAG,cAAe,6BAClEJ,EAAAA,EAAAA,eAACmR,EAAAA,OAAM,CAACC,QAAQ,YAAYJ,QAASzD,IAAenN,EAAAA,EAAAA,IAAG,SAAU,8BAKnEJ,EAAAA,EAAAA,eAAA,MAAS8K,GACR9K,EAAAA,EAAAA,eAAC6N,EAAAA,EAAS,CAACxE,WAAYA,GACrBkB,GACAvK,EAAAA,EAAAA,eAACqR,EAAAA,EAAW,CACXrO,YAAa,IAAKsH,EAAgB/F,gBAAiBiF,GACnD9I,SAAUA,CAACY,EAAUgQ,KACpBhI,EAAc,CAAEiI,cAAejQ,EAASmD,QACxC6E,EAAc,CAAEgB,eAAgBgH,GAAW,GAG3CvC,MAGFA,MAKY,YAAbnE,IACA5K,EAAAA,EAAAA,eAAA,MAASoO,KAMd,C,uBCnyBO,SAAS9I,EAAWC,EAAKC,EAAYL,GAC3C,IAAIqM,GAAS,EAEb,IAAMjM,GAAe,IAARA,IAAcA,GAAO,MAAUC,GAA6B,IAAfA,IAAqBA,GAAc,MAAUL,GAA2B,IAAdA,IAAoBA,GAAa,IAAM,CAC1J,IAKIsM,EALAtL,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EACRqL,EAAQ,EACRC,EAAQ,EAGZpM,EAAaqM,OAAOrM,GAAc,IAClCC,EAAaoM,OAAOpM,GAAc,IAClCL,EAAayM,OAAOzM,GAAc,IAEf,IAAfK,GACHW,EAAQhB,EACRiB,EAAQjB,EACRkB,EAAQlB,IAERsM,EAAW,SAASE,EAAGD,EAAGG,GAYzB,OAXIA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GAEZA,EAAI,EAAI,EACXF,GAAe,GAATD,EAAIC,GAASE,EACTA,EAAI,GACdF,EAAID,EACMG,EAAI,EAAI,IAClBF,IAAMD,EAAIC,IAAM,EAAI,EAAIE,GAAK,GAGvBF,CACR,EASAxL,EAAQsL,EAFRE,EAAI,EAAIxM,GAJPuM,EADGvM,EAAY,GACXA,GAAa,EAAIK,GAEjBL,EAAYK,EAAaL,EAAYK,GAItBkM,EAAGnM,EAAM,EAAI,GACjCa,EAAQqL,EAASE,EAAGD,EAAGnM,GACvBc,EAAQoL,EAASE,EAAGD,EAAGnM,EAAM,EAAI,IAGhCiM,EAAU,IAAGM,KAAKC,MAAY,IAAN5L,GAAW6L,SAAS,IAAIC,SAAU,EAAG,OAAOH,KAAKC,MAAc,IAAR3L,GAAa4L,SAAS,IAAIC,SAAU,EAAG,OAAOH,KAAKC,MAAa,IAAP1L,GAAY2L,SAAS,IAAIC,SAAU,EAAG,MAEjL,CAEA,OAAOT,CACR,CAIO,SAASvM,EAAWiN,GACzB,IAAIC,EAAMD,EAASE,MAAM,sDACrBjM,EAAMgM,EAAI,GACV/L,EAAQ+L,EAAI,GACZ9L,EAAO8L,EAAI,GACZX,GAAS,EAEb,IAAMrL,GAAe,IAARA,IAAckM,OAAOlM,GAAKiM,MAAM,oBAAwBhM,GAAmB,IAAVA,IAAgBiM,OAAOjM,GAAOgM,MAAM,oBAAwB/L,GAAiB,IAATA,IAAegM,OAAOhM,GAAM+L,MAAM,kBAAoB,CACvM,IAAI7M,EAAa,EACbC,EAAa,EACbL,EAAa,EACb2B,EAAa,EACbC,EAAa,EACbuL,EAAa,EAEjBnM,EAAYwK,SAASxK,EAAO,IAAM,IAClCC,EAAYuK,SAASvK,EAAO,IAAM,IAClCC,EAAYsK,SAAStK,EAAO,IAAM,IAClCS,EAAYgL,KAAKhL,IAAIX,EAAKC,EAAOC,GACjCU,EAAY+K,KAAK/K,IAAIZ,EAAKC,EAAOC,GACjClB,GAAa2B,EAAMC,GAAO,EAEtBD,IAAQC,IACXuL,EAAOxL,EAAMC,EAGZvB,EADGL,EAAY,GACFmN,GAAQ,EAAIxL,EAAMC,GAElBuL,GAAQxL,EAAMC,GAI3BxB,EADGuB,IAAQX,GACJC,EAAQC,GAAQiM,EACbxL,IAAQV,EACZ,GAAKC,EAAOF,GAAOmM,EAEnB,GAAKnM,EAAMC,GAASkM,EAG3B/M,GAAO,GAGRiM,EAAS,CACRjM,IAAauM,KAAKC,MAAmB,IAAbxM,GACxBC,WAAasM,KAAKC,MAAmB,IAAbvM,GACxBL,UAAa2M,KAAKC,MAAmB,IAAb5M,GAE1B,CAEA,OAAOqM,CACR,CAEO,SAASzL,EAASmM,GACvB,IAAIC,EAAMD,EAASE,MAAM,sDACrBjM,EAAMgM,EAAI,GACV/L,EAAQ+L,EAAI,GACZ9L,EAAO8L,EAAI,GACZX,GAAS,EAiBb,OAfMrL,GAAe,IAARA,IAAckM,OAAOlM,GAAKiM,MAAM,oBAAwBhM,GAAmB,IAAVA,IAAgBiM,OAAOjM,GAAOgM,MAAM,oBAAwB/L,GAAiB,IAATA,IAAegM,OAAOhM,GAAM+L,MAAM,oBAGnLjM,EAAYwK,SAASxK,EAAO,IAC5BC,EAAYuK,SAASvK,EAAO,IAC5BC,EAAYsK,SAAStK,EAAO,IAG5BmL,EAAS,CACRrL,IAAQ2L,KAAKC,MAAM5L,GACnBC,MAAQ0L,KAAKC,MAAM3L,GACnBC,KAAQyL,KAAKC,MAAM1L,KAIdmL,CACR,C,yMC7HO,SAAS5D,EAAeC,EAAWxE,IAExC9J,EAAAA,EAAAA,KAAqB,KACnB,MAAMgT,EAAiBC,SAASC,kBAAkB,iBAAiB,GAEnE,GAAIF,EAAgB,CAClB,MAAMG,EAAiBH,EAAeI,iBAAmBJ,EAAeK,cAAcJ,SAChFK,EAAQ,IAAIC,EAAAA,IAClBC,EAAAA,EAAAA,IAAeF,EAAMG,eAAchT,EAAAA,EAAAA,eAAC6N,EAAS,CAACxE,WAAYA,MAC1D,MACM4J,EADYJ,EAAMK,eACOC,QAAQ,0BAA2B,IAE5DC,EAAiBV,EAAe1S,cAAc,SAMpD,OALAoT,EAAeC,UAAYJ,EAG3BP,EAAeY,KAAKC,YAAYH,GAEzB,KACLV,EAAeY,KAAKE,YAAYJ,EAAe,CAEnD,IACC,CAAC/J,GACN,CAEO,SAASyE,KAEdhO,EAAAA,EAAAA,YAAU,KACR,MAAMyS,EAAiBC,SAASC,kBAAkB,iBAAiB,GAEnE,GAAIF,EAAgB,CAClB,MAAMG,EAAiBH,EAAeI,iBAAmBJ,EAAeK,cAAcJ,SAChFiB,EAAgBf,EAAe1S,cAAc,UAOnD,OANAyT,EAAcC,aAAa,MAAO,6CAClCD,EAAcC,aAAa,cAAe,aAE1ChB,EAAeiB,KAAKJ,YAAYE,GAGzB,KACLf,EAAeiB,MAAMH,YAAYC,EAAc,CAEnD,IACC,GACL,C,qIC7CA,MAAMG,EAAgBpT,IAAwD,IAAvD,cAAE8I,EAAa,WAAED,EAAU,MAAE9I,EAAK,aAAEsT,GAAcrT,EACvE,MAAM,eAAEsT,GAAmBzK,GACpBpH,EAAS8R,IAAc3Q,EAAAA,EAAAA,UAAS,IAuBvC,OArBAtD,EAAAA,EAAAA,YAAU,KACUuL,WAChB,IACE,MAAM2I,QAAuBH,IAC7BE,EAAWC,EACb,CAAE,MAAOrI,GACPC,QAAQD,MAAM,uBAAwBA,EAAME,QAC9C,GAGFoI,EAAW,GACV,CAACJ,KAWF7T,EAAAA,EAAAA,eAACkU,EAAAA,gBAAe,CACd3T,MAAOA,EACP0B,QAASA,EACT3B,MAAOwT,EACPpT,SAbkByT,IACpB,MAAMC,EAAenS,EAAQoG,MAAKgM,GAAQA,EAAK/T,QAAU6T,IACzD7K,EAAc,CACZwK,eAAgBK,EAChBtJ,gBAAiBuJ,EAAeA,EAAaE,KAAO,KACpD,GASA,EAIOC,EAAoBlJ,UAC/B,MAAMmJ,QAAcjJ,IAAS,CAAEC,KAAM,iBAIrC,OAHIgJ,IAAUA,EAAMC,MAAKJ,IAAqB,IAAbA,EAAKK,MACpCF,EAAMG,QAAQ,CAAED,IAAK,EAAG9S,MAAO,CAAEgT,SAAU,OAASN,KAAM,MAErDE,EAAQA,EAAM1D,KAAIuD,IAAQ,CAC/B/T,MAAO+T,EAAKK,GACZnU,MAAO8T,EAAKzS,MAAMgT,SAClBN,KAAMD,EAAKC,SACP,EAAE,EAGGO,EAAsBxJ,UACjC,MAAMC,QAAiBC,IAAS,CAAEC,KAAM,iBACxC,IAAIsJ,EAAY,EAChB,OAAOC,OAAOC,KAAK1J,GAAU2J,QAAO,CAACC,EAAKC,KACxC,MAAMC,EAAW9J,EAAS6J,GAM1B,OAL6B,IAAzBC,EAASC,YACXH,EAAII,KAAK,CAAEhV,MAAOwU,IAAaR,KAAO,IAAGc,EAASG,OAAQhV,MAAO6U,EAAS3J,OACjC,iBAAzB2J,EAASC,aACzBH,EAAII,KAAK,CAAEhV,MAAOwU,IAAaR,KAAO,IAAGc,EAASC,cAAe9U,MAAO6U,EAAS3J,OAE5EyJ,CAAG,GACT,GAAG,EAGKlG,EAAqBwG,IAChCxV,EAAAA,EAAAA,eAAC4T,GAAa6B,EAAAA,EAAAA,GAAA,GAAKD,EAAK,CAAE3B,aAAcU,KAG7BtF,EAAwBuG,IACnCxV,EAAAA,EAAAA,eAAC4T,GAAa6B,EAAAA,EAAAA,GAAA,GAAKD,EAAK,CAAE3B,aAAcgB,I","sources":["webpack://block-collections/./src/blocks/CustomFooks.js","webpack://block-collections/./src/blocks/IconSelectControl.js","webpack://block-collections/./src/blocks/ShadowStyle.js","webpack://block-collections/./src/blocks/TypographyControls.js","webpack://block-collections/./src/blocks/design-title/edit.js","webpack://block-collections/./src/blocks/hslToRgb.js","webpack://block-collections/./src/blocks/iframeFooks.js","webpack://block-collections/./src/blocks/wordpressApi.js"],"sourcesContent":["import { useRef, useEffect, useState } from '@wordpress/element';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n//useRefで参照したDOM要素の大きさを取得するカスタムフック\r\nexport function useElementWidth() {\r\n  const ref = useRef(null);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const resizeObserver = new ResizeObserver(entries => {\r\n      for (let entry of entries) {\r\n        setWidth(entry.contentRect.width);\r\n      }\r\n    });\r\n\r\n    if (ref.current) {\r\n      resizeObserver.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return [ref, width];\r\n}\r\n\r\n//ViewPortの大きさでモバイルを判断(767px以下がモバイル)するカスタムフック\r\nexport function useIsMobile() {\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 767);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return isMobile;\r\n};\r\n\r\n//たくさんの要素をもつオブジェクトや配列の内容の変化で発火するuseEffect\r\nexport function useDeepCompareEffect(callback, dependencies) {\r\n  const dependenciesRef = useRef(dependencies);\r\n\r\n  if (!isEqual(dependencies, dependenciesRef.current)) {\r\n    dependenciesRef.current = dependencies;\r\n  }\r\n\r\n  useEffect(() => {\r\n    return callback();\r\n  }, [dependenciesRef.current]);\r\n}\r\n","\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport {\r\n  TextControl,\r\n  PanelRow,\r\n  RadioControl,\r\n  __experimentalUnitControl as UnitControl,\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n  PanelColorSettings\r\n} from '@wordpress/block-editor';\r\n\r\n\r\nconst helpLink = createElement(\r\n  'a',\r\n  { href: 'https://fontawesome.com/search', target: '_blank' },\r\n  'FontAwesome'\r\n);\r\n\r\nconst helpText = createElement(\r\n  'span',\r\n  {},\r\n  helpLink,\r\n  __('Select the icon from and enter Unicode (the upper right four digits of the selection dialog). ', 'itmar_block_collections')\r\n);\r\n\r\nconst units = [\r\n  { value: 'px', label: 'px' },\r\n  { value: 'em', label: 'em' },\r\n  { value: 'rem', label: 'rem' },\r\n];\r\n\r\nexport default ({ iconStyle, onChange }) => {\r\n  const {\r\n    icon_name,\r\n    icon_pos,\r\n    icon_size,\r\n    icon_color,\r\n    icon_space\r\n  } = iconStyle;\r\n\r\n  return (\r\n    <>\r\n      <TextControl\r\n        label={__(\"icon name\", 'itmar_block_collections')}\r\n        help={helpText}\r\n        labelPosition=\"top\"\r\n        value={icon_name}\r\n        isPressEnterToChange\r\n        onChange={(newValue) => {\r\n          const newStyle = { ...iconStyle, icon_name: newValue };\r\n          onChange(newStyle);\r\n        }}\r\n      />\r\n\r\n      <PanelRow className='sizing_row'>\r\n        <UnitControl\r\n          dragDirection=\"e\"\r\n          onChange={(newValue) => {\r\n            const newStyle = { ...iconStyle, icon_size: newValue };\r\n            onChange(newStyle);\r\n          }}\r\n          label={__(\"Size\", 'itmar_block_collections')}\r\n          value={icon_size}\r\n          units={units}\r\n        />\r\n        <UnitControl\r\n          dragDirection=\"e\"\r\n          onChange={(newValue) => {\r\n            const newStyle = { ...iconStyle, icon_space: newValue };\r\n            onChange(newStyle);\r\n          }}\r\n          label={__('spacing to end', 'itmar_block_collections')}\r\n          value={icon_space}\r\n          units={units}\r\n        />\r\n      </PanelRow>\r\n\r\n      <PanelColorSettings\r\n        title={__('Color settings', 'itmar_location')}\r\n        initialOpen={false}\r\n        colorSettings={[\r\n          {\r\n            value: icon_color,\r\n            onChange: (newValue) => {\r\n              const newStyle = { ...iconStyle, icon_color: newValue };\r\n              onChange(newStyle);\r\n            },\r\n            label: __('Icon color', 'itmar_location')\r\n          },\r\n\r\n        ]}\r\n      />\r\n      <label className=\"components-base-control__label\">{__(\"Arrangement\", 'itmar_block_collections')}</label>\r\n      <PanelRow className='itmar_position_row'>\r\n        <RadioControl\r\n          selected={icon_pos}\r\n          options={[\r\n            { label: __(\"left\", 'itmar_block_collections'), value: \"left\" },\r\n            { label: __(\"right\", 'itmar_block_collections'), value: \"right\" },\r\n          ]}\r\n          onChange={(newValue) => {\r\n            const newStyle = { ...iconStyle, icon_pos: newValue };\r\n            onChange(newStyle);\r\n          }}\r\n        />\r\n      </PanelRow>\r\n    </>\r\n\r\n  );\r\n}\r\n","\r\nimport { __ } from '@wordpress/i18n';\r\nimport {\r\n  InspectorControls,\r\n  __experimentalPanelColorGradientSettings as PanelColorGradientSettings,\r\n} from '@wordpress/block-editor';\r\nimport {\r\n  PanelBody,\r\n  PanelRow,\r\n  ToggleControl,\r\n  RangeControl,\r\n  RadioControl\r\n} from '@wordpress/components';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport { dispatch } from '@wordpress/data';\r\nimport { hslToRgb16, HexToRGB, rgb16ToHsl } from './hslToRgb';\r\n\r\n//方向と距離\r\nconst dirctionDigit = (direction, distance) => {\r\n  let destTopLeft, destTopRight, destBottomLeft, destBottomRight;\r\n  switch (direction) {\r\n    case \"top_left\":\r\n      destTopLeft = distance;\r\n      destTopRight = distance;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance * -1;\r\n      break;\r\n    case \"top_right\":\r\n      destTopLeft = distance * -1;\r\n      destTopRight = distance;\r\n      destBottomLeft = distance;\r\n      destBottomRight = distance * -1;\r\n      break;\r\n    case \"bottom_left\":\r\n      destTopLeft = distance;\r\n      destTopRight = distance * -1;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance;\r\n      break;\r\n    case \"bottom_right\":\r\n      destTopLeft = distance * -1;\r\n      destTopRight = distance * -1;\r\n      destBottomLeft = distance;\r\n      destBottomRight = distance;\r\n      break;\r\n    case \"right_bottom\":\r\n      destTopLeft = distance;\r\n      destTopRight = distance * -1;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance;\r\n      break;\r\n    case \"top\":\r\n      destTopLeft = 0;\r\n      destTopRight = 0;\r\n      destBottomLeft = distance * -1;\r\n      destBottomRight = distance;\r\n      break;\r\n  }\r\n  return (\r\n    {\r\n      topLeft: destTopLeft,\r\n      topRight: destTopRight,\r\n      bottomLeft: destBottomLeft,\r\n      bottmRight: destBottomRight\r\n    }\r\n  )\r\n}\r\n\r\nfunction isGradient(colorValue) {\r\n  // グラデーションの色値は通常'linear-gradient'または'radial-gradient'で始まるので、\r\n  // これらのキーワードを探すことでグラデーションかどうかを判断します。\r\n  return colorValue.includes('linear-gradient') || colorValue.includes('radial-gradient');\r\n}\r\n\r\n\r\nexport const ShadowElm = (shadowState) => {\r\n  const {\r\n    shadowType,\r\n    spread,\r\n    lateral,\r\n    longitude,\r\n    nomalBlur,\r\n    shadowColor,\r\n    blur,\r\n    intensity,\r\n    distance,\r\n    newDirection,\r\n    clayDirection,\r\n    embos,\r\n    opacity,\r\n    depth,\r\n    bdBlur,\r\n    expand,\r\n    glassblur,\r\n    glassopa,\r\n    hasOutline,\r\n    backgroundColor\r\n  } = shadowState;\r\n  //ノーマル\r\n  if (shadowType === 'nomal') {\r\n    //boxshadowの生成\r\n    const ShadowStyle = embos === 'dent' ? {\r\n      style: {\r\n        boxShadow: `${lateral}px ${longitude}px ${nomalBlur}px ${spread}px transparent, inset ${lateral}px ${longitude}px ${nomalBlur}px ${spread}px ${shadowColor}`\r\n      }\r\n    } : {\r\n      style: {\r\n        boxShadow: `${lateral}px ${longitude}px ${nomalBlur}px ${spread}px ${shadowColor}, inset ${lateral}px ${longitude}px ${nomalBlur}px ${spread}px transparent`\r\n      }\r\n    }\r\n    //Shadowのスタイルを返す\r\n    return ShadowStyle;\r\n  }\r\n  //ニューモフィズム\r\n  else if (shadowType === 'newmor') {\r\n    const baseColor = backgroundColor || \"#ffffff\";\r\n    //背景がグラデーションのときはセットしない\r\n    if (isGradient(baseColor)) {\r\n      dispatch('core/notices').createNotice(\r\n        'error',\r\n        __('Neumorphism cannot be set when the background color is a gradient. ', 'itmar_guest_contact_block'),\r\n        { type: 'snackbar', isDismissible: true, }\r\n      );\r\n      return null;\r\n    }\r\n    //ボタン背景色のHSL値\r\n    const hslValue = rgb16ToHsl(baseColor);\r\n    //影の明るさを変更\r\n    const lightVal = (hslValue.lightness + intensity) < 100 ? hslValue.lightness + intensity : 100;\r\n    const darkVal = (hslValue.lightness - intensity) > 0 ? hslValue.lightness - intensity : 0;\r\n    const lightValue = hslToRgb16(hslValue.hue, hslValue.saturation, lightVal);\r\n    const darkValue = hslToRgb16(hslValue.hue, hslValue.saturation, darkVal);\r\n    //boxshadowの生成\r\n    //立体の方向\r\n    const dircObj = dirctionDigit(newDirection, distance);\r\n\r\n    const baseStyle = {\r\n      style: {\r\n        border: 'none',\r\n        background: baseColor\r\n      }\r\n    }\r\n\r\n    const newmorStyle = embos === 'swell' ? {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px ${darkValue}, ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px ${lightValue}, inset ${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px transparent, inset ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px transparent`\r\n      }\r\n    } : {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px transparent, ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px transparent, inset ${dircObj.topLeft}px ${dircObj.topRight}px ${blur}px ${darkValue}, inset ${dircObj.bottomLeft}px ${dircObj.bottmRight}px ${blur}px ${lightValue}`\r\n      }\r\n    }\r\n\r\n    //Shadowのスタイルを返す\r\n    return newmorStyle;\r\n  }\r\n\r\n  //クレイモーフィズム\r\n  else if (shadowType === 'claymor') {\r\n    const baseColor = backgroundColor || \"#C0C0C0\";\r\n    //背景がグラデーションのときはセットしない\r\n    if (isGradient(baseColor)) {\r\n      dispatch('core/notices').createNotice(\r\n        'error',\r\n        __('claymorphism cannot be set when the background color is a gradient. ', 'itmar_guest_contact_block'),\r\n        { type: 'snackbar', isDismissible: true, }\r\n      );\r\n      return null;\r\n    }\r\n    const rgbValue = HexToRGB(baseColor)\r\n    const outsetObj = dirctionDigit(clayDirection, expand)\r\n    const insetObj = dirctionDigit(clayDirection, depth)\r\n    const baseStyle = {\r\n      style: {\r\n        background: `rgba(255, 255, 255, ${opacity})`,\r\n        backdropFilter: `blur(${bdBlur}px)`,\r\n        border: 'none',\r\n      }\r\n    }\r\n    const claymorStyle = embos === 'swell' ? {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `${outsetObj.topLeft}px ${outsetObj.bottmRight}px ${expand * 2}px 0px rgba(${rgbValue.red}, ${rgbValue.green}, ${rgbValue.blue}, 0.5), inset ${insetObj.topRight}px ${insetObj.bottomLeft}px 16px 0px rgba(${rgbValue.red}, ${rgbValue.green}, ${rgbValue.blue}, 0.6), inset 0px 11px 28px 0px rgb(255, 255, 255)`,\r\n\r\n\r\n      }\r\n    } : {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `${outsetObj.topLeft}px ${outsetObj.bottmRight}px ${expand * 2}px 0px rgba(${rgbValue.red}, ${rgbValue.green}, ${rgbValue.blue}, 0.5), inset ${insetObj.topRight}px ${insetObj.bottomLeft}px 16px 0px rgba(${rgbValue.red}, ${rgbValue.green}, ${rgbValue.blue}, 0.6), 0px 11px 28px 0px rgb(255, 255, 255)`,\r\n\r\n      }\r\n    }\r\n    //attributesに保存\r\n    return claymorStyle;\r\n  }\r\n\r\n  //グラスモーフィズム\r\n  else if (shadowType === 'glassmor') {\r\n    //const baseColor = backgroundColor || \"#C0C0C0\";\r\n    //const rgbValue = HexToRGB(baseColor)\r\n    const baseStyle = {\r\n      style: {\r\n        backgroundColor: `rgba(255, 255, 255, ${glassopa})`,\r\n        border: `1px solid rgba(255, 255, 255, 0.4)`,\r\n        borderRightColor: `rgba(255, 255, 255, 0.2)`,\r\n        borderBottomColor: `rgba(255, 255, 255, 0.2)`,\r\n        backdropFilter: `blur( ${glassblur}px )`\r\n      }\r\n    }\r\n    const glassmorStyle = embos === 'swell' ? {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `0 8px 12px 0 rgba( 31, 38, 135, 0.37 ), inset 0 8px 12px 0 transparent`\r\n      }\r\n    } : {\r\n      ...baseStyle,\r\n      style: {\r\n        ...baseStyle.style,\r\n        boxShadow: `0 8px 12px 0 transparent, inset 0 8px 12px 0 rgba( 31, 38, 135, 0.37 )`\r\n\r\n      }\r\n    }\r\n\r\n    //attributesに保存\r\n    return glassmorStyle;\r\n  }\r\n}\r\n\r\nconst ShadowStyle = ({ shadowStyle, onChange, children }) => {\r\n  const [shadowState, setShadowState] = useState(shadowStyle);\r\n  const {\r\n    shadowType,\r\n    spread,\r\n    lateral,\r\n    longitude,\r\n    nomalBlur,\r\n    shadowColor,\r\n    blur,\r\n    intensity,\r\n    distance,\r\n    newDirection,\r\n    clayDirection,\r\n    embos,\r\n    opacity,\r\n    depth,\r\n    bdBlur,\r\n    expand,\r\n    glassblur,\r\n    glassopa,\r\n    hasOutline,\r\n    backgroundColor\r\n  } = shadowState;\r\n\r\n\r\n  // shadowStyle backgroundColor の変更を検知する\r\n  useEffect(() => {\r\n    if (shadowStyle.backgroundColor !== backgroundColor) {\r\n      setShadowState(shadowStyle);\r\n    }\r\n  }, [shadowStyle]);\r\n\r\n\r\n  //シャドーのスタイル変更に伴う親コンポーネントの変更\r\n  useEffect(() => {\r\n    const shadowElm = ShadowElm(shadowState);\r\n    if (shadowElm) onChange(shadowElm, shadowState)\r\n  }, [shadowState]);\r\n\r\n  return (\r\n    <>\r\n      <InspectorControls group='styles'>\r\n        <PanelBody title={__(\"Shadow Type\", 'itmar_block_collections')} initialOpen={true}>\r\n          <div className=\"itmar_shadow_type\">\r\n            <RadioControl\r\n              selected={shadowType}\r\n              options={[\r\n                { label: __(\"Nomal\", 'itmar_block_collections'), value: 'nomal' },\r\n                { label: __(\"Neumorphism\", 'itmar_block_collections'), value: 'newmor' },\r\n                { label: __(\"Claymorphism\", 'itmar_block_collections'), value: 'claymor' },\r\n                { label: __(\"Grassmophism\", 'itmar_block_collections'), value: 'glassmor' },\r\n              ]}\r\n              onChange={(changeOption) => setShadowState({ ...shadowState, shadowType: changeOption })}\r\n            />\r\n          </div>\r\n        </PanelBody>\r\n\r\n        {shadowType === 'nomal' &&\r\n          <PanelBody title={__(\"Nomal settings\", 'itmar_block_collections')} initialOpen={false}>\r\n            <RangeControl\r\n              value={spread}\r\n              label={__(\"Spread\", 'itmar_block_collections')}\r\n              max={50}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, spread: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={lateral}\r\n              label={__(\"Lateral direction\", 'itmar_block_collections')}\r\n              max={50}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, lateral: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={longitude}\r\n              label={__(\"Longitudinal direction\", 'itmar_block_collections')}\r\n              max={50}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, longitude: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={nomalBlur}\r\n              label={__(\"Blur\", 'itmar_block_collections')}\r\n              max={20}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, nomalBlur: val })}\r\n              withInputField={false}\r\n            />\r\n            <PanelColorGradientSettings\r\n              title={__(\"Shadow Color Setting\", 'itmar_block_collections')}\r\n              settings={[\r\n                {\r\n                  colorValue: shadowColor,\r\n                  label: __(\"Choose Shadow color\", 'itmar_block_collections'),\r\n                  onColorChange: (newValue) => setShadowState({ ...shadowState, shadowColor: newValue }),\r\n                },\r\n              ]}\r\n            />\r\n\r\n          </PanelBody>\r\n        }\r\n\r\n        {shadowType === 'newmor' &&\r\n          <PanelBody title={__(\"Neumorphism settings\", 'itmar_block_collections')} initialOpen={false}>\r\n            <RangeControl\r\n              value={distance}\r\n              label={__(\"Distance\", 'itmar_block_collections')}\r\n              max={50}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, distance: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={intensity}\r\n              label={__(\"Intensity\", 'itmar_block_collections')}\r\n              max={100}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, intensity: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={blur}\r\n              label={__(\"Blur\", 'itmar_block_collections')}\r\n              max={20}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, blur: val })}\r\n              withInputField={false}\r\n            />\r\n            <PanelRow>\r\n              <div className=\"light_direction\">\r\n                <RadioControl\r\n                  selected={newDirection}\r\n                  options={[\r\n                    { value: 'top_left' },\r\n                    { value: 'top_right' },\r\n                    { value: 'bottom_left' },\r\n                    { value: 'bottom_right' },\r\n                  ]}\r\n                  onChange={(changeOption) => setShadowState({ ...shadowState, newDirection: changeOption })}\r\n                />\r\n              </div>\r\n              <div className=\"embos\">\r\n                <RadioControl\r\n                  selected={embos}\r\n                  options={[\r\n                    { value: 'swell' },\r\n                    { value: 'dent' },\r\n\r\n                  ]}\r\n                  onChange={(changeOption) => setShadowState({ ...shadowState, embos: changeOption })}\r\n                />\r\n              </div>\r\n\r\n            </PanelRow>\r\n\r\n          </PanelBody>\r\n\r\n        }\r\n        {shadowType === 'claymor' &&\r\n\r\n          <PanelBody title={__(\"Claymorphism settings\", 'itmar_block_collections')} initialOpen={false}>\r\n            <RangeControl\r\n              value={opacity}\r\n              label={__(\"Opacity\", 'itmar_block_collections')}\r\n              max={1}\r\n              min={0}\r\n              step={.1}\r\n              onChange={(val) => setShadowState({ ...shadowState, opacity: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={depth}\r\n              label=\"Depth\"\r\n              max={20}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, depth: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={expand}\r\n              label=\"Expand\"\r\n              max={50}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, expand: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={bdBlur}\r\n              label=\"Background Blur\"\r\n              max={10}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, bdBlur: val })}\r\n              withInputField={false}\r\n            />\r\n            <div className=\"light_direction claymor\">\r\n              <RadioControl\r\n                selected={clayDirection}\r\n                options={[\r\n                  { value: 'right_bottom' },\r\n                  { value: 'top_right' },\r\n                  { value: 'top' },\r\n                ]}\r\n                onChange={(changeOption) => setShadowState({ ...shadowState, clayDirection: changeOption })}\r\n              />\r\n            </div>\r\n          </PanelBody>\r\n        }\r\n\r\n        {shadowType === 'glassmor' &&\r\n          <PanelBody title={__(\"Grassmophism settings\", 'itmar_block_collections')} initialOpen={false}>\r\n            <RangeControl\r\n              value={glassblur}\r\n              label={__(\"Glass blur\", 'itmar_block_collections')}\r\n              max={20}\r\n              min={0}\r\n              onChange={(val) => setShadowState({ ...shadowState, glassblur: val })}\r\n              withInputField={false}\r\n            />\r\n            <RangeControl\r\n              value={glassopa}\r\n              label={__(\"Glass Opacity\", 'itmar_block_collections')}\r\n              max={1}\r\n              min={0}\r\n              step={.1}\r\n              onChange={(val) => setShadowState({ ...shadowState, glassopa: val })}\r\n              withInputField={false}\r\n            />\r\n            <fieldset>\r\n              <ToggleControl\r\n                label={__(\"Show outline\", 'itmar_block_collections')}\r\n                checked={hasOutline}\r\n                onChange={() => setShadowState({ ...shadowState, hasOutline: !hasOutline })}\r\n              />\r\n            </fieldset>\r\n          </PanelBody>\r\n        }\r\n      </InspectorControls>\r\n\r\n      {children}\r\n\r\n    </>\r\n\r\n  );\r\n};\r\nexport default ShadowStyle;\r\n\r\n","import {\r\n  PanelBody,\r\n  PanelRow,\r\n  RadioControl,\r\n  ToggleControl,\r\n  __experimentalUnitControl as UnitControl,\r\n} from '@wordpress/components';\r\n\r\nimport Select from 'react-select';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nconst TypographyControls = ({ title, fontStyle, initialOpen, onChange }) => {\r\n  const {\r\n    fontSize,\r\n    fontFamily,\r\n    fontWeight,\r\n    isItalic\r\n  } = fontStyle;\r\n\r\n  const fontFamilyOptions = [\r\n    { value: 'Arial, sans-serif', label: 'Arial', fontFamily: 'Arial, sans-serif' },\r\n    { value: 'Courier New, monospace', label: 'Courier New', fontFamily: 'Courier New, monospace' },\r\n    { value: 'Georgia, serif', label: 'Georgia', fontFamily: 'Georgia, serif' },\r\n    { label: 'Noto Sans JP', value: 'Noto Sans JP, sans-serif', fontFamily: 'Noto Sans JP, sans-serif' },\r\n    { label: 'Texturina', value: 'Texturina, serif', fontFamily: 'Texturina, serif' },\r\n  ];\r\n\r\n  const units = [\r\n    { value: 'px', label: 'px' },\r\n    { value: 'em', label: 'em' },\r\n    { value: 'rem', label: 'rem' },\r\n  ];\r\n\r\n  const customStyles = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      fontFamily: state.data.fontFamily,\r\n    }),\r\n  };\r\n\r\n  const FontSelect = ({ label, value, onChange }) => (\r\n    <>\r\n      {label && <label className=\"components-base-control__label\">{label}</label>}\r\n      <Select\r\n        options={fontFamilyOptions}\r\n        value={fontFamilyOptions.find((option) => option.value === value)}\r\n        onChange={(newValue) => {\r\n          onChange(newValue.value);\r\n        }}\r\n        styles={customStyles}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <PanelBody title={title} initialOpen={initialOpen} >\r\n      <UnitControl\r\n        dragDirection=\"e\"\r\n        onChange={(newValue) => {\r\n          newValue = newValue != '' ? newValue : '0px'\r\n          const newStyle = { ...fontStyle, fontSize: newValue };\r\n          onChange(newStyle);\r\n        }}\r\n        label={__('Size', 'itmar_block_collections')}\r\n        value={fontSize}\r\n        units={units}\r\n      />\r\n\r\n      <FontSelect\r\n        label={__(\"font family\", 'itmar_block_collections')}\r\n        value={fontFamily}\r\n        onChange={(newValue) => {\r\n          const newStyle = { ...fontStyle, fontFamily: newValue };\r\n          onChange(newStyle);\r\n        }}\r\n      />\r\n\r\n      <label className=\"components-base-control__label\">{__('font weight', 'itmar_block_collections')}</label>\r\n      <PanelRow className='itmar_weight_row'>\r\n        <RadioControl\r\n          selected={fontWeight}\r\n          options={[\r\n            { label: 'LIGHT', value: \"300\" },\r\n            { label: 'REGULAR', value: \"400\" },\r\n            { label: 'MEDIUM', value: \"500\" },\r\n            { label: 'S-BOLD', value: \"600\" },\r\n            { label: 'BOLD', value: \"700\" },\r\n            { label: 'BLACK', value: \"900\" },\r\n          ]}\r\n          onChange={(newValue) => {\r\n            const newStyle = { ...fontStyle, fontWeight: newValue };\r\n            onChange(newStyle);\r\n          }}\r\n        />\r\n      </PanelRow>\r\n\r\n      <label className=\"components-base-control__label\">{__('Italic display', 'itmar_block_collections')}</label>\r\n      <ToggleControl\r\n        checked={isItalic}\r\n        onChange={(newValue) => {\r\n          const newStyle = { ...fontStyle, isItalic: newValue };\r\n          onChange(newStyle);\r\n        }}\r\n      />\r\n    </PanelBody>\r\n  );\r\n};\r\nexport default TypographyControls;\r\n","\nimport { __ } from '@wordpress/i18n';\nimport TypographyControls from '../TypographyControls'\nimport IconSelectControl from '../IconSelectControl';\nimport { StyleComp } from './StyleWapper';\nimport ShadowStyle from '../ShadowStyle';\nimport { PageSelectControl, ArchiveSelectControl } from '../wordpressApi';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useStyleIframe, useFontawesomeIframe } from '../iframeFooks';\nimport {\n\tButton,\n\tPanelBody,\n\tPanelRow,\n\tToggleControl,\n\tRangeControl,\n\tRadioControl,\n\tModal,\n\tTextControl,\n\tToolbarDropdownMenu,\n\t__experimentalBoxControl as BoxControl,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalBorderBoxControl as BorderBoxControl,\n\t__experimentalAlignmentMatrixControl as AlignmentMatrixControl\n} from '@wordpress/components';\nimport {\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n\tRichText,\n\tBlockControls,\n\tAlignmentToolbar,\n\tInspectorControls,\n\t__experimentalPanelColorGradientSettings as PanelColorGradientSettings,\n\t__experimentalBorderRadiusControl as BorderRadiusControl\n} from '@wordpress/block-editor';\n\nimport './editor.scss';\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n//スペースのリセットバリュー\nconst padding_resetValues = {\n\ttop: '10px',\n\tleft: '10px',\n\tright: '10px',\n\tbottom: '10px',\n}\n\n//ボーダーのリセットバリュー\nconst border_resetValues = {\n\ttop: '0px',\n\tleft: '0px',\n\tright: '0px',\n\tbottom: '0px',\n}\n\nconst units = [\n\t{ value: 'px', label: 'px' },\n\t{ value: 'em', label: 'em' },\n\t{ value: 'rem', label: 'rem' },\n];\n//ヘッダーレベルアイコン\nconst getIconForLevel = level => {\n\treturn (\n\t\t<svg width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<text x=\"0\" y=\"15\" fontSize=\"15\" font-weight=\"bold\">{`H${level}`}</text>\n\t\t</svg>\n\t);\n};\n\n\nexport default function Edit({ attributes, setAttributes, clientId }) {\n\tconst {\n\t\tbgColor,\n\t\theadingContent,\n\t\theadingType,\n\t\ttitleType,\n\t\tfont_style_heading,\n\t\tmargin_heading,\n\t\tpadding_heading,\n\t\talign,\n\t\tbg_heading,\n\t\tgr_heading,\n\t\ttextColor,\n\t\tradius_heading,\n\t\tborder_heading,\n\t\toptionStyle,\n\t\tshadow_element,\n\t\tis_shadow,\n\t\tis_underLine,\n\t\tunderLine_prop,\n\t\tbgColor_underLine,\n\t\tbgGradient_underLine,\n\t\tlinkKind,\n\t\tselectedPageUrl,\n\t\tclassName,\n\t} = attributes;\n\n\tconst blockProps = useBlockProps({ style: { backgroundColor: bgColor } });\n\n\t//最初の状態\n\tconst prevClassRef = useRef(false);\n\n\t// ローカル状態の作成\n\tconst [localOptionStyle, setLocalOptionStyle] = useState(optionStyle);\n\n\t// localOptionStyle の変更があるたびに setAttributes を呼び出す\n\tuseEffect(() => {\n\t\tsetAttributes({ optionStyle: localOptionStyle });\n\t}, [localOptionStyle]);\n\n\t// titleTypeの変更があるたびに titleの内容を変える\n\tconst [siteTitle, setSiteTitle] = useState('');\n\tuseEffect(() => {\n\t\tif (titleType === 'plaine') return;//plainのときは何もしない\n\n\t\tconst fetchSiteInfo = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await apiFetch({ path: '/' });\n\t\t\t\tif (titleType === 'site') {\n\t\t\t\t\tsetSiteTitle(response.name);\n\t\t\t\t} else {\n\t\t\t\t\tsetSiteTitle(response.description);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching data:', error.message);\n\t\t\t}\n\t\t};\n\t\tfetchSiteInfo();\n\t}, [titleType]);\n\n\t//スタイル変更時のデフォルト再設定\n\tconst execHandle = () => {\n\t\tlet reset_style;\n\t\tswitch (className) {\n\t\t\tcase 'is-style-circle_marker':\n\t\t\t\treset_style = {\n\t\t\t\t\tstyleName: 'is-style-circle_marker',\n\t\t\t\t\tcolorVal_circle: '#D1D7F2',\n\t\t\t\t\tcolorVal_second: '#9FAEF2',\n\t\t\t\t\tcircleScale: '3em',\n\t\t\t\t\tsecondScale: '1.5em',\n\t\t\t\t\tsecond_opacity: 0.7,\n\t\t\t\t\tfirst_long: 10,\n\t\t\t\t\tfirst_lat: -5,\n\t\t\t\t\tsecond_long: -10,\n\t\t\t\t\tsecond_lat: 10,\n\t\t\t\t\tisSecond: true\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'is-style-sub_copy':\n\t\t\t\treset_style = {\n\t\t\t\t\tstyleName: 'is-style-sub_copy',\n\t\t\t\t\talignment_copy: 'top left',\n\t\t\t\t\tcolor_text_copy: '#000',\n\t\t\t\t\tcolor_background_copy: '#d1cece',\n\t\t\t\t\tcopy_content: 'SAMPLE',\n\t\t\t\t\tfont_style_copy: {\n\t\t\t\t\t\tfontSize: \"16px\",\n\t\t\t\t\t\tfontFamily: \"Arial, sans-serif\",\n\t\t\t\t\t\tfontWeight: \"500\",\n\t\t\t\t\t\tisItalic: false\n\t\t\t\t\t},\n\t\t\t\t\tradius_copy: {\n\t\t\t\t\t\ttopLeft: \"10px\",\n\t\t\t\t\t\ttopRight: \"10px\",\n\t\t\t\t\t\tbottomRight: \"0px\",\n\t\t\t\t\t\tbottomLeft: \"0px\",\n\t\t\t\t\t\tvalue: \"0px\"\n\n\t\t\t\t\t},\n\t\t\t\t\tpadding_copy: {\n\t\t\t\t\t\ttop: \"10px\",\n\t\t\t\t\t\tleft: \"10px\",\n\t\t\t\t\t\tbottom: \"10px\",\n\t\t\t\t\t\tright: \"10px\"\n\n\t\t\t\t\t},\n\t\t\t\t\tisIcon: false,\n\t\t\t\t\ticon_style: {\n\t\t\t\t\t\ticon_name: \"f030\",\n\t\t\t\t\t\ticon_pos: \"left\",\n\t\t\t\t\t\ticon_size: \"24px\",\n\t\t\t\t\t\ticon_color: \"#000\",\n\t\t\t\t\t\ticon_space: \"5px\"\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tsetLocalOptionStyle(reset_style);\n\t\t//refの更新\n\t\tprevClassRef.current = className;\n\t\t//確認ダイアログを消す\n\t\tsetIsChangeModalOpen(false);\n\t}\n\n\tconst cancelHandle = () => {\n\t\t//キャンセルが押されたことを記録\n\t\tsetIsCancelFlg(true);\n\t\t//classNameを元に戻す\n\t\tsetAttributes({ className: prevClassRef.current })\n\t\t//確認ダイアログを消す\n\t\tsetIsChangeModalOpen(false);\n\t}\n\n\t//スタイル変更確認ダイアログ操作関数\n\tconst [isCangeModalOpen, setIsChangeModalOpen] = useState(false);\n\tconst [isCancelFlg, setIsCancelFlg] = useState(false);\n\n\t//スタイル変更によるoptionStyleの初期化\n\tuseEffect(() => {\n\t\tif (prevClassRef.current != false) {//最初のレンダリングでは初期化しない\n\t\t\tif (isCancelFlg) {\n\t\t\t\t//isCancelFlgがtrueのときはfalseに戻して何もしない\n\t\t\t\tsetIsCancelFlg(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (prevClassRef.current === undefined || prevClassRef.current === 'is-style-default') {\n\t\t\t\texecHandle();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t//確認ダイアログの表示\n\t\t\tsetIsChangeModalOpen(true);\n\t\t}\n\t\telse {\n\t\t\tprevClassRef.current = className;\n\t\t}\n\t}, [className])\n\n\t//サイトエディタの場合はiframeにスタイルをわたす。\n\tuseStyleIframe(StyleComp, attributes);\n\t//iframeにfontawesomeを読み込む\n\tuseFontawesomeIframe();\n\n\t//TextControlの表示用変数\n\tconst [copyInputValue, setCopyInputValue] = useState((optionStyle && optionStyle.copy_content !== undefined) ? optionStyle.copy_content : 'SAMPLE');\n\n\t//サブメニュー（インナーブロック）\n\tconst hasSelectedInnerBlock = useSelect((select) => {\n\t\treturn select('core/block-editor').hasSelectedInnerBlock(clientId, true);\n\t}, [clientId]);//ブロックの選択状態を把握\n\n\tconst subMenuBlocksProps = useInnerBlocksProps(\n\t\t{ className: `submenu-block ${hasSelectedInnerBlock ? 'visible' : ''}` },\n\t\t{\n\t\t\ttemplate: [['itmar/design-menu', {}]],\n\t\t\ttemplateLock: true\n\t\t}\n\t);\n\n\n\n\t//リッチテキストをコンテンツにする\n\tconst renderRichText = () => (\n\t\t<RichText\n\t\t\ttagName={headingType}\n\t\t\tclassName=\"has-text-color\"\n\t\t\tonChange={(newContent) => {\n\t\t\t\tsetAttributes({ headingContent: newContent });\n\t\t\t}}\n\t\t\tvalue={headingContent}\n\t\t\tplaceholder={__('Write Title text...', 'itmar_block_collections')}\n\t\t/>\n\t);\n\t//ヘッダー要素をコンテンツにする\n\tconst renderElement = () => (\n\t\tReact.createElement(\n\t\t\theadingType.toLowerCase(),\n\t\t\t{ className: \"has-text-color\" },\n\t\t\tsiteTitle\n\t\t)\n\t);\n\n\n\t//コンテンツの選択\n\tconst content = titleType === 'plaine'\n\t\t? renderRichText()\n\t\t: renderElement();\n\n\t//リンクを付加する\n\tfunction renderContent() {\n\t\treturn (\n\t\t\tcontent\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls group=\"settings\">\n\t\t\t\t<PanelBody title={__(\"Title Source Setting\", 'itmar_form_send_blocks')}>\n\t\t\t\t\t<div className='itmar_title_type'>\n\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\tlabel={__(\"Title type\", 'itmar_block_collections')}\n\t\t\t\t\t\t\tselected={titleType}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{ label: __(\"Plaine\", 'itmar_block_collections'), value: 'plaine' },\n\t\t\t\t\t\t\t\t{ label: __(\"Site Title\", 'itmar_block_collections'), value: 'site' },\n\t\t\t\t\t\t\t\t{ label: __(\"Chatch Phrase\", 'itmar_block_collections'), value: 'catch' }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tonChange={(changeOption) => setAttributes({ titleType: changeOption })}\n\t\t\t\t\t\t\thelp={__(\"You can display the site title and catchphrase in addition to the blank title.\", 'itmar_block_collections')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='itmar_link_type'>\n\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\tlabel={__(\"Link type\", 'itmar_block_collections')}\n\t\t\t\t\t\t\tselected={linkKind}\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t{ label: __(\"None\", 'itmar_block_collections'), value: 'none' },\n\t\t\t\t\t\t\t\t{ label: __(\"Fixed Page\", 'itmar_block_collections'), value: 'fixed' },\n\t\t\t\t\t\t\t\t{ label: __(\"Archive Page\", 'itmar_block_collections'), value: 'archive' },\n\t\t\t\t\t\t\t\t{ label: __(\"Free URL\", 'itmar_block_collections'), value: 'free' },\n\t\t\t\t\t\t\t\t{ label: __(\"Sub Menu\", 'itmar_block_collections'), value: 'submenu' }\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tonChange={(changeOption) => setAttributes({ linkKind: changeOption })}\n\t\t\t\t\t\t\thelp={__(\"You can select the type of URL to link to the title.\", 'itmar_block_collections')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{linkKind === 'fixed' &&\n\t\t\t\t\t\t<PageSelectControl\n\t\t\t\t\t\t\tattributes={attributes}\n\t\t\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t\t\t\tlabel={__(\"Select a fixed page to link to\", 'itmar_block_collections')}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t}\n\t\t\t\t\t{linkKind === 'archive' &&\n\t\t\t\t\t\t<ArchiveSelectControl\n\t\t\t\t\t\t\tattributes={attributes}\n\t\t\t\t\t\t\tsetAttributes={setAttributes}\n\t\t\t\t\t\t\tlabel={__(\"Select archive page to link to\", 'itmar_block_collections')}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t}\n\t\t\t\t\t{linkKind === 'free' &&\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__(\"Link to URL\", 'itmar_block_collections')}\n\t\t\t\t\t\t\tlabelPosition=\"top\"\n\t\t\t\t\t\t\tvalue={selectedPageUrl}\n\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\tsetAttributes({ selectedPageUrl: newValue });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t}\n\t\t\t\t</PanelBody>\n\n\t\t\t</InspectorControls >\n\n\t\t\t<InspectorControls group=\"styles\">\n\t\t\t\t<PanelBody title={__(\"Global settings\", 'itmar_block_collections')} initialOpen={false} className=\"title_design_ctrl\">\n\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\ttitle={__(\"Background Color Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolorValue: bgColor,\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Block Background color\", 'itmar_block_collections'),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) => setAttributes({ bgColor: newValue })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__('Is Shadow', 'itmar_block_collections')}\n\t\t\t\t\t\tchecked={is_shadow}\n\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\tsetAttributes({ is_shadow: newVal })\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__('Add an underline', 'itmar_block_collections')}\n\t\t\t\t\t\tchecked={is_underLine}\n\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\tsetAttributes({ is_underLine: newVal })\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{is_underLine &&\n\t\t\t\t\t\t<PanelBody title={__(\"UnderLine settings\", 'itmar_block_collections')} initialOpen={true} className=\"title_design_ctrl\">\n\t\t\t\t\t\t\t<PanelRow className='distance_row'>\n\t\t\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\t\t\tdragDirection=\"e\"\n\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\tconst newStyle = { ...underLine_prop, height: newValue };\n\t\t\t\t\t\t\t\t\t\tsetAttributes({ underLine_prop: newStyle });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Height\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\tvalue={underLine_prop.height}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\t\t\tdragDirection=\"e\"\n\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\tconst newStyle = { ...underLine_prop, width: newValue };\n\t\t\t\t\t\t\t\t\t\tsetAttributes({ underLine_prop: newStyle });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Width\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\tvalue={underLine_prop.width}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\t\t\tdragDirection=\"e\"\n\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\tconst newStyle = { ...underLine_prop, distance: newValue };\n\t\t\t\t\t\t\t\t\t\tsetAttributes({ underLine_prop: newStyle });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Distance\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\tvalue={underLine_prop.distance}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\t\t\ttitle={__(\"Under Line Color Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tsettings={[\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tcolorValue: bgColor_underLine,\n\t\t\t\t\t\t\t\t\t\tgradientValue: bgGradient_underLine,\n\t\t\t\t\t\t\t\t\t\tlabel: __(\"Choose Under Line color\", 'itmar_block_collections'),\n\n\t\t\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({ bgColor_underLine: newValue === undefined ? '' : newValue });\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tonGradientChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({ bgGradient_underLine: newValue })\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Animation on hover', 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tchecked={underLine_prop.is_anime}\n\t\t\t\t\t\t\t\tonChange={(newVal) => {\n\t\t\t\t\t\t\t\t\tconst newStyle = { ...underLine_prop, is_anime: newVal };\n\t\t\t\t\t\t\t\t\tsetAttributes({ underLine_prop: newStyle })\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t}\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={__(\"Heading settings\", 'itmar_block_collections')} initialOpen={false} className=\"title_design_ctrl\">\n\t\t\t\t\t<TypographyControls\n\t\t\t\t\t\ttitle={__('Typography', 'itmar_block_collections')}\n\t\t\t\t\t\tfontStyle={font_style_heading}\n\t\t\t\t\t\tonChange={(newStyle) => {\n\t\t\t\t\t\t\tsetAttributes({ font_style_heading: newStyle })\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\ttitle={__(\"Heading Color Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\tsettings={[{\n\t\t\t\t\t\t\tcolorValue: textColor,\n\t\t\t\t\t\t\tlabel: __(\"Choose Text color\", 'itmar_block_collections'),\n\t\t\t\t\t\t\tonColorChange: (newValue) => setAttributes({ textColor: newValue }),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcolorValue: bg_heading,\n\t\t\t\t\t\t\tgradientValue: gr_heading,\n\n\t\t\t\t\t\t\tlabel: __(\"Choose Background color\", 'itmar_block_collections'),\n\t\t\t\t\t\t\tonColorChange: (newValue) => setAttributes({ bg_heading: newValue }),\n\t\t\t\t\t\t\tonGradientChange: (newValue) => setAttributes({ gr_heading: newValue }),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t\t<BoxControl\n\t\t\t\t\t\tlabel={__(\"Margin settings\", 'itmar_block_collections')}\n\t\t\t\t\t\tvalues={margin_heading}\n\t\t\t\t\t\tonChange={value => setAttributes({ margin_heading: value })}\n\t\t\t\t\t\tunits={units}\t// 許可する単位\n\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\tresetValues={padding_resetValues}\t// リセット時の値\n\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BoxControl\n\t\t\t\t\t\tlabel={__(\"Padding settings\", 'itmar_block_collections')}\n\t\t\t\t\t\tvalues={padding_heading}\n\t\t\t\t\t\tonChange={value => setAttributes({ padding_heading: value })}\n\t\t\t\t\t\tunits={units}\t// 許可する単位\n\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\tresetValues={padding_resetValues}\t// リセット時の値\n\n\t\t\t\t\t/>\n\t\t\t\t\t<PanelBody title={__(\"Border Settings\", 'itmar_block_collections')} initialOpen={false} className=\"border_design_ctrl\">\n\t\t\t\t\t\t<BorderBoxControl\n\t\t\t\t\t\t\tcolors={[{ color: '#72aee6' }, { color: '#000' }, { color: '#fff' }]}\n\t\t\t\t\t\t\tonChange={(newValue) => setAttributes({ border_heading: newValue })}\n\t\t\t\t\t\t\tvalue={border_heading}\n\t\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\t\tresetValues={border_resetValues}\t// リセット時の値\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<BorderRadiusControl\n\t\t\t\t\t\t\tvalues={radius_heading}\n\t\t\t\t\t\t\tonChange={(newBrVal) =>\n\t\t\t\t\t\t\t\tsetAttributes({ radius_heading: typeof newBrVal === 'string' ? { \"value\": newBrVal } : newBrVal })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</PanelBody>\n\n\n\t\t\t\t{className === 'is-style-circle_marker' &&\n\t\t\t\t\t<PanelBody title={__(\"Circle Marker Settings\", 'itmar_block_collections')} initialOpen={false} className=\"title_design_ctrl\">\n\t\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\t\ttitle={__(\"Circle Color Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\t\tsettings={[{\n\t\t\t\t\t\t\t\tcolorValue: (optionStyle && optionStyle.colorVal_circle) ? optionStyle.colorVal_circle : '#D1D7F2',\n\t\t\t\t\t\t\t\tgradientValue: (optionStyle && optionStyle.gradientVal_circle) ? optionStyle.gradientVal_circle : undefined,\n\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Circle Background\", 'itmar_block_collections'),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, colorVal_circle: newValue }));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonGradientChange: (newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, gradientVal_circle: newValue }));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\tdragDirection=\"e\"\n\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, circleScale: newValue }));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabel={__(\"Circle Scale Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.circleScale) ? optionStyle.circleScale : '3em'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PanelBody title={__(\"Position Settings\", 'itmar_block_collections')} initialOpen={true} className=\"title_design_ctrl\">\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.first_lat) ? optionStyle.first_lat : 10}\n\t\t\t\t\t\t\t\tlabel={__(\"Lateral direction\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\tmin={-30}\n\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, first_lat: newValue }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\twithInputField={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.first_long) ? optionStyle.first_long : 10}\n\t\t\t\t\t\t\t\tlabel={__(\"Longitudinal direction\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\tmin={-30}\n\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, first_long: newValue }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\twithInputField={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t<PanelBody title={__(\"Second Circle Settings\", 'itmar_block_collections')} initialOpen={true}>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Second Circle', 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tchecked={(optionStyle && optionStyle.isSecond) ? optionStyle.isSecond : true}\n\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, isSecond: newValue }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t{((optionStyle && optionStyle.isSecond) ? optionStyle.isSecond : false) &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\t\t\t\ttitle={__(\"Circle Color Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\tsettings={[{\n\t\t\t\t\t\t\t\t\t\tcolorValue: (optionStyle && optionStyle.colorVal_second) ? optionStyle.colorVal_second : '#9FAEF2',\n\t\t\t\t\t\t\t\t\t\tgradientValue: (optionStyle && optionStyle.gradientVal_second) ? optionStyle.gradientVal_second : undefined,\n\n\t\t\t\t\t\t\t\t\t\tlabel: __(\"Choose Circle Background\", 'itmar_block_collections'),\n\t\t\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, colorVal_second: newValue }));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tonGradientChange: (newValue) => {\n\t\t\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, gradientVal_second: newValue }));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.second_opacity) ? optionStyle.second_opacity : 0.7}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Opacity\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\tmax={1}\n\t\t\t\t\t\t\t\t\tmin={0.1}\n\t\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, second_opacity: newValue }));\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\twithInputField={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<UnitControl\n\t\t\t\t\t\t\t\t\tdragDirection=\"e\"\n\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, secondScale: newValue }));\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={__(\"Circle Scale Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.secondScale) ? optionStyle.secondScale : '1.5em'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<PanelBody title={__(\"Position Settings\", 'itmar_block_collections')} initialOpen={true} className=\"title_design_ctrl\">\n\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.second_lat) ? optionStyle.second_lat : 20}\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Lateral direction\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\t\t\tmin={-30}\n\t\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, second_lat: newValue }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\twithInputField={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.second_long) ? optionStyle.second_long : -10}\n\t\t\t\t\t\t\t\t\t\tlabel={__(\"Longitudinal direction\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\t\t\tmax={50}\n\t\t\t\t\t\t\t\t\t\tmin={-30}\n\t\t\t\t\t\t\t\t\t\tstep={1}\n\t\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, second_long: newValue }));\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\twithInputField={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</PanelBody>\n\t\t\t\t}\n\n\t\t\t\t{className === 'is-style-sub_copy' &&\n\t\t\t\t\t<PanelBody title={__(\"Sub Copy Settings\", 'itmar_block_collections')} initialOpen={false} className=\"title_design_ctrl\">\n\t\t\t\t\t\t<PanelColorGradientSettings\n\t\t\t\t\t\t\ttitle={__(\"Copy Color Setting\", 'itmar_block_collections')}\n\t\t\t\t\t\t\tsettings={[{\n\t\t\t\t\t\t\t\tcolorValue: (optionStyle && optionStyle.color_text_copy) ? optionStyle.color_text_copy : '#000',\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Text color\", 'itmar_block_collections'),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, color_text_copy: newValue }));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolorValue: (optionStyle && optionStyle.color_background_copy) ? optionStyle.color_background_copy : '#d1cece',\n\t\t\t\t\t\t\t\tgradientValue: (optionStyle && optionStyle.gradient_background_copy) ? optionStyle.gradient_background_copy : undefined,\n\n\t\t\t\t\t\t\t\tlabel: __(\"Choose Background color\", 'itmar_block_collections'),\n\t\t\t\t\t\t\t\tonColorChange: (newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, color_background_copy: newValue }));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonGradientChange: (newValue) => {\n\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, gradient_background_copy: newValue }));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<PanelRow className='copyInfo_row'>\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={__(\"Copy Text\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tlabelPosition=\"top\"\n\t\t\t\t\t\t\t\tvalue={copyInputValue}\n\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\tsetCopyInputValue(newValue);\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, copy_content: newValue }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t<PanelRow className='copyInfo_row'>\n\t\t\t\t\t\t\t<label>{__(\"Copy Alignment\", 'itmar_block_collections')}</label>\n\t\t\t\t\t\t\t<AlignmentMatrixControl\n\n\t\t\t\t\t\t\t\tvalue={(optionStyle && optionStyle.alignment_copy) ? optionStyle.alignment_copy : 'top left'}\n\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, alignment_copy: newValue }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\n\t\t\t\t\t\t<TypographyControls\n\t\t\t\t\t\t\ttitle={__('Typography', 'itmar_block_collections')}\n\t\t\t\t\t\t\tfontStyle={(optionStyle && optionStyle.font_style_copy) ? optionStyle.font_style_copy : {\n\t\t\t\t\t\t\t\tfontSize: \"16px\",\n\t\t\t\t\t\t\t\tfontFamily: \"Arial, sans-serif\",\n\t\t\t\t\t\t\t\tfontWeight: \"500\",\n\t\t\t\t\t\t\t\tisItalic: false\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinitialOpen={false}\n\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, font_style_copy: newValue }));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<PanelBody title={__(\"Border Settings\", 'itmar_block_collections')} initialOpen={true}>\n\t\t\t\t\t\t\t<BorderRadiusControl\n\t\t\t\t\t\t\t\tvalues={(optionStyle && optionStyle.radius_copy) ? optionStyle.radius_copy : {\n\t\t\t\t\t\t\t\t\ttopLeft: \"10px\",\n\t\t\t\t\t\t\t\t\ttopRight: \"10px\",\n\t\t\t\t\t\t\t\t\tbottomRight: \"0px\",\n\t\t\t\t\t\t\t\t\tbottomLeft: \"0px\",\n\t\t\t\t\t\t\t\t\tvalue: \"0px\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={(newBrVal) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, radius_copy: typeof newBrVal === 'string' ? { \"value\": newBrVal } : newBrVal }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<BoxControl\n\t\t\t\t\t\t\t\tlabel={__(\"Padding settings\", 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tvalues={(optionStyle && optionStyle.padding_copy) ? optionStyle.padding_copy : {\n\t\t\t\t\t\t\t\t\ttop: \"10px\",\n\t\t\t\t\t\t\t\t\tleft: \"10px\",\n\t\t\t\t\t\t\t\t\tbottom: \"10px\",\n\t\t\t\t\t\t\t\t\tright: \"10px\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, padding_copy: newValue }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tunits={units}\t// 許可する単位\n\t\t\t\t\t\t\t\tallowReset={true}\t// リセットの可否\n\t\t\t\t\t\t\t\tresetValues={padding_resetValues}\t// リセット時の値\n\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t<PanelBody title={__(\"Icon settings\", 'itmar_block_collections')} initialOpen={true}>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Append icon', 'itmar_block_collections')}\n\t\t\t\t\t\t\t\tchecked={(optionStyle && optionStyle.isIcon) ? optionStyle.isIcon : false}\n\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, isIcon: newValue }));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{((optionStyle && optionStyle.isIcon) ? optionStyle.isIcon : false) &&\n\t\t\t\t\t\t\t\t<IconSelectControl\n\t\t\t\t\t\t\t\t\ticonStyle={(optionStyle && optionStyle.icon_style) ? optionStyle.icon_style : {\n\t\t\t\t\t\t\t\t\t\ticon_name: \"f030\",\n\t\t\t\t\t\t\t\t\t\ticon_pos: \"left\",\n\t\t\t\t\t\t\t\t\t\ticon_size: \"24px\",\n\t\t\t\t\t\t\t\t\t\ticon_color: \"#000\",\n\t\t\t\t\t\t\t\t\t\ticon_space: \"5px\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonChange={(newValue) => {\n\t\t\t\t\t\t\t\t\t\tsetLocalOptionStyle(prev => ({ ...prev, icon_style: newValue }));\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</PanelBody >\n\t\t\t\t}\n\t\t\t</InspectorControls >\n\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={align}\n\t\t\t\t\tonChange={(nextAlign) => {\n\t\t\t\t\t\tsetAttributes({ align: nextAlign });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ToolbarDropdownMenu\n\t\t\t\t\tlabel={__('Change heading level')}\n\t\t\t\t\ticon={getIconForLevel(parseInt(headingType.slice(1), 10))}\n\t\t\t\t\tcontrols={[1, 2, 3, 4, 5, 6].map(level => ({\n\t\t\t\t\t\ticon: getIconForLevel(level),\n\t\t\t\t\t\ttitle: `Heading ${level}`,\n\t\t\t\t\t\tisActive: headingType === `H${level}`,\n\t\t\t\t\t\tonClick: () => setAttributes({ headingType: `H${level}` }),\n\t\t\t\t\t}))}\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t{isCangeModalOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={__(\"Confirm Deletion\", 'itmar_block_collections')}\n\t\t\t\t\tonRequestClose={cancelHandle}\n\t\t\t\t>\n\t\t\t\t\t<p>{__(\"Changing a style resets the style-specific settings. Are you sure?\", 'itmar_block_collections')}</p>\n\t\t\t\t\t<Button variant=\"primary\" onClick={execHandle}>{__(\"Yes, Change\", 'itmar_block_collections')}</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={cancelHandle}>{__(\"Cancel\", 'itmar_block_collections')}</Button>\n\t\t\t\t</Modal>\n\t\t\t)}\n\n\n\t\t\t<div {...blockProps}>\n\t\t\t\t<StyleComp attributes={attributes}>\n\t\t\t\t\t{is_shadow ? (\n\t\t\t\t\t\t<ShadowStyle\n\t\t\t\t\t\t\tshadowStyle={{ ...shadow_element, backgroundColor: bgColor }}\n\t\t\t\t\t\t\tonChange={(newStyle, newState) => {\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_result: newStyle.style });\n\t\t\t\t\t\t\t\tsetAttributes({ shadow_element: newState })\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{renderContent()}\n\t\t\t\t\t\t</ShadowStyle>\n\t\t\t\t\t) : (\n\t\t\t\t\t\trenderContent()\n\n\t\t\t\t\t)}\n\n\t\t\t\t</StyleComp>\n\t\t\t\t{linkKind === 'submenu' &&\n\t\t\t\t\t<div {...subMenuBlocksProps}></div>\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t</>\n\t);\n}\n","export function hslToRgb16(hue, saturation, lightness) {\r\n\tvar result = false;\r\n\r\n\tif (((hue || hue === 0) && hue <= 360) && ((saturation || saturation === 0) && saturation <= 100) && ((lightness || lightness === 0) && lightness <= 100)) {\r\n\t\tvar red   = 0,\r\n\t\t    green = 0,\r\n\t\t    blue  = 0,\r\n\t\t    q     = 0,\r\n\t\t    p     = 0,\r\n\t\t    hueToRgb;\r\n\r\n\t\thue        = Number(hue)        / 360;\r\n\t\tsaturation = Number(saturation) / 100;\r\n\t\tlightness  = Number(lightness)  / 100;\r\n\r\n\t\tif (saturation === 0) {\r\n\t\t\tred   = lightness;\r\n\t\t\tgreen = lightness;\r\n\t\t\tblue  = lightness;\r\n\t\t} else {\r\n\t\t\thueToRgb = function(p, q, t) {\r\n\t\t\t\tif (t < 0) t += 1;\r\n\t\t\t\tif (t > 1) t -= 1;\r\n\r\n\t\t\t\tif (t < 1 / 6) {\r\n\t\t\t\t\tp += (q - p) * 6 * t;\r\n\t\t\t\t} else if (t < 1 / 2) {\r\n\t\t\t\t\tp = q;\r\n\t\t\t\t} else if (t < 2 / 3) {\r\n\t\t\t\t\tp += (q - p) * (2 / 3 - t) * 6;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn p;\r\n\t\t\t};\r\n\r\n\t\t\tif (lightness < 0.5) {\r\n\t\t\t\tq = lightness * (1 + saturation);\r\n\t\t\t} else {\r\n\t\t\t\tq = lightness + saturation - lightness * saturation;\r\n\t\t\t}\r\n\t\t\tp = 2 * lightness - q;\r\n\r\n\t\t\tred   = hueToRgb(p, q, hue + 1 / 3);\r\n\t\t\tgreen = hueToRgb(p, q, hue);\r\n\t\t\tblue  = hueToRgb(p, q, hue - 1 / 3);\r\n\t\t}\r\n\r\n    result = `#${Math.round(red * 255).toString(16).padStart( 2, '0')}${Math.round(green * 255).toString(16).padStart( 2, '0')}${Math.round(blue * 255).toString(16).padStart( 2, '0')}`;\r\n\t\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\t\r\n\r\n\r\nexport function rgb16ToHsl(strRgb16) {\r\n  let rgb = strRgb16.match(/\\#([a-fA-F0-9]{2})([a-fA-Z0-9]{2})([a-fA-F0-9]{2})/);\r\n  let red = rgb[1];\r\n  let green = rgb[2];\r\n  let blue = rgb[3];\r\n\tlet result = false;\r\n\r\n\tif (((red || red === 0) && String(red).match(/^[0-9a-f]{2}$/i)) && ((green || green === 0) && String(green).match(/^[0-9a-f]{2}$/i)) && ((blue || blue === 0) && String(blue).match(/^[0-9a-f]{2}$/i))) {\r\n\t\tlet hue        = 0,\r\n\t\t    saturation = 0,\r\n\t\t    lightness  = 0,\r\n\t\t    max        = 0,\r\n\t\t    min        = 0,\r\n\t\t    diff       = 0;\r\n\r\n\t\tred       = parseInt(red,   16) / 255;\r\n\t\tgreen     = parseInt(green, 16) / 255;\r\n\t\tblue      = parseInt(blue,  16) / 255;\r\n\t\tmax       = Math.max(red, green, blue);\r\n\t\tmin       = Math.min(red, green, blue);\r\n\t\tlightness = (max + min) / 2;\r\n\r\n\t\tif (max !== min) {\r\n\t\t\tdiff = max - min;\r\n\r\n\t\t\tif (lightness > 0.5) {\r\n\t\t\t\tsaturation = diff / (2 - max - min);\r\n\t\t\t} else {\r\n\t\t\t\tsaturation = diff / (max + min);\r\n\t\t\t}\r\n\r\n\t\t\tif (max === red) {\r\n\t\t\t\thue = (green - blue) / diff;\r\n\t\t\t} else if (max === green) {\r\n\t\t\t\thue = 2 + (blue - red) / diff;\r\n\t\t\t} else {\r\n\t\t\t\thue = 4 + (red - green) / diff;\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\t\t}\r\n\r\n\t\tresult = {\r\n\t\t\thue        : Math.round(hue        * 360),\r\n\t\t\tsaturation : Math.round(saturation * 100),\r\n\t\t\tlightness  : Math.round(lightness  * 100)\r\n\t\t};\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport function HexToRGB(strRgb16) {\r\n  let rgb = strRgb16.match(/\\#([a-fA-F0-9]{2})([a-fA-Z0-9]{2})([a-fA-F0-9]{2})/);\r\n  let red = rgb[1];\r\n  let green = rgb[2];\r\n  let blue = rgb[3];\r\n\tlet result = false;\r\n\r\n\tif (((red || red === 0) && String(red).match(/^[0-9a-f]{2}$/i)) && ((green || green === 0) && String(green).match(/^[0-9a-f]{2}$/i)) && ((blue || blue === 0) && String(blue).match(/^[0-9a-f]{2}$/i))) {\r\n\t\t\r\n\r\n\t\tred       = parseInt(red,   16);\r\n\t\tgreen     = parseInt(green, 16);\r\n\t\tblue      = parseInt(blue,  16);\r\n\t\t\r\n\r\n\t\tresult = {\r\n\t\t\tred   : Math.round(red),\r\n\t\t\tgreen : Math.round(green),\r\n\t\t\tblue  : Math.round(blue)\r\n\t\t};\r\n\t}\r\n\r\n\treturn result;\r\n};","import { useEffect } from '@wordpress/element';\r\nimport { useDeepCompareEffect } from './CustomFooks';\r\nimport { ServerStyleSheet } from 'styled-components';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\n\r\nexport function useStyleIframe(StyleComp, attributes) {\r\n  //サイトエディタの場合はiframeにスタイルをわたす。\r\n  useDeepCompareEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const sheet = new ServerStyleSheet();\r\n      renderToString(sheet.collectStyles(<StyleComp attributes={attributes} />));\r\n      const styleTags = sheet.getStyleTags();\r\n      const styleContent = styleTags.replace(/<style[^>]*>|<\\/style>/g, '');\r\n\r\n      const iframeStyleTag = iframeDocument.createElement('style');\r\n      iframeStyleTag.innerHTML = styleContent;\r\n\r\n      // Append the new style tag to the iframe's document head\r\n      iframeDocument.head.appendChild(iframeStyleTag);\r\n      // Return a cleanup function to remove the style tag\r\n      return () => {\r\n        iframeDocument.head.removeChild(iframeStyleTag);\r\n      };\r\n    }\r\n  }, [attributes]);\r\n}\r\n\r\nexport function useFontawesomeIframe() {\r\n  //iframeにfontawesomeを読み込む\r\n  useEffect(() => {\r\n    const iframeInstance = document.getElementsByName('editor-canvas')[0];\r\n\r\n    if (iframeInstance) {\r\n      const iframeDocument = iframeInstance.contentDocument || iframeInstance.contentWindow.document;\r\n      const scriptElement = iframeDocument.createElement(\"script\");\r\n      scriptElement.setAttribute(\"src\", \"https://kit.fontawesome.com/3e425ac06b.js\");\r\n      scriptElement.setAttribute(\"crossorigin\", \"anonymous\");\r\n\r\n      iframeDocument.body.appendChild(scriptElement);\r\n\r\n      // Return a cleanup function to remove the script tag\r\n      return () => {\r\n        iframeDocument.body?.removeChild(scriptElement);\r\n      };\r\n    }\r\n  }, []);\r\n}\r\n\r\n","import { useState, useEffect } from '@wordpress/element';\r\nimport { ComboboxControl } from '@wordpress/components';\r\nimport apiFetch from '@wordpress/api-fetch';\r\n\r\n//コントロールのレンダリング関数\r\nconst SelectControl = ({ setAttributes, attributes, label, fetchOptions }) => {\r\n  const { selectedPageId } = attributes;\r\n  const [options, setOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const fetchedOptions = await fetchOptions();\r\n        setOptions(fetchedOptions);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [fetchOptions]);\r\n\r\n  const handleChange = (selectedId) => {\r\n    const selectedPage = options.find(page => page.value === selectedId);\r\n    setAttributes({\r\n      selectedPageId: selectedId,\r\n      selectedPageUrl: selectedPage ? selectedPage.link : '/'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ComboboxControl\r\n      label={label}\r\n      options={options}\r\n      value={selectedPageId}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport const fetchPagesOptions = async () => {\r\n  const pages = await apiFetch({ path: '/wp/v2/pages' });\r\n  if (pages && !pages.some(page => page.id === -1)) {\r\n    pages.unshift({ id: -1, title: { rendered: 'ホーム' }, link: '/' });\r\n  }\r\n  return pages ? pages.map(page => ({\r\n    value: page.id,\r\n    label: page.title.rendered,\r\n    link: page.link\r\n  })) : [];\r\n};\r\n\r\nexport const fetchArchiveOptions = async () => {\r\n  const response = await apiFetch({ path: '/wp/v2/types' });\r\n  let idCounter = 0;\r\n  return Object.keys(response).reduce((acc, key) => {\r\n    const postType = response[key];\r\n    if (postType.has_archive === true) {\r\n      acc.push({ value: idCounter++, link: `/${postType.slug}`, label: postType.name });\r\n    } else if (typeof postType.has_archive === 'string') {\r\n      acc.push({ value: idCounter++, link: `/${postType.has_archive}`, label: postType.name });\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\nexport const PageSelectControl = (props) => (\r\n  <SelectControl {...props} fetchOptions={fetchPagesOptions} />\r\n);\r\n\r\nexport const ArchiveSelectControl = (props) => (\r\n  <SelectControl {...props} fetchOptions={fetchArchiveOptions} />\r\n);\r\n"],"names":["useDeepCompareEffect","callback","dependencies","dependenciesRef","useRef","isEqual","current","useEffect","helpLink","createElement","href","target","helpText","__","units","value","label","_ref","iconStyle","onChange","icon_name","icon_pos","icon_size","icon_color","icon_space","Fragment","TextControl","help","labelPosition","isPressEnterToChange","newValue","newStyle","PanelRow","className","UnitControl","dragDirection","PanelColorSettings","title","initialOpen","colorSettings","RadioControl","selected","options","dirctionDigit","direction","distance","destTopLeft","destTopRight","destBottomLeft","destBottomRight","topLeft","topRight","bottomLeft","bottmRight","isGradient","colorValue","includes","shadowStyle","children","shadowState","setShadowState","useState","shadowType","spread","lateral","longitude","nomalBlur","shadowColor","blur","intensity","newDirection","clayDirection","embos","opacity","depth","bdBlur","expand","glassblur","glassopa","hasOutline","backgroundColor","shadowElm","style","boxShadow","baseColor","dispatch","createNotice","type","isDismissible","hslValue","rgb16ToHsl","lightVal","lightness","darkVal","lightValue","hslToRgb16","hue","saturation","darkValue","dircObj","baseStyle","border","background","rgbValue","HexToRGB","outsetObj","insetObj","backdropFilter","red","green","blue","borderRightColor","borderBottomColor","ShadowElm","InspectorControls","group","PanelBody","changeOption","RangeControl","max","min","val","withInputField","PanelColorGradientSettings","settings","onColorChange","step","ToggleControl","checked","fontStyle","fontSize","fontFamily","fontWeight","isItalic","fontFamilyOptions","customStyles","option","provided","state","data","_ref2","Select","find","styles","padding_resetValues","top","left","right","bottom","border_resetValues","getIconForLevel","level","width","height","xmlns","x","y","Edit","attributes","setAttributes","clientId","bgColor","headingContent","headingType","titleType","font_style_heading","margin_heading","padding_heading","align","bg_heading","gr_heading","textColor","radius_heading","border_heading","optionStyle","shadow_element","is_shadow","is_underLine","underLine_prop","bgColor_underLine","bgGradient_underLine","linkKind","selectedPageUrl","blockProps","useBlockProps","prevClassRef","localOptionStyle","setLocalOptionStyle","siteTitle","setSiteTitle","async","response","apiFetch","path","name","description","error","console","message","fetchSiteInfo","execHandle","reset_style","styleName","colorVal_circle","colorVal_second","circleScale","secondScale","second_opacity","first_long","first_lat","second_long","second_lat","isSecond","alignment_copy","color_text_copy","color_background_copy","copy_content","font_style_copy","radius_copy","bottomRight","padding_copy","isIcon","icon_style","setIsChangeModalOpen","cancelHandle","setIsCancelFlg","isCangeModalOpen","isCancelFlg","undefined","useStyleIframe","StyleComp","useFontawesomeIframe","copyInputValue","setCopyInputValue","hasSelectedInnerBlock","useSelect","select","subMenuBlocksProps","useInnerBlocksProps","template","templateLock","content","RichText","tagName","newContent","placeholder","React","toLowerCase","renderContent","PageSelectControl","ArchiveSelectControl","newVal","gradientValue","onGradientChange","is_anime","TypographyControls","BoxControl","values","allowReset","resetValues","BorderBoxControl","colors","color","BorderRadiusControl","newBrVal","gradientVal_circle","prev","gradientVal_second","gradient_background_copy","AlignmentMatrixControl","IconSelectControl","BlockControls","AlignmentToolbar","nextAlign","ToolbarDropdownMenu","icon","parseInt","slice","controls","map","isActive","onClick","Modal","onRequestClose","Button","variant","ShadowStyle","newState","shadow_result","result","hueToRgb","q","p","Number","t","Math","round","toString","padStart","strRgb16","rgb","match","String","diff","iframeInstance","document","getElementsByName","iframeDocument","contentDocument","contentWindow","sheet","ServerStyleSheet","renderToString","collectStyles","styleContent","getStyleTags","replace","iframeStyleTag","innerHTML","head","appendChild","removeChild","scriptElement","setAttribute","body","SelectControl","fetchOptions","selectedPageId","setOptions","fetchedOptions","fetchData","ComboboxControl","selectedId","selectedPage","page","link","fetchPagesOptions","pages","some","id","unshift","rendered","fetchArchiveOptions","idCounter","Object","keys","reduce","acc","key","postType","has_archive","push","slug","props","_extends"],"sourceRoot":""}